
RPM_measurement.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000001c  00800100  00001404  00001498  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001404  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000033  0080011c  0080011c  000014b4  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000014b4  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001510  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000c8  00000000  00000000  00001550  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000efd  00000000  00000000  00001618  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000b2b  00000000  00000000  00002515  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000715  00000000  00000000  00003040  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001e8  00000000  00000000  00003758  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000005ef  00000000  00000000  00003940  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000460  00000000  00000000  00003f2f  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000088  00000000  00000000  0000438f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 b7 00 	jmp	0x16e	; 0x16e <__ctors_end>
       4:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
       8:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
       c:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
      10:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
      14:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
      18:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
      1c:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
      20:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
      24:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
      28:	0c 94 22 01 	jmp	0x244	; 0x244 <__vector_10>
      2c:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
      30:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
      34:	0c 94 4c 01 	jmp	0x298	; 0x298 <__vector_13>
      38:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
      3c:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
      40:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
      44:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
      48:	0c 94 63 02 	jmp	0x4c6	; 0x4c6 <__vector_18>
      4c:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
      50:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
      54:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
      58:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
      5c:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
      60:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
      64:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
      68:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>

0000006c <__trampolines_end>:
      6c:	6e 61       	ori	r22, 0x1E	; 30
      6e:	6e 00       	.word	0x006e	; ????

00000070 <__c.2332>:
      70:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      80:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
      90:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
      a0:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
      b0:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
      c0:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
      d0:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
      e0:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
      f0:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
     100:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     110:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     120:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     130:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     140:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     150:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     160:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

0000016e <__ctors_end>:
     16e:	11 24       	eor	r1, r1
     170:	1f be       	out	0x3f, r1	; 63
     172:	cf ef       	ldi	r28, 0xFF	; 255
     174:	d4 e0       	ldi	r29, 0x04	; 4
     176:	de bf       	out	0x3e, r29	; 62
     178:	cd bf       	out	0x3d, r28	; 61

0000017a <__do_copy_data>:
     17a:	11 e0       	ldi	r17, 0x01	; 1
     17c:	a0 e0       	ldi	r26, 0x00	; 0
     17e:	b1 e0       	ldi	r27, 0x01	; 1
     180:	e4 e0       	ldi	r30, 0x04	; 4
     182:	f4 e1       	ldi	r31, 0x14	; 20
     184:	02 c0       	rjmp	.+4      	; 0x18a <__do_copy_data+0x10>
     186:	05 90       	lpm	r0, Z+
     188:	0d 92       	st	X+, r0
     18a:	ac 31       	cpi	r26, 0x1C	; 28
     18c:	b1 07       	cpc	r27, r17
     18e:	d9 f7       	brne	.-10     	; 0x186 <__do_copy_data+0xc>

00000190 <__do_clear_bss>:
     190:	21 e0       	ldi	r18, 0x01	; 1
     192:	ac e1       	ldi	r26, 0x1C	; 28
     194:	b1 e0       	ldi	r27, 0x01	; 1
     196:	01 c0       	rjmp	.+2      	; 0x19a <.do_clear_bss_start>

00000198 <.do_clear_bss_loop>:
     198:	1d 92       	st	X+, r1

0000019a <.do_clear_bss_start>:
     19a:	af 34       	cpi	r26, 0x4F	; 79
     19c:	b2 07       	cpc	r27, r18
     19e:	e1 f7       	brne	.-8      	; 0x198 <.do_clear_bss_loop>
     1a0:	0e 94 fc 01 	call	0x3f8	; 0x3f8 <main>
     1a4:	0c 94 00 0a 	jmp	0x1400	; 0x1400 <_exit>

000001a8 <__bad_interrupt>:
     1a8:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001ac <AC_driver_init>:
	 * AC CONFIG *
	 *************/
	// TODO:
	// Disable the digital input buffers on AN0 and AN1 to reduce power consumption.
	// See the DIDR1 register description for more info.
	DIDR1 = (1 << AIN1D) | (1 << AIN0D);
     1ac:	83 e0       	ldi	r24, 0x03	; 3
     1ae:	80 93 7f 00 	sts	0x007F, r24	; 0x80007f <__TEXT_REGION_LENGTH__+0x7e007f>

	// TODO:
	// Connect the AC output to the AC0 pin.
	// The datasheet if screwed up. It says "Analog Comparator Control and Status Register C", meanwhile the name of this register is "ACSR0",
	// but in the avr/io.g header this register can be reached with the "ACSRB" macro.
	ACSRB |= 1 << ACOE;
     1b2:	8f b5       	in	r24, 0x2f	; 47
     1b4:	81 60       	ori	r24, 0x01	; 1
     1b6:	8f bd       	out	0x2f, r24	; 47

	// TODO:
	// Configure the rest settings properly :)
	// AC output connected to TC1 input capture
	ACSR = 0;
     1b8:	10 be       	out	0x30, r1	; 48
	ACSR |= 1 << ACIC;
     1ba:	80 b7       	in	r24, 0x30	; 48
     1bc:	84 60       	ori	r24, 0x04	; 4
     1be:	80 bf       	out	0x30, r24	; 48
     1c0:	08 95       	ret

000001c2 <get_rpm>:
}

float get_rpm()
{
     1c2:	cf 92       	push	r12
     1c4:	df 92       	push	r13
     1c6:	ef 92       	push	r14
     1c8:	ff 92       	push	r15
     1ca:	0f 93       	push	r16
     1cc:	1f 93       	push	r17
     1ce:	cf 93       	push	r28
     1d0:	df 93       	push	r29
	float freq = get_freq();
     1d2:	0e 94 7b 01 	call	0x2f6	; 0x2f6 <get_freq>
     1d6:	6b 01       	movw	r12, r22
     1d8:	7c 01       	movw	r14, r24
	float rpm = freq * FREQ_TO_RPM_CONST;
     1da:	20 e0       	ldi	r18, 0x00	; 0
     1dc:	30 e0       	ldi	r19, 0x00	; 0
     1de:	40 e0       	ldi	r20, 0x00	; 0
     1e0:	51 e4       	ldi	r21, 0x41	; 65
     1e2:	0e 94 0c 04 	call	0x818	; 0x818 <__mulsf3>
     1e6:	06 2f       	mov	r16, r22
     1e8:	17 2f       	mov	r17, r23
     1ea:	d8 2f       	mov	r29, r24
     1ec:	c9 2f       	mov	r28, r25

	// Check if freq is invalid
	if (freq < 0) {
     1ee:	20 e0       	ldi	r18, 0x00	; 0
     1f0:	30 e0       	ldi	r19, 0x00	; 0
     1f2:	a9 01       	movw	r20, r18
     1f4:	c7 01       	movw	r24, r14
     1f6:	b6 01       	movw	r22, r12
     1f8:	0e 94 e3 02 	call	0x5c6	; 0x5c6 <__cmpsf2>
     1fc:	88 23       	and	r24, r24
     1fe:	4c f4       	brge	.+18     	; 0x212 <get_rpm+0x50>
		return prev_valid_rpm;
     200:	00 91 1c 01 	lds	r16, 0x011C	; 0x80011c <__data_end>
     204:	10 91 1d 01 	lds	r17, 0x011D	; 0x80011d <__data_end+0x1>
     208:	d0 91 1e 01 	lds	r29, 0x011E	; 0x80011e <__data_end+0x2>
     20c:	c0 91 1f 01 	lds	r28, 0x011F	; 0x80011f <__data_end+0x3>
     210:	0c c0       	rjmp	.+24     	; 0x22a <get_rpm+0x68>
	} else {
		prev_valid_rpm = rpm;
     212:	80 2f       	mov	r24, r16
     214:	91 2f       	mov	r25, r17
     216:	ad 2f       	mov	r26, r29
     218:	bc 2f       	mov	r27, r28
     21a:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <__data_end>
     21e:	90 93 1d 01 	sts	0x011D, r25	; 0x80011d <__data_end+0x1>
     222:	a0 93 1e 01 	sts	0x011E, r26	; 0x80011e <__data_end+0x2>
     226:	b0 93 1f 01 	sts	0x011F, r27	; 0x80011f <__data_end+0x3>
		return rpm;
	}
     22a:	60 2f       	mov	r22, r16
     22c:	71 2f       	mov	r23, r17
     22e:	8d 2f       	mov	r24, r29
     230:	9c 2f       	mov	r25, r28
     232:	df 91       	pop	r29
     234:	cf 91       	pop	r28
     236:	1f 91       	pop	r17
     238:	0f 91       	pop	r16
     23a:	ff 90       	pop	r15
     23c:	ef 90       	pop	r14
     23e:	df 90       	pop	r13
     240:	cf 90       	pop	r12
     242:	08 95       	ret

00000244 <__vector_10>:
static volatile uint16_t prev_reg_value;
static volatile uint16_t ovf_value;
static volatile uint16_t ovf_cntr;

ISR(TIMER1_CAPT_vect)
{
     244:	1f 92       	push	r1
     246:	0f 92       	push	r0
     248:	0f b6       	in	r0, 0x3f	; 63
     24a:	0f 92       	push	r0
     24c:	11 24       	eor	r1, r1
     24e:	8f 93       	push	r24
     250:	9f 93       	push	r25
	ovf_value = ovf_cntr;
     252:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <ovf_cntr>
     256:	90 91 21 01 	lds	r25, 0x0121	; 0x800121 <ovf_cntr+0x1>
     25a:	90 93 23 01 	sts	0x0123, r25	; 0x800123 <ovf_value+0x1>
     25e:	80 93 22 01 	sts	0x0122, r24	; 0x800122 <ovf_value>
	ovf_cntr = 0;
     262:	10 92 21 01 	sts	0x0121, r1	; 0x800121 <ovf_cntr+0x1>
     266:	10 92 20 01 	sts	0x0120, r1	; 0x800120 <ovf_cntr>
	prev_reg_value = last_reg_value;
     26a:	80 91 26 01 	lds	r24, 0x0126	; 0x800126 <last_reg_value>
     26e:	90 91 27 01 	lds	r25, 0x0127	; 0x800127 <last_reg_value+0x1>
     272:	90 93 25 01 	sts	0x0125, r25	; 0x800125 <prev_reg_value+0x1>
     276:	80 93 24 01 	sts	0x0124, r24	; 0x800124 <prev_reg_value>
	last_reg_value = ICR1;
     27a:	80 91 86 00 	lds	r24, 0x0086	; 0x800086 <__TEXT_REGION_LENGTH__+0x7e0086>
     27e:	90 91 87 00 	lds	r25, 0x0087	; 0x800087 <__TEXT_REGION_LENGTH__+0x7e0087>
     282:	90 93 27 01 	sts	0x0127, r25	; 0x800127 <last_reg_value+0x1>
     286:	80 93 26 01 	sts	0x0126, r24	; 0x800126 <last_reg_value>
}
     28a:	9f 91       	pop	r25
     28c:	8f 91       	pop	r24
     28e:	0f 90       	pop	r0
     290:	0f be       	out	0x3f, r0	; 63
     292:	0f 90       	pop	r0
     294:	1f 90       	pop	r1
     296:	18 95       	reti

00000298 <__vector_13>:

ISR(TIMER1_OVF_vect)
{
     298:	1f 92       	push	r1
     29a:	0f 92       	push	r0
     29c:	0f b6       	in	r0, 0x3f	; 63
     29e:	0f 92       	push	r0
     2a0:	11 24       	eor	r1, r1
     2a2:	8f 93       	push	r24
     2a4:	9f 93       	push	r25
	ovf_cntr++;
     2a6:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <ovf_cntr>
     2aa:	90 91 21 01 	lds	r25, 0x0121	; 0x800121 <ovf_cntr+0x1>
     2ae:	01 96       	adiw	r24, 0x01	; 1
     2b0:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <ovf_cntr+0x1>
     2b4:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <ovf_cntr>
}
     2b8:	9f 91       	pop	r25
     2ba:	8f 91       	pop	r24
     2bc:	0f 90       	pop	r0
     2be:	0f be       	out	0x3f, r0	; 63
     2c0:	0f 90       	pop	r0
     2c2:	1f 90       	pop	r1
     2c4:	18 95       	reti

000002c6 <freq_meas_init>:

void freq_meas_init()
{
	// Variable initialization
	prev_reg_value = last_reg_value = ovf_cntr = 0;
     2c6:	10 92 21 01 	sts	0x0121, r1	; 0x800121 <ovf_cntr+0x1>
     2ca:	10 92 20 01 	sts	0x0120, r1	; 0x800120 <ovf_cntr>
     2ce:	10 92 27 01 	sts	0x0127, r1	; 0x800127 <last_reg_value+0x1>
     2d2:	10 92 26 01 	sts	0x0126, r1	; 0x800126 <last_reg_value>
     2d6:	10 92 25 01 	sts	0x0125, r1	; 0x800125 <prev_reg_value+0x1>
     2da:	10 92 24 01 	sts	0x0124, r1	; 0x800124 <prev_reg_value>
	 **************/
	// TODO:
	// Configure the TC1 timer properly :)

	// TC1 Input capture interrupt enable
	TIMSK1 |= 1 << ICIE1;
     2de:	ef e6       	ldi	r30, 0x6F	; 111
     2e0:	f0 e0       	ldi	r31, 0x00	; 0
     2e2:	80 81       	ld	r24, Z
     2e4:	80 62       	ori	r24, 0x20	; 32
     2e6:	80 83       	st	Z, r24
	// TC1 overflow interrupt enable
	TIMSK1 |= 1 << TOIE1;
     2e8:	80 81       	ld	r24, Z
     2ea:	81 60       	ori	r24, 0x01	; 1
     2ec:	80 83       	st	Z, r24
	// TC1 clock select, this will also start the timer!
	TCCR1B = CS_DEFAULT;
     2ee:	83 e0       	ldi	r24, 0x03	; 3
     2f0:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
     2f4:	08 95       	ret

000002f6 <get_freq>:
}

float get_freq()
{
     2f6:	8f 92       	push	r8
     2f8:	9f 92       	push	r9
     2fa:	af 92       	push	r10
     2fc:	bf 92       	push	r11
     2fe:	cf 92       	push	r12
     300:	df 92       	push	r13
     302:	ef 92       	push	r14
     304:	ff 92       	push	r15
     306:	0f 93       	push	r16
     308:	1f 93       	push	r17
	// The interrupts must be disabled while accessing variables which are used in interrupt handlers
	cli();
     30a:	f8 94       	cli
	// Copy the used variables as fast as possible.
	uint16_t last = last_reg_value;
     30c:	80 91 26 01 	lds	r24, 0x0126	; 0x800126 <last_reg_value>
     310:	90 91 27 01 	lds	r25, 0x0127	; 0x800127 <last_reg_value+0x1>
	uint16_t prev = prev_reg_value;
     314:	20 91 24 01 	lds	r18, 0x0124	; 0x800124 <prev_reg_value>
     318:	30 91 25 01 	lds	r19, 0x0125	; 0x800125 <prev_reg_value+0x1>
	uint16_t ovf = ovf_value;
     31c:	40 91 22 01 	lds	r20, 0x0122	; 0x800122 <ovf_value>
     320:	50 91 23 01 	lds	r21, 0x0123	; 0x800123 <ovf_value+0x1>
	sei();
     324:	78 94       	sei
	uint32_t steps = ((uint32_t)ovf) * (OVF_STEPS) + diff;


	// One of the variables should be casted to float
	float period = TC1_STEP_TIME_S * (float)steps;
	float freq =  1 / period;
     326:	60 e0       	ldi	r22, 0x00	; 0
     328:	70 e0       	ldi	r23, 0x00	; 0
     32a:	ba 01       	movw	r22, r20
     32c:	55 27       	eor	r21, r21
     32e:	44 27       	eor	r20, r20
     330:	a0 e0       	ldi	r26, 0x00	; 0
     332:	b0 e0       	ldi	r27, 0x00	; 0
     334:	82 1b       	sub	r24, r18
     336:	93 0b       	sbc	r25, r19
     338:	a1 09       	sbc	r26, r1
     33a:	b1 09       	sbc	r27, r1
     33c:	8a 01       	movw	r16, r20
     33e:	9b 01       	movw	r18, r22
     340:	08 0f       	add	r16, r24
     342:	19 1f       	adc	r17, r25
     344:	2a 1f       	adc	r18, r26
     346:	3b 1f       	adc	r19, r27
     348:	c9 01       	movw	r24, r18
     34a:	b8 01       	movw	r22, r16
     34c:	0e 94 5a 03 	call	0x6b4	; 0x6b4 <__floatunsisf>
     350:	2d eb       	ldi	r18, 0xBD	; 189
     352:	37 e3       	ldi	r19, 0x37	; 55
     354:	46 e8       	ldi	r20, 0x86	; 134
     356:	56 e3       	ldi	r21, 0x36	; 54
     358:	0e 94 0c 04 	call	0x818	; 0x818 <__mulsf3>
     35c:	9b 01       	movw	r18, r22
     35e:	ac 01       	movw	r20, r24
     360:	60 e0       	ldi	r22, 0x00	; 0
     362:	70 e0       	ldi	r23, 0x00	; 0
     364:	80 e8       	ldi	r24, 0x80	; 128
     366:	9f e3       	ldi	r25, 0x3F	; 63
     368:	0e 94 e8 02 	call	0x5d0	; 0x5d0 <__divsf3>
     36c:	6b 01       	movw	r12, r22
     36e:	7c 01       	movw	r14, r24

	// If you divide with zero in C the result will be NaN (not a number)
	// Check if the frequency is Nan, and return negative number in this case
	if (isnan(freq) || isinf(freq))
     370:	9b 01       	movw	r18, r22
     372:	ac 01       	movw	r20, r24
     374:	0e 94 79 04 	call	0x8f2	; 0x8f2 <__unordsf2>
     378:	81 11       	cpse	r24, r1
     37a:	1d c0       	rjmp	.+58     	; 0x3b6 <get_freq+0xc0>
     37c:	46 01       	movw	r8, r12
     37e:	57 01       	movw	r10, r14
     380:	e8 94       	clt
     382:	b7 f8       	bld	r11, 7
     384:	2f ef       	ldi	r18, 0xFF	; 255
     386:	3f ef       	ldi	r19, 0xFF	; 255
     388:	4f e7       	ldi	r20, 0x7F	; 127
     38a:	5f e7       	ldi	r21, 0x7F	; 127
     38c:	c5 01       	movw	r24, r10
     38e:	b4 01       	movw	r22, r8
     390:	0e 94 79 04 	call	0x8f2	; 0x8f2 <__unordsf2>
     394:	81 11       	cpse	r24, r1
     396:	0a c0       	rjmp	.+20     	; 0x3ac <get_freq+0xb6>
     398:	2f ef       	ldi	r18, 0xFF	; 255
     39a:	3f ef       	ldi	r19, 0xFF	; 255
     39c:	4f e7       	ldi	r20, 0x7F	; 127
     39e:	5f e7       	ldi	r21, 0x7F	; 127
     3a0:	c5 01       	movw	r24, r10
     3a2:	b4 01       	movw	r22, r8
     3a4:	0e 94 e3 02 	call	0x5c6	; 0x5c6 <__cmpsf2>
     3a8:	18 16       	cp	r1, r24
     3aa:	54 f0       	brlt	.+20     	; 0x3c0 <get_freq+0xca>
		return -1;
	else
		return freq;
     3ac:	5c 2d       	mov	r21, r12
     3ae:	4d 2d       	mov	r20, r13
     3b0:	3e 2d       	mov	r19, r14
     3b2:	2f 2d       	mov	r18, r15
     3b4:	09 c0       	rjmp	.+18     	; 0x3c8 <get_freq+0xd2>
	float freq =  1 / period;

	// If you divide with zero in C the result will be NaN (not a number)
	// Check if the frequency is Nan, and return negative number in this case
	if (isnan(freq) || isinf(freq))
		return -1;
     3b6:	50 e0       	ldi	r21, 0x00	; 0
     3b8:	40 e0       	ldi	r20, 0x00	; 0
     3ba:	30 e8       	ldi	r19, 0x80	; 128
     3bc:	2f eb       	ldi	r18, 0xBF	; 191
     3be:	04 c0       	rjmp	.+8      	; 0x3c8 <get_freq+0xd2>
     3c0:	50 e0       	ldi	r21, 0x00	; 0
     3c2:	40 e0       	ldi	r20, 0x00	; 0
     3c4:	30 e8       	ldi	r19, 0x80	; 128
     3c6:	2f eb       	ldi	r18, 0xBF	; 191
	else
		return freq;
     3c8:	65 2f       	mov	r22, r21
     3ca:	74 2f       	mov	r23, r20
     3cc:	83 2f       	mov	r24, r19
     3ce:	92 2f       	mov	r25, r18
     3d0:	1f 91       	pop	r17
     3d2:	0f 91       	pop	r16
     3d4:	ff 90       	pop	r15
     3d6:	ef 90       	pop	r14
     3d8:	df 90       	pop	r13
     3da:	cf 90       	pop	r12
     3dc:	bf 90       	pop	r11
     3de:	af 90       	pop	r10
     3e0:	9f 90       	pop	r9
     3e2:	8f 90       	pop	r8
     3e4:	08 95       	ret

000003e6 <system_init>:
#define LED_PORT		PORTB
#define LED_PORT_POS	PORTB5

void system_init()
{
	LED_DDR |= 1 << LED_DDR_POS;
     3e6:	25 9a       	sbi	0x04, 5	; 4
	AC_driver_init();
     3e8:	0e 94 d6 00 	call	0x1ac	; 0x1ac <AC_driver_init>
	freq_meas_init();
     3ec:	0e 94 63 01 	call	0x2c6	; 0x2c6 <freq_meas_init>
	UART_init();
     3f0:	0e 94 97 02 	call	0x52e	; 0x52e <UART_init>
	sei();
     3f4:	78 94       	sei
     3f6:	08 95       	ret

000003f8 <main>:
}

int main(void)
{
     3f8:	cf 93       	push	r28
     3fa:	df 93       	push	r29
     3fc:	cd b7       	in	r28, 0x3d	; 61
     3fe:	de b7       	in	r29, 0x3e	; 62
     400:	6c 97       	sbiw	r28, 0x1c	; 28
     402:	0f b6       	in	r0, 0x3f	; 63
     404:	f8 94       	cli
     406:	de bf       	out	0x3e, r29	; 62
     408:	0f be       	out	0x3f, r0	; 63
     40a:	cd bf       	out	0x3d, r28	; 61

	// Don't forget to call the init function :)
	system_init();
     40c:	0e 94 f3 01 	call	0x3e6	; 0x3e6 <system_init>

	// Setting up STDIO input and output buffer
	// You don't have to understand this!
	//----- START OF STDIO IO BUFFER SETUP
	FILE UART_output = FDEV_SETUP_STREAM((void *)UART_send_character, NULL, _FDEV_SETUP_WRITE);
     410:	8e e0       	ldi	r24, 0x0E	; 14
     412:	de 01       	movw	r26, r28
     414:	11 96       	adiw	r26, 0x01	; 1
     416:	fd 01       	movw	r30, r26
     418:	28 2f       	mov	r18, r24
     41a:	11 92       	st	Z+, r1
     41c:	2a 95       	dec	r18
     41e:	e9 f7       	brne	.-6      	; 0x41a <__LOCK_REGION_LENGTH__+0x1a>
     420:	92 e0       	ldi	r25, 0x02	; 2
     422:	9c 83       	std	Y+4, r25	; 0x04
     424:	28 eb       	ldi	r18, 0xB8	; 184
     426:	32 e0       	ldi	r19, 0x02	; 2
     428:	3a 87       	std	Y+10, r19	; 0x0a
     42a:	29 87       	std	Y+9, r18	; 0x09
	stdout = &UART_output;
     42c:	29 e4       	ldi	r18, 0x49	; 73
     42e:	31 e0       	ldi	r19, 0x01	; 1
     430:	f9 01       	movw	r30, r18
     432:	b3 83       	std	Z+3, r27	; 0x03
     434:	a2 83       	std	Z+2, r26	; 0x02
	FILE UART_input = FDEV_SETUP_STREAM(NULL, (void *)UART_get_character, _FDEV_SETUP_READ);
     436:	1e 96       	adiw	r26, 0x0e	; 14
     438:	fd 01       	movw	r30, r26
     43a:	11 92       	st	Z+, r1
     43c:	8a 95       	dec	r24
     43e:	e9 f7       	brne	.-6      	; 0x43a <__LOCK_REGION_LENGTH__+0x3a>
     440:	81 e0       	ldi	r24, 0x01	; 1
     442:	8a 8b       	std	Y+18, r24	; 0x12
     444:	80 ec       	ldi	r24, 0xC0	; 192
     446:	92 e0       	ldi	r25, 0x02	; 2
     448:	9a 8f       	std	Y+26, r25	; 0x1a
     44a:	89 8f       	std	Y+25, r24	; 0x19
	stdin = &UART_input;
     44c:	f9 01       	movw	r30, r18
     44e:	b1 83       	std	Z+1, r27	; 0x01
     450:	a0 83       	st	Z, r26
	//----- END OF STDIO IO BUFFER SETUP

	// Try printf
	printf("Startup...\r\n");
     452:	80 e0       	ldi	r24, 0x00	; 0
     454:	91 e0       	ldi	r25, 0x01	; 1
     456:	0e 94 72 09 	call	0x12e4	; 0x12e4 <puts>
		// The printf call will also take some time, so this won't be exactly 1Hz.
		LED_PORT |= 1 << LED_PORT_POS;
		_delay_ms(500);
		LED_PORT &= ~(1 << LED_PORT_POS);
		_delay_ms(500);
		printf("%f Hz\n", get_freq());
     45a:	0f 2e       	mov	r0, r31
     45c:	fc e0       	ldi	r31, 0x0C	; 12
     45e:	ef 2e       	mov	r14, r31
     460:	f1 e0       	ldi	r31, 0x01	; 1
     462:	ff 2e       	mov	r15, r31
     464:	f0 2d       	mov	r31, r0
		printf("%f RPM\n", get_rpm());
     466:	03 e1       	ldi	r16, 0x13	; 19
     468:	11 e0       	ldi	r17, 0x01	; 1

	// Infinite loop
	while (1) {
		// Generating an about 1Hz signal on the LED pin.
		// The printf call will also take some time, so this won't be exactly 1Hz.
		LED_PORT |= 1 << LED_PORT_POS;
     46a:	2d 9a       	sbi	0x05, 5	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     46c:	ff ef       	ldi	r31, 0xFF	; 255
     46e:	29 e6       	ldi	r18, 0x69	; 105
     470:	88 e1       	ldi	r24, 0x18	; 24
     472:	f1 50       	subi	r31, 0x01	; 1
     474:	20 40       	sbci	r18, 0x00	; 0
     476:	80 40       	sbci	r24, 0x00	; 0
     478:	e1 f7       	brne	.-8      	; 0x472 <__LOCK_REGION_LENGTH__+0x72>
     47a:	00 c0       	rjmp	.+0      	; 0x47c <__LOCK_REGION_LENGTH__+0x7c>
     47c:	00 00       	nop
		_delay_ms(500);
		LED_PORT &= ~(1 << LED_PORT_POS);
     47e:	2d 98       	cbi	0x05, 5	; 5
     480:	9f ef       	ldi	r25, 0xFF	; 255
     482:	e9 e6       	ldi	r30, 0x69	; 105
     484:	f8 e1       	ldi	r31, 0x18	; 24
     486:	91 50       	subi	r25, 0x01	; 1
     488:	e0 40       	sbci	r30, 0x00	; 0
     48a:	f0 40       	sbci	r31, 0x00	; 0
     48c:	e1 f7       	brne	.-8      	; 0x486 <__LOCK_REGION_LENGTH__+0x86>
     48e:	00 c0       	rjmp	.+0      	; 0x490 <__LOCK_REGION_LENGTH__+0x90>
     490:	00 00       	nop
		_delay_ms(500);
		printf("%f Hz\n", get_freq());
     492:	0e 94 7b 01 	call	0x2f6	; 0x2f6 <get_freq>
     496:	9f 93       	push	r25
     498:	8f 93       	push	r24
     49a:	7f 93       	push	r23
     49c:	6f 93       	push	r22
     49e:	ff 92       	push	r15
     4a0:	ef 92       	push	r14
     4a2:	0e 94 5c 09 	call	0x12b8	; 0x12b8 <printf>
		printf("%f RPM\n", get_rpm());
     4a6:	0e 94 e1 00 	call	0x1c2	; 0x1c2 <get_rpm>
     4aa:	9f 93       	push	r25
     4ac:	8f 93       	push	r24
     4ae:	7f 93       	push	r23
     4b0:	6f 93       	push	r22
     4b2:	1f 93       	push	r17
     4b4:	0f 93       	push	r16
     4b6:	0e 94 5c 09 	call	0x12b8	; 0x12b8 <printf>
     4ba:	0f b6       	in	r0, 0x3f	; 63
     4bc:	f8 94       	cli
     4be:	de bf       	out	0x3e, r29	; 62
     4c0:	0f be       	out	0x3f, r0	; 63
     4c2:	cd bf       	out	0x3d, r28	; 61
     4c4:	d2 cf       	rjmp	.-92     	; 0x46a <__LOCK_REGION_LENGTH__+0x6a>

000004c6 <__vector_18>:
#include <avr/io.h>
#include <stdint.h>
#include <avr/interrupt.h>

ISR(USART_RX_vect)
{
     4c6:	1f 92       	push	r1
     4c8:	0f 92       	push	r0
     4ca:	0f b6       	in	r0, 0x3f	; 63
     4cc:	0f 92       	push	r0
     4ce:	11 24       	eor	r1, r1
     4d0:	2f 93       	push	r18
     4d2:	3f 93       	push	r19
     4d4:	8f 93       	push	r24
     4d6:	9f 93       	push	r25
     4d8:	af 93       	push	r26
     4da:	bf 93       	push	r27
     4dc:	ef 93       	push	r30
     4de:	ff 93       	push	r31
	// Put received character into the circular buffer
	*(rx_buffer.write_ptr) = UDR0;
     4e0:	e8 e2       	ldi	r30, 0x28	; 40
     4e2:	f1 e0       	ldi	r31, 0x01	; 1
     4e4:	a5 8d       	ldd	r26, Z+29	; 0x1d
     4e6:	b6 8d       	ldd	r27, Z+30	; 0x1e
     4e8:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
     4ec:	8c 93       	st	X, r24

	// Increment the write ptr
	// Be aware that the write ptr might point to the end of the buffer.
	// In this case you have to set it back to the start of the buffer
	if (rx_buffer.write_ptr == rx_buffer.tail)
     4ee:	25 8d       	ldd	r18, Z+29	; 0x1d
     4f0:	36 8d       	ldd	r19, Z+30	; 0x1e
     4f2:	83 8d       	ldd	r24, Z+27	; 0x1b
     4f4:	94 8d       	ldd	r25, Z+28	; 0x1c
     4f6:	28 17       	cp	r18, r24
     4f8:	39 07       	cpc	r19, r25
     4fa:	29 f4       	brne	.+10     	; 0x506 <__stack+0x7>
	rx_buffer.write_ptr = rx_buffer.head;
     4fc:	81 8d       	ldd	r24, Z+25	; 0x19
     4fe:	92 8d       	ldd	r25, Z+26	; 0x1a
     500:	96 8f       	std	Z+30, r25	; 0x1e
     502:	85 8f       	std	Z+29, r24	; 0x1d
     504:	07 c0       	rjmp	.+14     	; 0x514 <__stack+0x15>
	else
	rx_buffer.write_ptr++;
     506:	e8 e2       	ldi	r30, 0x28	; 40
     508:	f1 e0       	ldi	r31, 0x01	; 1
     50a:	85 8d       	ldd	r24, Z+29	; 0x1d
     50c:	96 8d       	ldd	r25, Z+30	; 0x1e
     50e:	01 96       	adiw	r24, 0x01	; 1
     510:	96 8f       	std	Z+30, r25	; 0x1e
     512:	85 8f       	std	Z+29, r24	; 0x1d

}
     514:	ff 91       	pop	r31
     516:	ef 91       	pop	r30
     518:	bf 91       	pop	r27
     51a:	af 91       	pop	r26
     51c:	9f 91       	pop	r25
     51e:	8f 91       	pop	r24
     520:	3f 91       	pop	r19
     522:	2f 91       	pop	r18
     524:	0f 90       	pop	r0
     526:	0f be       	out	0x3f, r0	; 63
     528:	0f 90       	pop	r0
     52a:	1f 90       	pop	r1
     52c:	18 95       	reti

0000052e <UART_init>:
	// See the datasheet on page 246 for hints and table 25-9.

	// At first set the baud rate to 115200
	// The CPU clock frequency is 16MHz
	uint16_t ubbr = 8;
	UBRR0H = ubbr >> 8;
     52e:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
	UBRR0L = ubbr;
     532:	88 e0       	ldi	r24, 0x08	; 8
     534:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>

	// Set the following frame format: 8N1
	// It's set by default to 8N1

	// Enable TX
	UCSR0B |= 1 << TXEN0;
     538:	e1 ec       	ldi	r30, 0xC1	; 193
     53a:	f0 e0       	ldi	r31, 0x00	; 0
     53c:	80 81       	ld	r24, Z
     53e:	88 60       	ori	r24, 0x08	; 8
     540:	80 83       	st	Z, r24

	// Enable RX
	UCSR0B |= 1 << RXEN0;
     542:	80 81       	ld	r24, Z
     544:	80 61       	ori	r24, 0x10	; 16
     546:	80 83       	st	Z, r24

	// Enable RX interrupt
	UCSR0B |= 1 << RXCIE0;
     548:	80 81       	ld	r24, Z
     54a:	80 68       	ori	r24, 0x80	; 128
     54c:	80 83       	st	Z, r24

	// Initialize circular buffer pointers, they should point to the head of the buffer
	rx_buffer.head = &(rx_buffer.buffer[0]);
     54e:	e8 e2       	ldi	r30, 0x28	; 40
     550:	f1 e0       	ldi	r31, 0x01	; 1
     552:	f2 8f       	std	Z+26, r31	; 0x1a
     554:	e1 8f       	std	Z+25, r30	; 0x19
	rx_buffer.tail = &(rx_buffer.buffer[RX_CIRC_BUFF_LEN - 1]);
     556:	80 e4       	ldi	r24, 0x40	; 64
     558:	91 e0       	ldi	r25, 0x01	; 1
     55a:	94 8f       	std	Z+28, r25	; 0x1c
     55c:	83 8f       	std	Z+27, r24	; 0x1b
	rx_buffer.read_ptr = rx_buffer.head;
     55e:	81 8d       	ldd	r24, Z+25	; 0x19
     560:	92 8d       	ldd	r25, Z+26	; 0x1a
     562:	90 a3       	std	Z+32, r25	; 0x20
     564:	87 8f       	std	Z+31, r24	; 0x1f
	rx_buffer.write_ptr = rx_buffer.head;
     566:	81 8d       	ldd	r24, Z+25	; 0x19
     568:	92 8d       	ldd	r25, Z+26	; 0x1a
     56a:	96 8f       	std	Z+30, r25	; 0x1e
     56c:	85 8f       	std	Z+29, r24	; 0x1d
     56e:	08 95       	ret

00000570 <UART_send_character>:
{
	// This function can send a character through UART with polling method
	// See page 247 of the datasheet for hints, be aware that the code in the datasheet has a problem :)

	// Wait for empty USART buffer register
	while ( !( UCSR0A & (1 << UDRE0)) );
     570:	e0 ec       	ldi	r30, 0xC0	; 192
     572:	f0 e0       	ldi	r31, 0x00	; 0
     574:	90 81       	ld	r25, Z
     576:	95 ff       	sbrs	r25, 5
     578:	fd cf       	rjmp	.-6      	; 0x574 <UART_send_character+0x4>

	// Put data to USART buffer register
	UDR0 = character;
     57a:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
     57e:	08 95       	ret

00000580 <UART_get_character>:
}

char UART_get_character()
{
	// Wait for data in the circular buffer, this can be detected if the write and read pointers are pointing to the same memory block
	while ((rx_buffer.read_ptr) == (rx_buffer.write_ptr));
     580:	e8 e2       	ldi	r30, 0x28	; 40
     582:	f1 e0       	ldi	r31, 0x01	; 1
     584:	27 8d       	ldd	r18, Z+31	; 0x1f
     586:	30 a1       	ldd	r19, Z+32	; 0x20
     588:	85 8d       	ldd	r24, Z+29	; 0x1d
     58a:	96 8d       	ldd	r25, Z+30	; 0x1e
     58c:	28 17       	cp	r18, r24
     58e:	39 07       	cpc	r19, r25
     590:	c9 f3       	breq	.-14     	; 0x584 <UART_get_character+0x4>

	// Save the data to a temporary variable
	char to_return = *(rx_buffer.read_ptr);
     592:	e8 e2       	ldi	r30, 0x28	; 40
     594:	f1 e0       	ldi	r31, 0x01	; 1
     596:	a7 8d       	ldd	r26, Z+31	; 0x1f
     598:	b0 a1       	ldd	r27, Z+32	; 0x20
     59a:	8c 91       	ld	r24, X

	// Increment the read ptr
	// Be aware that the read ptr might point to the end of the buffer.
	// In this case you have to set it back to the start of the buffer
	if (rx_buffer.read_ptr == rx_buffer.tail)
     59c:	47 8d       	ldd	r20, Z+31	; 0x1f
     59e:	50 a1       	ldd	r21, Z+32	; 0x20
     5a0:	23 8d       	ldd	r18, Z+27	; 0x1b
     5a2:	34 8d       	ldd	r19, Z+28	; 0x1c
     5a4:	42 17       	cp	r20, r18
     5a6:	53 07       	cpc	r21, r19
     5a8:	29 f4       	brne	.+10     	; 0x5b4 <UART_get_character+0x34>
	rx_buffer.read_ptr = rx_buffer.head;
     5aa:	21 8d       	ldd	r18, Z+25	; 0x19
     5ac:	32 8d       	ldd	r19, Z+26	; 0x1a
     5ae:	30 a3       	std	Z+32, r19	; 0x20
     5b0:	27 8f       	std	Z+31, r18	; 0x1f
     5b2:	08 95       	ret
	else
	rx_buffer.read_ptr++;
     5b4:	e8 e2       	ldi	r30, 0x28	; 40
     5b6:	f1 e0       	ldi	r31, 0x01	; 1
     5b8:	27 8d       	ldd	r18, Z+31	; 0x1f
     5ba:	30 a1       	ldd	r19, Z+32	; 0x20
     5bc:	2f 5f       	subi	r18, 0xFF	; 255
     5be:	3f 4f       	sbci	r19, 0xFF	; 255
     5c0:	30 a3       	std	Z+32, r19	; 0x20
     5c2:	27 8f       	std	Z+31, r18	; 0x1f


	// Return the read character
	return to_return;
}
     5c4:	08 95       	ret

000005c6 <__cmpsf2>:
     5c6:	0e 94 97 03 	call	0x72e	; 0x72e <__fp_cmp>
     5ca:	08 f4       	brcc	.+2      	; 0x5ce <__cmpsf2+0x8>
     5cc:	81 e0       	ldi	r24, 0x01	; 1
     5ce:	08 95       	ret

000005d0 <__divsf3>:
     5d0:	0e 94 fc 02 	call	0x5f8	; 0x5f8 <__divsf3x>
     5d4:	0c 94 d2 03 	jmp	0x7a4	; 0x7a4 <__fp_round>
     5d8:	0e 94 cb 03 	call	0x796	; 0x796 <__fp_pscB>
     5dc:	58 f0       	brcs	.+22     	; 0x5f4 <__divsf3+0x24>
     5de:	0e 94 c4 03 	call	0x788	; 0x788 <__fp_pscA>
     5e2:	40 f0       	brcs	.+16     	; 0x5f4 <__divsf3+0x24>
     5e4:	29 f4       	brne	.+10     	; 0x5f0 <__divsf3+0x20>
     5e6:	5f 3f       	cpi	r21, 0xFF	; 255
     5e8:	29 f0       	breq	.+10     	; 0x5f4 <__divsf3+0x24>
     5ea:	0c 94 bb 03 	jmp	0x776	; 0x776 <__fp_inf>
     5ee:	51 11       	cpse	r21, r1
     5f0:	0c 94 06 04 	jmp	0x80c	; 0x80c <__fp_szero>
     5f4:	0c 94 c1 03 	jmp	0x782	; 0x782 <__fp_nan>

000005f8 <__divsf3x>:
     5f8:	0e 94 e3 03 	call	0x7c6	; 0x7c6 <__fp_split3>
     5fc:	68 f3       	brcs	.-38     	; 0x5d8 <__divsf3+0x8>

000005fe <__divsf3_pse>:
     5fe:	99 23       	and	r25, r25
     600:	b1 f3       	breq	.-20     	; 0x5ee <__divsf3+0x1e>
     602:	55 23       	and	r21, r21
     604:	91 f3       	breq	.-28     	; 0x5ea <__divsf3+0x1a>
     606:	95 1b       	sub	r25, r21
     608:	55 0b       	sbc	r21, r21
     60a:	bb 27       	eor	r27, r27
     60c:	aa 27       	eor	r26, r26
     60e:	62 17       	cp	r22, r18
     610:	73 07       	cpc	r23, r19
     612:	84 07       	cpc	r24, r20
     614:	38 f0       	brcs	.+14     	; 0x624 <__divsf3_pse+0x26>
     616:	9f 5f       	subi	r25, 0xFF	; 255
     618:	5f 4f       	sbci	r21, 0xFF	; 255
     61a:	22 0f       	add	r18, r18
     61c:	33 1f       	adc	r19, r19
     61e:	44 1f       	adc	r20, r20
     620:	aa 1f       	adc	r26, r26
     622:	a9 f3       	breq	.-22     	; 0x60e <__divsf3_pse+0x10>
     624:	35 d0       	rcall	.+106    	; 0x690 <__divsf3_pse+0x92>
     626:	0e 2e       	mov	r0, r30
     628:	3a f0       	brmi	.+14     	; 0x638 <__divsf3_pse+0x3a>
     62a:	e0 e8       	ldi	r30, 0x80	; 128
     62c:	32 d0       	rcall	.+100    	; 0x692 <__divsf3_pse+0x94>
     62e:	91 50       	subi	r25, 0x01	; 1
     630:	50 40       	sbci	r21, 0x00	; 0
     632:	e6 95       	lsr	r30
     634:	00 1c       	adc	r0, r0
     636:	ca f7       	brpl	.-14     	; 0x62a <__divsf3_pse+0x2c>
     638:	2b d0       	rcall	.+86     	; 0x690 <__divsf3_pse+0x92>
     63a:	fe 2f       	mov	r31, r30
     63c:	29 d0       	rcall	.+82     	; 0x690 <__divsf3_pse+0x92>
     63e:	66 0f       	add	r22, r22
     640:	77 1f       	adc	r23, r23
     642:	88 1f       	adc	r24, r24
     644:	bb 1f       	adc	r27, r27
     646:	26 17       	cp	r18, r22
     648:	37 07       	cpc	r19, r23
     64a:	48 07       	cpc	r20, r24
     64c:	ab 07       	cpc	r26, r27
     64e:	b0 e8       	ldi	r27, 0x80	; 128
     650:	09 f0       	breq	.+2      	; 0x654 <__divsf3_pse+0x56>
     652:	bb 0b       	sbc	r27, r27
     654:	80 2d       	mov	r24, r0
     656:	bf 01       	movw	r22, r30
     658:	ff 27       	eor	r31, r31
     65a:	93 58       	subi	r25, 0x83	; 131
     65c:	5f 4f       	sbci	r21, 0xFF	; 255
     65e:	3a f0       	brmi	.+14     	; 0x66e <__divsf3_pse+0x70>
     660:	9e 3f       	cpi	r25, 0xFE	; 254
     662:	51 05       	cpc	r21, r1
     664:	78 f0       	brcs	.+30     	; 0x684 <__divsf3_pse+0x86>
     666:	0c 94 bb 03 	jmp	0x776	; 0x776 <__fp_inf>
     66a:	0c 94 06 04 	jmp	0x80c	; 0x80c <__fp_szero>
     66e:	5f 3f       	cpi	r21, 0xFF	; 255
     670:	e4 f3       	brlt	.-8      	; 0x66a <__divsf3_pse+0x6c>
     672:	98 3e       	cpi	r25, 0xE8	; 232
     674:	d4 f3       	brlt	.-12     	; 0x66a <__divsf3_pse+0x6c>
     676:	86 95       	lsr	r24
     678:	77 95       	ror	r23
     67a:	67 95       	ror	r22
     67c:	b7 95       	ror	r27
     67e:	f7 95       	ror	r31
     680:	9f 5f       	subi	r25, 0xFF	; 255
     682:	c9 f7       	brne	.-14     	; 0x676 <__divsf3_pse+0x78>
     684:	88 0f       	add	r24, r24
     686:	91 1d       	adc	r25, r1
     688:	96 95       	lsr	r25
     68a:	87 95       	ror	r24
     68c:	97 f9       	bld	r25, 7
     68e:	08 95       	ret
     690:	e1 e0       	ldi	r30, 0x01	; 1
     692:	66 0f       	add	r22, r22
     694:	77 1f       	adc	r23, r23
     696:	88 1f       	adc	r24, r24
     698:	bb 1f       	adc	r27, r27
     69a:	62 17       	cp	r22, r18
     69c:	73 07       	cpc	r23, r19
     69e:	84 07       	cpc	r24, r20
     6a0:	ba 07       	cpc	r27, r26
     6a2:	20 f0       	brcs	.+8      	; 0x6ac <__divsf3_pse+0xae>
     6a4:	62 1b       	sub	r22, r18
     6a6:	73 0b       	sbc	r23, r19
     6a8:	84 0b       	sbc	r24, r20
     6aa:	ba 0b       	sbc	r27, r26
     6ac:	ee 1f       	adc	r30, r30
     6ae:	88 f7       	brcc	.-30     	; 0x692 <__divsf3_pse+0x94>
     6b0:	e0 95       	com	r30
     6b2:	08 95       	ret

000006b4 <__floatunsisf>:
     6b4:	e8 94       	clt
     6b6:	09 c0       	rjmp	.+18     	; 0x6ca <__floatsisf+0x12>

000006b8 <__floatsisf>:
     6b8:	97 fb       	bst	r25, 7
     6ba:	3e f4       	brtc	.+14     	; 0x6ca <__floatsisf+0x12>
     6bc:	90 95       	com	r25
     6be:	80 95       	com	r24
     6c0:	70 95       	com	r23
     6c2:	61 95       	neg	r22
     6c4:	7f 4f       	sbci	r23, 0xFF	; 255
     6c6:	8f 4f       	sbci	r24, 0xFF	; 255
     6c8:	9f 4f       	sbci	r25, 0xFF	; 255
     6ca:	99 23       	and	r25, r25
     6cc:	a9 f0       	breq	.+42     	; 0x6f8 <__floatsisf+0x40>
     6ce:	f9 2f       	mov	r31, r25
     6d0:	96 e9       	ldi	r25, 0x96	; 150
     6d2:	bb 27       	eor	r27, r27
     6d4:	93 95       	inc	r25
     6d6:	f6 95       	lsr	r31
     6d8:	87 95       	ror	r24
     6da:	77 95       	ror	r23
     6dc:	67 95       	ror	r22
     6de:	b7 95       	ror	r27
     6e0:	f1 11       	cpse	r31, r1
     6e2:	f8 cf       	rjmp	.-16     	; 0x6d4 <__floatsisf+0x1c>
     6e4:	fa f4       	brpl	.+62     	; 0x724 <__floatsisf+0x6c>
     6e6:	bb 0f       	add	r27, r27
     6e8:	11 f4       	brne	.+4      	; 0x6ee <__floatsisf+0x36>
     6ea:	60 ff       	sbrs	r22, 0
     6ec:	1b c0       	rjmp	.+54     	; 0x724 <__floatsisf+0x6c>
     6ee:	6f 5f       	subi	r22, 0xFF	; 255
     6f0:	7f 4f       	sbci	r23, 0xFF	; 255
     6f2:	8f 4f       	sbci	r24, 0xFF	; 255
     6f4:	9f 4f       	sbci	r25, 0xFF	; 255
     6f6:	16 c0       	rjmp	.+44     	; 0x724 <__floatsisf+0x6c>
     6f8:	88 23       	and	r24, r24
     6fa:	11 f0       	breq	.+4      	; 0x700 <__floatsisf+0x48>
     6fc:	96 e9       	ldi	r25, 0x96	; 150
     6fe:	11 c0       	rjmp	.+34     	; 0x722 <__floatsisf+0x6a>
     700:	77 23       	and	r23, r23
     702:	21 f0       	breq	.+8      	; 0x70c <__floatsisf+0x54>
     704:	9e e8       	ldi	r25, 0x8E	; 142
     706:	87 2f       	mov	r24, r23
     708:	76 2f       	mov	r23, r22
     70a:	05 c0       	rjmp	.+10     	; 0x716 <__floatsisf+0x5e>
     70c:	66 23       	and	r22, r22
     70e:	71 f0       	breq	.+28     	; 0x72c <__floatsisf+0x74>
     710:	96 e8       	ldi	r25, 0x86	; 134
     712:	86 2f       	mov	r24, r22
     714:	70 e0       	ldi	r23, 0x00	; 0
     716:	60 e0       	ldi	r22, 0x00	; 0
     718:	2a f0       	brmi	.+10     	; 0x724 <__floatsisf+0x6c>
     71a:	9a 95       	dec	r25
     71c:	66 0f       	add	r22, r22
     71e:	77 1f       	adc	r23, r23
     720:	88 1f       	adc	r24, r24
     722:	da f7       	brpl	.-10     	; 0x71a <__floatsisf+0x62>
     724:	88 0f       	add	r24, r24
     726:	96 95       	lsr	r25
     728:	87 95       	ror	r24
     72a:	97 f9       	bld	r25, 7
     72c:	08 95       	ret

0000072e <__fp_cmp>:
     72e:	99 0f       	add	r25, r25
     730:	00 08       	sbc	r0, r0
     732:	55 0f       	add	r21, r21
     734:	aa 0b       	sbc	r26, r26
     736:	e0 e8       	ldi	r30, 0x80	; 128
     738:	fe ef       	ldi	r31, 0xFE	; 254
     73a:	16 16       	cp	r1, r22
     73c:	17 06       	cpc	r1, r23
     73e:	e8 07       	cpc	r30, r24
     740:	f9 07       	cpc	r31, r25
     742:	c0 f0       	brcs	.+48     	; 0x774 <__fp_cmp+0x46>
     744:	12 16       	cp	r1, r18
     746:	13 06       	cpc	r1, r19
     748:	e4 07       	cpc	r30, r20
     74a:	f5 07       	cpc	r31, r21
     74c:	98 f0       	brcs	.+38     	; 0x774 <__fp_cmp+0x46>
     74e:	62 1b       	sub	r22, r18
     750:	73 0b       	sbc	r23, r19
     752:	84 0b       	sbc	r24, r20
     754:	95 0b       	sbc	r25, r21
     756:	39 f4       	brne	.+14     	; 0x766 <__fp_cmp+0x38>
     758:	0a 26       	eor	r0, r26
     75a:	61 f0       	breq	.+24     	; 0x774 <__fp_cmp+0x46>
     75c:	23 2b       	or	r18, r19
     75e:	24 2b       	or	r18, r20
     760:	25 2b       	or	r18, r21
     762:	21 f4       	brne	.+8      	; 0x76c <__fp_cmp+0x3e>
     764:	08 95       	ret
     766:	0a 26       	eor	r0, r26
     768:	09 f4       	brne	.+2      	; 0x76c <__fp_cmp+0x3e>
     76a:	a1 40       	sbci	r26, 0x01	; 1
     76c:	a6 95       	lsr	r26
     76e:	8f ef       	ldi	r24, 0xFF	; 255
     770:	81 1d       	adc	r24, r1
     772:	81 1d       	adc	r24, r1
     774:	08 95       	ret

00000776 <__fp_inf>:
     776:	97 f9       	bld	r25, 7
     778:	9f 67       	ori	r25, 0x7F	; 127
     77a:	80 e8       	ldi	r24, 0x80	; 128
     77c:	70 e0       	ldi	r23, 0x00	; 0
     77e:	60 e0       	ldi	r22, 0x00	; 0
     780:	08 95       	ret

00000782 <__fp_nan>:
     782:	9f ef       	ldi	r25, 0xFF	; 255
     784:	80 ec       	ldi	r24, 0xC0	; 192
     786:	08 95       	ret

00000788 <__fp_pscA>:
     788:	00 24       	eor	r0, r0
     78a:	0a 94       	dec	r0
     78c:	16 16       	cp	r1, r22
     78e:	17 06       	cpc	r1, r23
     790:	18 06       	cpc	r1, r24
     792:	09 06       	cpc	r0, r25
     794:	08 95       	ret

00000796 <__fp_pscB>:
     796:	00 24       	eor	r0, r0
     798:	0a 94       	dec	r0
     79a:	12 16       	cp	r1, r18
     79c:	13 06       	cpc	r1, r19
     79e:	14 06       	cpc	r1, r20
     7a0:	05 06       	cpc	r0, r21
     7a2:	08 95       	ret

000007a4 <__fp_round>:
     7a4:	09 2e       	mov	r0, r25
     7a6:	03 94       	inc	r0
     7a8:	00 0c       	add	r0, r0
     7aa:	11 f4       	brne	.+4      	; 0x7b0 <__fp_round+0xc>
     7ac:	88 23       	and	r24, r24
     7ae:	52 f0       	brmi	.+20     	; 0x7c4 <__fp_round+0x20>
     7b0:	bb 0f       	add	r27, r27
     7b2:	40 f4       	brcc	.+16     	; 0x7c4 <__fp_round+0x20>
     7b4:	bf 2b       	or	r27, r31
     7b6:	11 f4       	brne	.+4      	; 0x7bc <__fp_round+0x18>
     7b8:	60 ff       	sbrs	r22, 0
     7ba:	04 c0       	rjmp	.+8      	; 0x7c4 <__fp_round+0x20>
     7bc:	6f 5f       	subi	r22, 0xFF	; 255
     7be:	7f 4f       	sbci	r23, 0xFF	; 255
     7c0:	8f 4f       	sbci	r24, 0xFF	; 255
     7c2:	9f 4f       	sbci	r25, 0xFF	; 255
     7c4:	08 95       	ret

000007c6 <__fp_split3>:
     7c6:	57 fd       	sbrc	r21, 7
     7c8:	90 58       	subi	r25, 0x80	; 128
     7ca:	44 0f       	add	r20, r20
     7cc:	55 1f       	adc	r21, r21
     7ce:	59 f0       	breq	.+22     	; 0x7e6 <__fp_splitA+0x10>
     7d0:	5f 3f       	cpi	r21, 0xFF	; 255
     7d2:	71 f0       	breq	.+28     	; 0x7f0 <__fp_splitA+0x1a>
     7d4:	47 95       	ror	r20

000007d6 <__fp_splitA>:
     7d6:	88 0f       	add	r24, r24
     7d8:	97 fb       	bst	r25, 7
     7da:	99 1f       	adc	r25, r25
     7dc:	61 f0       	breq	.+24     	; 0x7f6 <__fp_splitA+0x20>
     7de:	9f 3f       	cpi	r25, 0xFF	; 255
     7e0:	79 f0       	breq	.+30     	; 0x800 <__fp_splitA+0x2a>
     7e2:	87 95       	ror	r24
     7e4:	08 95       	ret
     7e6:	12 16       	cp	r1, r18
     7e8:	13 06       	cpc	r1, r19
     7ea:	14 06       	cpc	r1, r20
     7ec:	55 1f       	adc	r21, r21
     7ee:	f2 cf       	rjmp	.-28     	; 0x7d4 <__fp_split3+0xe>
     7f0:	46 95       	lsr	r20
     7f2:	f1 df       	rcall	.-30     	; 0x7d6 <__fp_splitA>
     7f4:	08 c0       	rjmp	.+16     	; 0x806 <__fp_splitA+0x30>
     7f6:	16 16       	cp	r1, r22
     7f8:	17 06       	cpc	r1, r23
     7fa:	18 06       	cpc	r1, r24
     7fc:	99 1f       	adc	r25, r25
     7fe:	f1 cf       	rjmp	.-30     	; 0x7e2 <__fp_splitA+0xc>
     800:	86 95       	lsr	r24
     802:	71 05       	cpc	r23, r1
     804:	61 05       	cpc	r22, r1
     806:	08 94       	sec
     808:	08 95       	ret

0000080a <__fp_zero>:
     80a:	e8 94       	clt

0000080c <__fp_szero>:
     80c:	bb 27       	eor	r27, r27
     80e:	66 27       	eor	r22, r22
     810:	77 27       	eor	r23, r23
     812:	cb 01       	movw	r24, r22
     814:	97 f9       	bld	r25, 7
     816:	08 95       	ret

00000818 <__mulsf3>:
     818:	0e 94 1f 04 	call	0x83e	; 0x83e <__mulsf3x>
     81c:	0c 94 d2 03 	jmp	0x7a4	; 0x7a4 <__fp_round>
     820:	0e 94 c4 03 	call	0x788	; 0x788 <__fp_pscA>
     824:	38 f0       	brcs	.+14     	; 0x834 <__mulsf3+0x1c>
     826:	0e 94 cb 03 	call	0x796	; 0x796 <__fp_pscB>
     82a:	20 f0       	brcs	.+8      	; 0x834 <__mulsf3+0x1c>
     82c:	95 23       	and	r25, r21
     82e:	11 f0       	breq	.+4      	; 0x834 <__mulsf3+0x1c>
     830:	0c 94 bb 03 	jmp	0x776	; 0x776 <__fp_inf>
     834:	0c 94 c1 03 	jmp	0x782	; 0x782 <__fp_nan>
     838:	11 24       	eor	r1, r1
     83a:	0c 94 06 04 	jmp	0x80c	; 0x80c <__fp_szero>

0000083e <__mulsf3x>:
     83e:	0e 94 e3 03 	call	0x7c6	; 0x7c6 <__fp_split3>
     842:	70 f3       	brcs	.-36     	; 0x820 <__mulsf3+0x8>

00000844 <__mulsf3_pse>:
     844:	95 9f       	mul	r25, r21
     846:	c1 f3       	breq	.-16     	; 0x838 <__mulsf3+0x20>
     848:	95 0f       	add	r25, r21
     84a:	50 e0       	ldi	r21, 0x00	; 0
     84c:	55 1f       	adc	r21, r21
     84e:	62 9f       	mul	r22, r18
     850:	f0 01       	movw	r30, r0
     852:	72 9f       	mul	r23, r18
     854:	bb 27       	eor	r27, r27
     856:	f0 0d       	add	r31, r0
     858:	b1 1d       	adc	r27, r1
     85a:	63 9f       	mul	r22, r19
     85c:	aa 27       	eor	r26, r26
     85e:	f0 0d       	add	r31, r0
     860:	b1 1d       	adc	r27, r1
     862:	aa 1f       	adc	r26, r26
     864:	64 9f       	mul	r22, r20
     866:	66 27       	eor	r22, r22
     868:	b0 0d       	add	r27, r0
     86a:	a1 1d       	adc	r26, r1
     86c:	66 1f       	adc	r22, r22
     86e:	82 9f       	mul	r24, r18
     870:	22 27       	eor	r18, r18
     872:	b0 0d       	add	r27, r0
     874:	a1 1d       	adc	r26, r1
     876:	62 1f       	adc	r22, r18
     878:	73 9f       	mul	r23, r19
     87a:	b0 0d       	add	r27, r0
     87c:	a1 1d       	adc	r26, r1
     87e:	62 1f       	adc	r22, r18
     880:	83 9f       	mul	r24, r19
     882:	a0 0d       	add	r26, r0
     884:	61 1d       	adc	r22, r1
     886:	22 1f       	adc	r18, r18
     888:	74 9f       	mul	r23, r20
     88a:	33 27       	eor	r19, r19
     88c:	a0 0d       	add	r26, r0
     88e:	61 1d       	adc	r22, r1
     890:	23 1f       	adc	r18, r19
     892:	84 9f       	mul	r24, r20
     894:	60 0d       	add	r22, r0
     896:	21 1d       	adc	r18, r1
     898:	82 2f       	mov	r24, r18
     89a:	76 2f       	mov	r23, r22
     89c:	6a 2f       	mov	r22, r26
     89e:	11 24       	eor	r1, r1
     8a0:	9f 57       	subi	r25, 0x7F	; 127
     8a2:	50 40       	sbci	r21, 0x00	; 0
     8a4:	9a f0       	brmi	.+38     	; 0x8cc <__mulsf3_pse+0x88>
     8a6:	f1 f0       	breq	.+60     	; 0x8e4 <__mulsf3_pse+0xa0>
     8a8:	88 23       	and	r24, r24
     8aa:	4a f0       	brmi	.+18     	; 0x8be <__mulsf3_pse+0x7a>
     8ac:	ee 0f       	add	r30, r30
     8ae:	ff 1f       	adc	r31, r31
     8b0:	bb 1f       	adc	r27, r27
     8b2:	66 1f       	adc	r22, r22
     8b4:	77 1f       	adc	r23, r23
     8b6:	88 1f       	adc	r24, r24
     8b8:	91 50       	subi	r25, 0x01	; 1
     8ba:	50 40       	sbci	r21, 0x00	; 0
     8bc:	a9 f7       	brne	.-22     	; 0x8a8 <__mulsf3_pse+0x64>
     8be:	9e 3f       	cpi	r25, 0xFE	; 254
     8c0:	51 05       	cpc	r21, r1
     8c2:	80 f0       	brcs	.+32     	; 0x8e4 <__mulsf3_pse+0xa0>
     8c4:	0c 94 bb 03 	jmp	0x776	; 0x776 <__fp_inf>
     8c8:	0c 94 06 04 	jmp	0x80c	; 0x80c <__fp_szero>
     8cc:	5f 3f       	cpi	r21, 0xFF	; 255
     8ce:	e4 f3       	brlt	.-8      	; 0x8c8 <__mulsf3_pse+0x84>
     8d0:	98 3e       	cpi	r25, 0xE8	; 232
     8d2:	d4 f3       	brlt	.-12     	; 0x8c8 <__mulsf3_pse+0x84>
     8d4:	86 95       	lsr	r24
     8d6:	77 95       	ror	r23
     8d8:	67 95       	ror	r22
     8da:	b7 95       	ror	r27
     8dc:	f7 95       	ror	r31
     8de:	e7 95       	ror	r30
     8e0:	9f 5f       	subi	r25, 0xFF	; 255
     8e2:	c1 f7       	brne	.-16     	; 0x8d4 <__mulsf3_pse+0x90>
     8e4:	fe 2b       	or	r31, r30
     8e6:	88 0f       	add	r24, r24
     8e8:	91 1d       	adc	r25, r1
     8ea:	96 95       	lsr	r25
     8ec:	87 95       	ror	r24
     8ee:	97 f9       	bld	r25, 7
     8f0:	08 95       	ret

000008f2 <__unordsf2>:
     8f2:	0e 94 97 03 	call	0x72e	; 0x72e <__fp_cmp>
     8f6:	88 0b       	sbc	r24, r24
     8f8:	99 0b       	sbc	r25, r25
     8fa:	08 95       	ret

000008fc <vfprintf>:
     8fc:	a0 e1       	ldi	r26, 0x10	; 16
     8fe:	b0 e0       	ldi	r27, 0x00	; 0
     900:	e4 e8       	ldi	r30, 0x84	; 132
     902:	f4 e0       	ldi	r31, 0x04	; 4
     904:	0c 94 fb 07 	jmp	0xff6	; 0xff6 <__prologue_saves__>
     908:	7c 01       	movw	r14, r24
     90a:	1b 01       	movw	r2, r22
     90c:	6a 01       	movw	r12, r20
     90e:	fc 01       	movw	r30, r24
     910:	17 82       	std	Z+7, r1	; 0x07
     912:	16 82       	std	Z+6, r1	; 0x06
     914:	83 81       	ldd	r24, Z+3	; 0x03
     916:	81 ff       	sbrs	r24, 1
     918:	44 c3       	rjmp	.+1672   	; 0xfa2 <vfprintf+0x6a6>
     91a:	9e 01       	movw	r18, r28
     91c:	2f 5f       	subi	r18, 0xFF	; 255
     91e:	3f 4f       	sbci	r19, 0xFF	; 255
     920:	39 01       	movw	r6, r18
     922:	f7 01       	movw	r30, r14
     924:	93 81       	ldd	r25, Z+3	; 0x03
     926:	f1 01       	movw	r30, r2
     928:	93 fd       	sbrc	r25, 3
     92a:	85 91       	lpm	r24, Z+
     92c:	93 ff       	sbrs	r25, 3
     92e:	81 91       	ld	r24, Z+
     930:	1f 01       	movw	r2, r30
     932:	88 23       	and	r24, r24
     934:	09 f4       	brne	.+2      	; 0x938 <vfprintf+0x3c>
     936:	31 c3       	rjmp	.+1634   	; 0xf9a <vfprintf+0x69e>
     938:	85 32       	cpi	r24, 0x25	; 37
     93a:	39 f4       	brne	.+14     	; 0x94a <vfprintf+0x4e>
     93c:	93 fd       	sbrc	r25, 3
     93e:	85 91       	lpm	r24, Z+
     940:	93 ff       	sbrs	r25, 3
     942:	81 91       	ld	r24, Z+
     944:	1f 01       	movw	r2, r30
     946:	85 32       	cpi	r24, 0x25	; 37
     948:	39 f4       	brne	.+14     	; 0x958 <vfprintf+0x5c>
     94a:	b7 01       	movw	r22, r14
     94c:	90 e0       	ldi	r25, 0x00	; 0
     94e:	0e 94 20 09 	call	0x1240	; 0x1240 <fputc>
     952:	56 01       	movw	r10, r12
     954:	65 01       	movw	r12, r10
     956:	e5 cf       	rjmp	.-54     	; 0x922 <vfprintf+0x26>
     958:	10 e0       	ldi	r17, 0x00	; 0
     95a:	51 2c       	mov	r5, r1
     95c:	91 2c       	mov	r9, r1
     95e:	ff e1       	ldi	r31, 0x1F	; 31
     960:	f9 15       	cp	r31, r9
     962:	d8 f0       	brcs	.+54     	; 0x99a <vfprintf+0x9e>
     964:	8b 32       	cpi	r24, 0x2B	; 43
     966:	79 f0       	breq	.+30     	; 0x986 <vfprintf+0x8a>
     968:	38 f4       	brcc	.+14     	; 0x978 <vfprintf+0x7c>
     96a:	80 32       	cpi	r24, 0x20	; 32
     96c:	79 f0       	breq	.+30     	; 0x98c <vfprintf+0x90>
     96e:	83 32       	cpi	r24, 0x23	; 35
     970:	a1 f4       	brne	.+40     	; 0x99a <vfprintf+0x9e>
     972:	f9 2d       	mov	r31, r9
     974:	f0 61       	ori	r31, 0x10	; 16
     976:	2e c0       	rjmp	.+92     	; 0x9d4 <vfprintf+0xd8>
     978:	8d 32       	cpi	r24, 0x2D	; 45
     97a:	61 f0       	breq	.+24     	; 0x994 <vfprintf+0x98>
     97c:	80 33       	cpi	r24, 0x30	; 48
     97e:	69 f4       	brne	.+26     	; 0x99a <vfprintf+0x9e>
     980:	29 2d       	mov	r18, r9
     982:	21 60       	ori	r18, 0x01	; 1
     984:	2d c0       	rjmp	.+90     	; 0x9e0 <vfprintf+0xe4>
     986:	39 2d       	mov	r19, r9
     988:	32 60       	ori	r19, 0x02	; 2
     98a:	93 2e       	mov	r9, r19
     98c:	89 2d       	mov	r24, r9
     98e:	84 60       	ori	r24, 0x04	; 4
     990:	98 2e       	mov	r9, r24
     992:	2a c0       	rjmp	.+84     	; 0x9e8 <vfprintf+0xec>
     994:	e9 2d       	mov	r30, r9
     996:	e8 60       	ori	r30, 0x08	; 8
     998:	15 c0       	rjmp	.+42     	; 0x9c4 <vfprintf+0xc8>
     99a:	97 fc       	sbrc	r9, 7
     99c:	2d c0       	rjmp	.+90     	; 0x9f8 <vfprintf+0xfc>
     99e:	20 ed       	ldi	r18, 0xD0	; 208
     9a0:	28 0f       	add	r18, r24
     9a2:	2a 30       	cpi	r18, 0x0A	; 10
     9a4:	88 f4       	brcc	.+34     	; 0x9c8 <vfprintf+0xcc>
     9a6:	96 fe       	sbrs	r9, 6
     9a8:	06 c0       	rjmp	.+12     	; 0x9b6 <vfprintf+0xba>
     9aa:	3a e0       	ldi	r19, 0x0A	; 10
     9ac:	13 9f       	mul	r17, r19
     9ae:	20 0d       	add	r18, r0
     9b0:	11 24       	eor	r1, r1
     9b2:	12 2f       	mov	r17, r18
     9b4:	19 c0       	rjmp	.+50     	; 0x9e8 <vfprintf+0xec>
     9b6:	8a e0       	ldi	r24, 0x0A	; 10
     9b8:	58 9e       	mul	r5, r24
     9ba:	20 0d       	add	r18, r0
     9bc:	11 24       	eor	r1, r1
     9be:	52 2e       	mov	r5, r18
     9c0:	e9 2d       	mov	r30, r9
     9c2:	e0 62       	ori	r30, 0x20	; 32
     9c4:	9e 2e       	mov	r9, r30
     9c6:	10 c0       	rjmp	.+32     	; 0x9e8 <vfprintf+0xec>
     9c8:	8e 32       	cpi	r24, 0x2E	; 46
     9ca:	31 f4       	brne	.+12     	; 0x9d8 <vfprintf+0xdc>
     9cc:	96 fc       	sbrc	r9, 6
     9ce:	e5 c2       	rjmp	.+1482   	; 0xf9a <vfprintf+0x69e>
     9d0:	f9 2d       	mov	r31, r9
     9d2:	f0 64       	ori	r31, 0x40	; 64
     9d4:	9f 2e       	mov	r9, r31
     9d6:	08 c0       	rjmp	.+16     	; 0x9e8 <vfprintf+0xec>
     9d8:	8c 36       	cpi	r24, 0x6C	; 108
     9da:	21 f4       	brne	.+8      	; 0x9e4 <vfprintf+0xe8>
     9dc:	29 2d       	mov	r18, r9
     9de:	20 68       	ori	r18, 0x80	; 128
     9e0:	92 2e       	mov	r9, r18
     9e2:	02 c0       	rjmp	.+4      	; 0x9e8 <vfprintf+0xec>
     9e4:	88 36       	cpi	r24, 0x68	; 104
     9e6:	41 f4       	brne	.+16     	; 0x9f8 <vfprintf+0xfc>
     9e8:	f1 01       	movw	r30, r2
     9ea:	93 fd       	sbrc	r25, 3
     9ec:	85 91       	lpm	r24, Z+
     9ee:	93 ff       	sbrs	r25, 3
     9f0:	81 91       	ld	r24, Z+
     9f2:	1f 01       	movw	r2, r30
     9f4:	81 11       	cpse	r24, r1
     9f6:	b3 cf       	rjmp	.-154    	; 0x95e <vfprintf+0x62>
     9f8:	9b eb       	ldi	r25, 0xBB	; 187
     9fa:	98 0f       	add	r25, r24
     9fc:	93 30       	cpi	r25, 0x03	; 3
     9fe:	20 f4       	brcc	.+8      	; 0xa08 <vfprintf+0x10c>
     a00:	99 2d       	mov	r25, r9
     a02:	90 61       	ori	r25, 0x10	; 16
     a04:	80 5e       	subi	r24, 0xE0	; 224
     a06:	07 c0       	rjmp	.+14     	; 0xa16 <vfprintf+0x11a>
     a08:	9b e9       	ldi	r25, 0x9B	; 155
     a0a:	98 0f       	add	r25, r24
     a0c:	93 30       	cpi	r25, 0x03	; 3
     a0e:	08 f0       	brcs	.+2      	; 0xa12 <vfprintf+0x116>
     a10:	66 c1       	rjmp	.+716    	; 0xcde <vfprintf+0x3e2>
     a12:	99 2d       	mov	r25, r9
     a14:	9f 7e       	andi	r25, 0xEF	; 239
     a16:	96 ff       	sbrs	r25, 6
     a18:	16 e0       	ldi	r17, 0x06	; 6
     a1a:	9f 73       	andi	r25, 0x3F	; 63
     a1c:	99 2e       	mov	r9, r25
     a1e:	85 36       	cpi	r24, 0x65	; 101
     a20:	19 f4       	brne	.+6      	; 0xa28 <vfprintf+0x12c>
     a22:	90 64       	ori	r25, 0x40	; 64
     a24:	99 2e       	mov	r9, r25
     a26:	08 c0       	rjmp	.+16     	; 0xa38 <vfprintf+0x13c>
     a28:	86 36       	cpi	r24, 0x66	; 102
     a2a:	21 f4       	brne	.+8      	; 0xa34 <vfprintf+0x138>
     a2c:	39 2f       	mov	r19, r25
     a2e:	30 68       	ori	r19, 0x80	; 128
     a30:	93 2e       	mov	r9, r19
     a32:	02 c0       	rjmp	.+4      	; 0xa38 <vfprintf+0x13c>
     a34:	11 11       	cpse	r17, r1
     a36:	11 50       	subi	r17, 0x01	; 1
     a38:	97 fe       	sbrs	r9, 7
     a3a:	07 c0       	rjmp	.+14     	; 0xa4a <vfprintf+0x14e>
     a3c:	1c 33       	cpi	r17, 0x3C	; 60
     a3e:	50 f4       	brcc	.+20     	; 0xa54 <vfprintf+0x158>
     a40:	44 24       	eor	r4, r4
     a42:	43 94       	inc	r4
     a44:	41 0e       	add	r4, r17
     a46:	27 e0       	ldi	r18, 0x07	; 7
     a48:	0b c0       	rjmp	.+22     	; 0xa60 <vfprintf+0x164>
     a4a:	18 30       	cpi	r17, 0x08	; 8
     a4c:	38 f0       	brcs	.+14     	; 0xa5c <vfprintf+0x160>
     a4e:	27 e0       	ldi	r18, 0x07	; 7
     a50:	17 e0       	ldi	r17, 0x07	; 7
     a52:	05 c0       	rjmp	.+10     	; 0xa5e <vfprintf+0x162>
     a54:	27 e0       	ldi	r18, 0x07	; 7
     a56:	9c e3       	ldi	r25, 0x3C	; 60
     a58:	49 2e       	mov	r4, r25
     a5a:	02 c0       	rjmp	.+4      	; 0xa60 <vfprintf+0x164>
     a5c:	21 2f       	mov	r18, r17
     a5e:	41 2c       	mov	r4, r1
     a60:	56 01       	movw	r10, r12
     a62:	84 e0       	ldi	r24, 0x04	; 4
     a64:	a8 0e       	add	r10, r24
     a66:	b1 1c       	adc	r11, r1
     a68:	f6 01       	movw	r30, r12
     a6a:	60 81       	ld	r22, Z
     a6c:	71 81       	ldd	r23, Z+1	; 0x01
     a6e:	82 81       	ldd	r24, Z+2	; 0x02
     a70:	93 81       	ldd	r25, Z+3	; 0x03
     a72:	04 2d       	mov	r16, r4
     a74:	a3 01       	movw	r20, r6
     a76:	0e 94 32 08 	call	0x1064	; 0x1064 <__ftoa_engine>
     a7a:	6c 01       	movw	r12, r24
     a7c:	f9 81       	ldd	r31, Y+1	; 0x01
     a7e:	fc 87       	std	Y+12, r31	; 0x0c
     a80:	f0 ff       	sbrs	r31, 0
     a82:	02 c0       	rjmp	.+4      	; 0xa88 <vfprintf+0x18c>
     a84:	f3 ff       	sbrs	r31, 3
     a86:	06 c0       	rjmp	.+12     	; 0xa94 <vfprintf+0x198>
     a88:	91 fc       	sbrc	r9, 1
     a8a:	06 c0       	rjmp	.+12     	; 0xa98 <vfprintf+0x19c>
     a8c:	92 fe       	sbrs	r9, 2
     a8e:	06 c0       	rjmp	.+12     	; 0xa9c <vfprintf+0x1a0>
     a90:	00 e2       	ldi	r16, 0x20	; 32
     a92:	05 c0       	rjmp	.+10     	; 0xa9e <vfprintf+0x1a2>
     a94:	0d e2       	ldi	r16, 0x2D	; 45
     a96:	03 c0       	rjmp	.+6      	; 0xa9e <vfprintf+0x1a2>
     a98:	0b e2       	ldi	r16, 0x2B	; 43
     a9a:	01 c0       	rjmp	.+2      	; 0xa9e <vfprintf+0x1a2>
     a9c:	00 e0       	ldi	r16, 0x00	; 0
     a9e:	8c 85       	ldd	r24, Y+12	; 0x0c
     aa0:	8c 70       	andi	r24, 0x0C	; 12
     aa2:	19 f0       	breq	.+6      	; 0xaaa <vfprintf+0x1ae>
     aa4:	01 11       	cpse	r16, r1
     aa6:	5a c2       	rjmp	.+1204   	; 0xf5c <vfprintf+0x660>
     aa8:	9b c2       	rjmp	.+1334   	; 0xfe0 <vfprintf+0x6e4>
     aaa:	97 fe       	sbrs	r9, 7
     aac:	10 c0       	rjmp	.+32     	; 0xace <vfprintf+0x1d2>
     aae:	4c 0c       	add	r4, r12
     ab0:	fc 85       	ldd	r31, Y+12	; 0x0c
     ab2:	f4 ff       	sbrs	r31, 4
     ab4:	04 c0       	rjmp	.+8      	; 0xabe <vfprintf+0x1c2>
     ab6:	8a 81       	ldd	r24, Y+2	; 0x02
     ab8:	81 33       	cpi	r24, 0x31	; 49
     aba:	09 f4       	brne	.+2      	; 0xabe <vfprintf+0x1c2>
     abc:	4a 94       	dec	r4
     abe:	14 14       	cp	r1, r4
     ac0:	74 f5       	brge	.+92     	; 0xb1e <vfprintf+0x222>
     ac2:	28 e0       	ldi	r18, 0x08	; 8
     ac4:	24 15       	cp	r18, r4
     ac6:	78 f5       	brcc	.+94     	; 0xb26 <vfprintf+0x22a>
     ac8:	88 e0       	ldi	r24, 0x08	; 8
     aca:	48 2e       	mov	r4, r24
     acc:	2c c0       	rjmp	.+88     	; 0xb26 <vfprintf+0x22a>
     ace:	96 fc       	sbrc	r9, 6
     ad0:	2a c0       	rjmp	.+84     	; 0xb26 <vfprintf+0x22a>
     ad2:	81 2f       	mov	r24, r17
     ad4:	90 e0       	ldi	r25, 0x00	; 0
     ad6:	8c 15       	cp	r24, r12
     ad8:	9d 05       	cpc	r25, r13
     ada:	9c f0       	brlt	.+38     	; 0xb02 <vfprintf+0x206>
     adc:	3c ef       	ldi	r19, 0xFC	; 252
     ade:	c3 16       	cp	r12, r19
     ae0:	3f ef       	ldi	r19, 0xFF	; 255
     ae2:	d3 06       	cpc	r13, r19
     ae4:	74 f0       	brlt	.+28     	; 0xb02 <vfprintf+0x206>
     ae6:	89 2d       	mov	r24, r9
     ae8:	80 68       	ori	r24, 0x80	; 128
     aea:	98 2e       	mov	r9, r24
     aec:	0a c0       	rjmp	.+20     	; 0xb02 <vfprintf+0x206>
     aee:	e2 e0       	ldi	r30, 0x02	; 2
     af0:	f0 e0       	ldi	r31, 0x00	; 0
     af2:	ec 0f       	add	r30, r28
     af4:	fd 1f       	adc	r31, r29
     af6:	e1 0f       	add	r30, r17
     af8:	f1 1d       	adc	r31, r1
     afa:	80 81       	ld	r24, Z
     afc:	80 33       	cpi	r24, 0x30	; 48
     afe:	19 f4       	brne	.+6      	; 0xb06 <vfprintf+0x20a>
     b00:	11 50       	subi	r17, 0x01	; 1
     b02:	11 11       	cpse	r17, r1
     b04:	f4 cf       	rjmp	.-24     	; 0xaee <vfprintf+0x1f2>
     b06:	97 fe       	sbrs	r9, 7
     b08:	0e c0       	rjmp	.+28     	; 0xb26 <vfprintf+0x22a>
     b0a:	44 24       	eor	r4, r4
     b0c:	43 94       	inc	r4
     b0e:	41 0e       	add	r4, r17
     b10:	81 2f       	mov	r24, r17
     b12:	90 e0       	ldi	r25, 0x00	; 0
     b14:	c8 16       	cp	r12, r24
     b16:	d9 06       	cpc	r13, r25
     b18:	2c f4       	brge	.+10     	; 0xb24 <vfprintf+0x228>
     b1a:	1c 19       	sub	r17, r12
     b1c:	04 c0       	rjmp	.+8      	; 0xb26 <vfprintf+0x22a>
     b1e:	44 24       	eor	r4, r4
     b20:	43 94       	inc	r4
     b22:	01 c0       	rjmp	.+2      	; 0xb26 <vfprintf+0x22a>
     b24:	10 e0       	ldi	r17, 0x00	; 0
     b26:	97 fe       	sbrs	r9, 7
     b28:	06 c0       	rjmp	.+12     	; 0xb36 <vfprintf+0x23a>
     b2a:	1c 14       	cp	r1, r12
     b2c:	1d 04       	cpc	r1, r13
     b2e:	34 f4       	brge	.+12     	; 0xb3c <vfprintf+0x240>
     b30:	c6 01       	movw	r24, r12
     b32:	01 96       	adiw	r24, 0x01	; 1
     b34:	05 c0       	rjmp	.+10     	; 0xb40 <vfprintf+0x244>
     b36:	85 e0       	ldi	r24, 0x05	; 5
     b38:	90 e0       	ldi	r25, 0x00	; 0
     b3a:	02 c0       	rjmp	.+4      	; 0xb40 <vfprintf+0x244>
     b3c:	81 e0       	ldi	r24, 0x01	; 1
     b3e:	90 e0       	ldi	r25, 0x00	; 0
     b40:	01 11       	cpse	r16, r1
     b42:	01 96       	adiw	r24, 0x01	; 1
     b44:	11 23       	and	r17, r17
     b46:	31 f0       	breq	.+12     	; 0xb54 <vfprintf+0x258>
     b48:	21 2f       	mov	r18, r17
     b4a:	30 e0       	ldi	r19, 0x00	; 0
     b4c:	2f 5f       	subi	r18, 0xFF	; 255
     b4e:	3f 4f       	sbci	r19, 0xFF	; 255
     b50:	82 0f       	add	r24, r18
     b52:	93 1f       	adc	r25, r19
     b54:	25 2d       	mov	r18, r5
     b56:	30 e0       	ldi	r19, 0x00	; 0
     b58:	82 17       	cp	r24, r18
     b5a:	93 07       	cpc	r25, r19
     b5c:	14 f4       	brge	.+4      	; 0xb62 <vfprintf+0x266>
     b5e:	58 1a       	sub	r5, r24
     b60:	01 c0       	rjmp	.+2      	; 0xb64 <vfprintf+0x268>
     b62:	51 2c       	mov	r5, r1
     b64:	89 2d       	mov	r24, r9
     b66:	89 70       	andi	r24, 0x09	; 9
     b68:	49 f4       	brne	.+18     	; 0xb7c <vfprintf+0x280>
     b6a:	55 20       	and	r5, r5
     b6c:	39 f0       	breq	.+14     	; 0xb7c <vfprintf+0x280>
     b6e:	b7 01       	movw	r22, r14
     b70:	80 e2       	ldi	r24, 0x20	; 32
     b72:	90 e0       	ldi	r25, 0x00	; 0
     b74:	0e 94 20 09 	call	0x1240	; 0x1240 <fputc>
     b78:	5a 94       	dec	r5
     b7a:	f7 cf       	rjmp	.-18     	; 0xb6a <vfprintf+0x26e>
     b7c:	00 23       	and	r16, r16
     b7e:	29 f0       	breq	.+10     	; 0xb8a <vfprintf+0x28e>
     b80:	b7 01       	movw	r22, r14
     b82:	80 2f       	mov	r24, r16
     b84:	90 e0       	ldi	r25, 0x00	; 0
     b86:	0e 94 20 09 	call	0x1240	; 0x1240 <fputc>
     b8a:	93 fc       	sbrc	r9, 3
     b8c:	09 c0       	rjmp	.+18     	; 0xba0 <vfprintf+0x2a4>
     b8e:	55 20       	and	r5, r5
     b90:	39 f0       	breq	.+14     	; 0xba0 <vfprintf+0x2a4>
     b92:	b7 01       	movw	r22, r14
     b94:	80 e3       	ldi	r24, 0x30	; 48
     b96:	90 e0       	ldi	r25, 0x00	; 0
     b98:	0e 94 20 09 	call	0x1240	; 0x1240 <fputc>
     b9c:	5a 94       	dec	r5
     b9e:	f7 cf       	rjmp	.-18     	; 0xb8e <vfprintf+0x292>
     ba0:	97 fe       	sbrs	r9, 7
     ba2:	4c c0       	rjmp	.+152    	; 0xc3c <vfprintf+0x340>
     ba4:	46 01       	movw	r8, r12
     ba6:	d7 fe       	sbrs	r13, 7
     ba8:	02 c0       	rjmp	.+4      	; 0xbae <vfprintf+0x2b2>
     baa:	81 2c       	mov	r8, r1
     bac:	91 2c       	mov	r9, r1
     bae:	c6 01       	movw	r24, r12
     bb0:	88 19       	sub	r24, r8
     bb2:	99 09       	sbc	r25, r9
     bb4:	f3 01       	movw	r30, r6
     bb6:	e8 0f       	add	r30, r24
     bb8:	f9 1f       	adc	r31, r25
     bba:	fe 87       	std	Y+14, r31	; 0x0e
     bbc:	ed 87       	std	Y+13, r30	; 0x0d
     bbe:	96 01       	movw	r18, r12
     bc0:	24 19       	sub	r18, r4
     bc2:	31 09       	sbc	r19, r1
     bc4:	38 8b       	std	Y+16, r19	; 0x10
     bc6:	2f 87       	std	Y+15, r18	; 0x0f
     bc8:	01 2f       	mov	r16, r17
     bca:	10 e0       	ldi	r17, 0x00	; 0
     bcc:	11 95       	neg	r17
     bce:	01 95       	neg	r16
     bd0:	11 09       	sbc	r17, r1
     bd2:	3f ef       	ldi	r19, 0xFF	; 255
     bd4:	83 16       	cp	r8, r19
     bd6:	93 06       	cpc	r9, r19
     bd8:	29 f4       	brne	.+10     	; 0xbe4 <vfprintf+0x2e8>
     bda:	b7 01       	movw	r22, r14
     bdc:	8e e2       	ldi	r24, 0x2E	; 46
     bde:	90 e0       	ldi	r25, 0x00	; 0
     be0:	0e 94 20 09 	call	0x1240	; 0x1240 <fputc>
     be4:	c8 14       	cp	r12, r8
     be6:	d9 04       	cpc	r13, r9
     be8:	4c f0       	brlt	.+18     	; 0xbfc <vfprintf+0x300>
     bea:	8f 85       	ldd	r24, Y+15	; 0x0f
     bec:	98 89       	ldd	r25, Y+16	; 0x10
     bee:	88 15       	cp	r24, r8
     bf0:	99 05       	cpc	r25, r9
     bf2:	24 f4       	brge	.+8      	; 0xbfc <vfprintf+0x300>
     bf4:	ed 85       	ldd	r30, Y+13	; 0x0d
     bf6:	fe 85       	ldd	r31, Y+14	; 0x0e
     bf8:	81 81       	ldd	r24, Z+1	; 0x01
     bfa:	01 c0       	rjmp	.+2      	; 0xbfe <vfprintf+0x302>
     bfc:	80 e3       	ldi	r24, 0x30	; 48
     bfe:	f1 e0       	ldi	r31, 0x01	; 1
     c00:	8f 1a       	sub	r8, r31
     c02:	91 08       	sbc	r9, r1
     c04:	2d 85       	ldd	r18, Y+13	; 0x0d
     c06:	3e 85       	ldd	r19, Y+14	; 0x0e
     c08:	2f 5f       	subi	r18, 0xFF	; 255
     c0a:	3f 4f       	sbci	r19, 0xFF	; 255
     c0c:	3e 87       	std	Y+14, r19	; 0x0e
     c0e:	2d 87       	std	Y+13, r18	; 0x0d
     c10:	80 16       	cp	r8, r16
     c12:	91 06       	cpc	r9, r17
     c14:	2c f0       	brlt	.+10     	; 0xc20 <vfprintf+0x324>
     c16:	b7 01       	movw	r22, r14
     c18:	90 e0       	ldi	r25, 0x00	; 0
     c1a:	0e 94 20 09 	call	0x1240	; 0x1240 <fputc>
     c1e:	d9 cf       	rjmp	.-78     	; 0xbd2 <vfprintf+0x2d6>
     c20:	c8 14       	cp	r12, r8
     c22:	d9 04       	cpc	r13, r9
     c24:	41 f4       	brne	.+16     	; 0xc36 <vfprintf+0x33a>
     c26:	9a 81       	ldd	r25, Y+2	; 0x02
     c28:	96 33       	cpi	r25, 0x36	; 54
     c2a:	20 f4       	brcc	.+8      	; 0xc34 <vfprintf+0x338>
     c2c:	95 33       	cpi	r25, 0x35	; 53
     c2e:	19 f4       	brne	.+6      	; 0xc36 <vfprintf+0x33a>
     c30:	3c 85       	ldd	r19, Y+12	; 0x0c
     c32:	34 ff       	sbrs	r19, 4
     c34:	81 e3       	ldi	r24, 0x31	; 49
     c36:	b7 01       	movw	r22, r14
     c38:	90 e0       	ldi	r25, 0x00	; 0
     c3a:	4e c0       	rjmp	.+156    	; 0xcd8 <vfprintf+0x3dc>
     c3c:	8a 81       	ldd	r24, Y+2	; 0x02
     c3e:	81 33       	cpi	r24, 0x31	; 49
     c40:	19 f0       	breq	.+6      	; 0xc48 <vfprintf+0x34c>
     c42:	9c 85       	ldd	r25, Y+12	; 0x0c
     c44:	9f 7e       	andi	r25, 0xEF	; 239
     c46:	9c 87       	std	Y+12, r25	; 0x0c
     c48:	b7 01       	movw	r22, r14
     c4a:	90 e0       	ldi	r25, 0x00	; 0
     c4c:	0e 94 20 09 	call	0x1240	; 0x1240 <fputc>
     c50:	11 11       	cpse	r17, r1
     c52:	05 c0       	rjmp	.+10     	; 0xc5e <vfprintf+0x362>
     c54:	94 fc       	sbrc	r9, 4
     c56:	18 c0       	rjmp	.+48     	; 0xc88 <vfprintf+0x38c>
     c58:	85 e6       	ldi	r24, 0x65	; 101
     c5a:	90 e0       	ldi	r25, 0x00	; 0
     c5c:	17 c0       	rjmp	.+46     	; 0xc8c <vfprintf+0x390>
     c5e:	b7 01       	movw	r22, r14
     c60:	8e e2       	ldi	r24, 0x2E	; 46
     c62:	90 e0       	ldi	r25, 0x00	; 0
     c64:	0e 94 20 09 	call	0x1240	; 0x1240 <fputc>
     c68:	1e 5f       	subi	r17, 0xFE	; 254
     c6a:	82 e0       	ldi	r24, 0x02	; 2
     c6c:	01 e0       	ldi	r16, 0x01	; 1
     c6e:	08 0f       	add	r16, r24
     c70:	f3 01       	movw	r30, r6
     c72:	e8 0f       	add	r30, r24
     c74:	f1 1d       	adc	r31, r1
     c76:	80 81       	ld	r24, Z
     c78:	b7 01       	movw	r22, r14
     c7a:	90 e0       	ldi	r25, 0x00	; 0
     c7c:	0e 94 20 09 	call	0x1240	; 0x1240 <fputc>
     c80:	80 2f       	mov	r24, r16
     c82:	01 13       	cpse	r16, r17
     c84:	f3 cf       	rjmp	.-26     	; 0xc6c <vfprintf+0x370>
     c86:	e6 cf       	rjmp	.-52     	; 0xc54 <vfprintf+0x358>
     c88:	85 e4       	ldi	r24, 0x45	; 69
     c8a:	90 e0       	ldi	r25, 0x00	; 0
     c8c:	b7 01       	movw	r22, r14
     c8e:	0e 94 20 09 	call	0x1240	; 0x1240 <fputc>
     c92:	d7 fc       	sbrc	r13, 7
     c94:	06 c0       	rjmp	.+12     	; 0xca2 <vfprintf+0x3a6>
     c96:	c1 14       	cp	r12, r1
     c98:	d1 04       	cpc	r13, r1
     c9a:	41 f4       	brne	.+16     	; 0xcac <vfprintf+0x3b0>
     c9c:	ec 85       	ldd	r30, Y+12	; 0x0c
     c9e:	e4 ff       	sbrs	r30, 4
     ca0:	05 c0       	rjmp	.+10     	; 0xcac <vfprintf+0x3b0>
     ca2:	d1 94       	neg	r13
     ca4:	c1 94       	neg	r12
     ca6:	d1 08       	sbc	r13, r1
     ca8:	8d e2       	ldi	r24, 0x2D	; 45
     caa:	01 c0       	rjmp	.+2      	; 0xcae <vfprintf+0x3b2>
     cac:	8b e2       	ldi	r24, 0x2B	; 43
     cae:	b7 01       	movw	r22, r14
     cb0:	90 e0       	ldi	r25, 0x00	; 0
     cb2:	0e 94 20 09 	call	0x1240	; 0x1240 <fputc>
     cb6:	80 e3       	ldi	r24, 0x30	; 48
     cb8:	2a e0       	ldi	r18, 0x0A	; 10
     cba:	c2 16       	cp	r12, r18
     cbc:	d1 04       	cpc	r13, r1
     cbe:	2c f0       	brlt	.+10     	; 0xcca <vfprintf+0x3ce>
     cc0:	8f 5f       	subi	r24, 0xFF	; 255
     cc2:	fa e0       	ldi	r31, 0x0A	; 10
     cc4:	cf 1a       	sub	r12, r31
     cc6:	d1 08       	sbc	r13, r1
     cc8:	f7 cf       	rjmp	.-18     	; 0xcb8 <vfprintf+0x3bc>
     cca:	b7 01       	movw	r22, r14
     ccc:	90 e0       	ldi	r25, 0x00	; 0
     cce:	0e 94 20 09 	call	0x1240	; 0x1240 <fputc>
     cd2:	b7 01       	movw	r22, r14
     cd4:	c6 01       	movw	r24, r12
     cd6:	c0 96       	adiw	r24, 0x30	; 48
     cd8:	0e 94 20 09 	call	0x1240	; 0x1240 <fputc>
     cdc:	54 c1       	rjmp	.+680    	; 0xf86 <vfprintf+0x68a>
     cde:	83 36       	cpi	r24, 0x63	; 99
     ce0:	31 f0       	breq	.+12     	; 0xcee <vfprintf+0x3f2>
     ce2:	83 37       	cpi	r24, 0x73	; 115
     ce4:	79 f0       	breq	.+30     	; 0xd04 <vfprintf+0x408>
     ce6:	83 35       	cpi	r24, 0x53	; 83
     ce8:	09 f0       	breq	.+2      	; 0xcec <vfprintf+0x3f0>
     cea:	56 c0       	rjmp	.+172    	; 0xd98 <vfprintf+0x49c>
     cec:	20 c0       	rjmp	.+64     	; 0xd2e <vfprintf+0x432>
     cee:	56 01       	movw	r10, r12
     cf0:	32 e0       	ldi	r19, 0x02	; 2
     cf2:	a3 0e       	add	r10, r19
     cf4:	b1 1c       	adc	r11, r1
     cf6:	f6 01       	movw	r30, r12
     cf8:	80 81       	ld	r24, Z
     cfa:	89 83       	std	Y+1, r24	; 0x01
     cfc:	01 e0       	ldi	r16, 0x01	; 1
     cfe:	10 e0       	ldi	r17, 0x00	; 0
     d00:	63 01       	movw	r12, r6
     d02:	12 c0       	rjmp	.+36     	; 0xd28 <vfprintf+0x42c>
     d04:	56 01       	movw	r10, r12
     d06:	f2 e0       	ldi	r31, 0x02	; 2
     d08:	af 0e       	add	r10, r31
     d0a:	b1 1c       	adc	r11, r1
     d0c:	f6 01       	movw	r30, r12
     d0e:	c0 80       	ld	r12, Z
     d10:	d1 80       	ldd	r13, Z+1	; 0x01
     d12:	96 fe       	sbrs	r9, 6
     d14:	03 c0       	rjmp	.+6      	; 0xd1c <vfprintf+0x420>
     d16:	61 2f       	mov	r22, r17
     d18:	70 e0       	ldi	r23, 0x00	; 0
     d1a:	02 c0       	rjmp	.+4      	; 0xd20 <vfprintf+0x424>
     d1c:	6f ef       	ldi	r22, 0xFF	; 255
     d1e:	7f ef       	ldi	r23, 0xFF	; 255
     d20:	c6 01       	movw	r24, r12
     d22:	0e 94 15 09 	call	0x122a	; 0x122a <strnlen>
     d26:	8c 01       	movw	r16, r24
     d28:	f9 2d       	mov	r31, r9
     d2a:	ff 77       	andi	r31, 0x7F	; 127
     d2c:	14 c0       	rjmp	.+40     	; 0xd56 <vfprintf+0x45a>
     d2e:	56 01       	movw	r10, r12
     d30:	22 e0       	ldi	r18, 0x02	; 2
     d32:	a2 0e       	add	r10, r18
     d34:	b1 1c       	adc	r11, r1
     d36:	f6 01       	movw	r30, r12
     d38:	c0 80       	ld	r12, Z
     d3a:	d1 80       	ldd	r13, Z+1	; 0x01
     d3c:	96 fe       	sbrs	r9, 6
     d3e:	03 c0       	rjmp	.+6      	; 0xd46 <vfprintf+0x44a>
     d40:	61 2f       	mov	r22, r17
     d42:	70 e0       	ldi	r23, 0x00	; 0
     d44:	02 c0       	rjmp	.+4      	; 0xd4a <vfprintf+0x44e>
     d46:	6f ef       	ldi	r22, 0xFF	; 255
     d48:	7f ef       	ldi	r23, 0xFF	; 255
     d4a:	c6 01       	movw	r24, r12
     d4c:	0e 94 0a 09 	call	0x1214	; 0x1214 <strnlen_P>
     d50:	8c 01       	movw	r16, r24
     d52:	f9 2d       	mov	r31, r9
     d54:	f0 68       	ori	r31, 0x80	; 128
     d56:	9f 2e       	mov	r9, r31
     d58:	f3 fd       	sbrc	r31, 3
     d5a:	1a c0       	rjmp	.+52     	; 0xd90 <vfprintf+0x494>
     d5c:	85 2d       	mov	r24, r5
     d5e:	90 e0       	ldi	r25, 0x00	; 0
     d60:	08 17       	cp	r16, r24
     d62:	19 07       	cpc	r17, r25
     d64:	a8 f4       	brcc	.+42     	; 0xd90 <vfprintf+0x494>
     d66:	b7 01       	movw	r22, r14
     d68:	80 e2       	ldi	r24, 0x20	; 32
     d6a:	90 e0       	ldi	r25, 0x00	; 0
     d6c:	0e 94 20 09 	call	0x1240	; 0x1240 <fputc>
     d70:	5a 94       	dec	r5
     d72:	f4 cf       	rjmp	.-24     	; 0xd5c <vfprintf+0x460>
     d74:	f6 01       	movw	r30, r12
     d76:	97 fc       	sbrc	r9, 7
     d78:	85 91       	lpm	r24, Z+
     d7a:	97 fe       	sbrs	r9, 7
     d7c:	81 91       	ld	r24, Z+
     d7e:	6f 01       	movw	r12, r30
     d80:	b7 01       	movw	r22, r14
     d82:	90 e0       	ldi	r25, 0x00	; 0
     d84:	0e 94 20 09 	call	0x1240	; 0x1240 <fputc>
     d88:	51 10       	cpse	r5, r1
     d8a:	5a 94       	dec	r5
     d8c:	01 50       	subi	r16, 0x01	; 1
     d8e:	11 09       	sbc	r17, r1
     d90:	01 15       	cp	r16, r1
     d92:	11 05       	cpc	r17, r1
     d94:	79 f7       	brne	.-34     	; 0xd74 <vfprintf+0x478>
     d96:	f7 c0       	rjmp	.+494    	; 0xf86 <vfprintf+0x68a>
     d98:	84 36       	cpi	r24, 0x64	; 100
     d9a:	11 f0       	breq	.+4      	; 0xda0 <vfprintf+0x4a4>
     d9c:	89 36       	cpi	r24, 0x69	; 105
     d9e:	61 f5       	brne	.+88     	; 0xdf8 <vfprintf+0x4fc>
     da0:	56 01       	movw	r10, r12
     da2:	97 fe       	sbrs	r9, 7
     da4:	09 c0       	rjmp	.+18     	; 0xdb8 <vfprintf+0x4bc>
     da6:	24 e0       	ldi	r18, 0x04	; 4
     da8:	a2 0e       	add	r10, r18
     daa:	b1 1c       	adc	r11, r1
     dac:	f6 01       	movw	r30, r12
     dae:	60 81       	ld	r22, Z
     db0:	71 81       	ldd	r23, Z+1	; 0x01
     db2:	82 81       	ldd	r24, Z+2	; 0x02
     db4:	93 81       	ldd	r25, Z+3	; 0x03
     db6:	0a c0       	rjmp	.+20     	; 0xdcc <vfprintf+0x4d0>
     db8:	f2 e0       	ldi	r31, 0x02	; 2
     dba:	af 0e       	add	r10, r31
     dbc:	b1 1c       	adc	r11, r1
     dbe:	f6 01       	movw	r30, r12
     dc0:	60 81       	ld	r22, Z
     dc2:	71 81       	ldd	r23, Z+1	; 0x01
     dc4:	07 2e       	mov	r0, r23
     dc6:	00 0c       	add	r0, r0
     dc8:	88 0b       	sbc	r24, r24
     dca:	99 0b       	sbc	r25, r25
     dcc:	f9 2d       	mov	r31, r9
     dce:	ff 76       	andi	r31, 0x6F	; 111
     dd0:	9f 2e       	mov	r9, r31
     dd2:	97 ff       	sbrs	r25, 7
     dd4:	09 c0       	rjmp	.+18     	; 0xde8 <vfprintf+0x4ec>
     dd6:	90 95       	com	r25
     dd8:	80 95       	com	r24
     dda:	70 95       	com	r23
     ddc:	61 95       	neg	r22
     dde:	7f 4f       	sbci	r23, 0xFF	; 255
     de0:	8f 4f       	sbci	r24, 0xFF	; 255
     de2:	9f 4f       	sbci	r25, 0xFF	; 255
     de4:	f0 68       	ori	r31, 0x80	; 128
     de6:	9f 2e       	mov	r9, r31
     de8:	2a e0       	ldi	r18, 0x0A	; 10
     dea:	30 e0       	ldi	r19, 0x00	; 0
     dec:	a3 01       	movw	r20, r6
     dee:	0e 94 a2 09 	call	0x1344	; 0x1344 <__ultoa_invert>
     df2:	c8 2e       	mov	r12, r24
     df4:	c6 18       	sub	r12, r6
     df6:	3f c0       	rjmp	.+126    	; 0xe76 <vfprintf+0x57a>
     df8:	09 2d       	mov	r16, r9
     dfa:	85 37       	cpi	r24, 0x75	; 117
     dfc:	21 f4       	brne	.+8      	; 0xe06 <vfprintf+0x50a>
     dfe:	0f 7e       	andi	r16, 0xEF	; 239
     e00:	2a e0       	ldi	r18, 0x0A	; 10
     e02:	30 e0       	ldi	r19, 0x00	; 0
     e04:	1d c0       	rjmp	.+58     	; 0xe40 <vfprintf+0x544>
     e06:	09 7f       	andi	r16, 0xF9	; 249
     e08:	8f 36       	cpi	r24, 0x6F	; 111
     e0a:	91 f0       	breq	.+36     	; 0xe30 <vfprintf+0x534>
     e0c:	18 f4       	brcc	.+6      	; 0xe14 <vfprintf+0x518>
     e0e:	88 35       	cpi	r24, 0x58	; 88
     e10:	59 f0       	breq	.+22     	; 0xe28 <vfprintf+0x52c>
     e12:	c3 c0       	rjmp	.+390    	; 0xf9a <vfprintf+0x69e>
     e14:	80 37       	cpi	r24, 0x70	; 112
     e16:	19 f0       	breq	.+6      	; 0xe1e <vfprintf+0x522>
     e18:	88 37       	cpi	r24, 0x78	; 120
     e1a:	11 f0       	breq	.+4      	; 0xe20 <vfprintf+0x524>
     e1c:	be c0       	rjmp	.+380    	; 0xf9a <vfprintf+0x69e>
     e1e:	00 61       	ori	r16, 0x10	; 16
     e20:	04 ff       	sbrs	r16, 4
     e22:	09 c0       	rjmp	.+18     	; 0xe36 <vfprintf+0x53a>
     e24:	04 60       	ori	r16, 0x04	; 4
     e26:	07 c0       	rjmp	.+14     	; 0xe36 <vfprintf+0x53a>
     e28:	94 fe       	sbrs	r9, 4
     e2a:	08 c0       	rjmp	.+16     	; 0xe3c <vfprintf+0x540>
     e2c:	06 60       	ori	r16, 0x06	; 6
     e2e:	06 c0       	rjmp	.+12     	; 0xe3c <vfprintf+0x540>
     e30:	28 e0       	ldi	r18, 0x08	; 8
     e32:	30 e0       	ldi	r19, 0x00	; 0
     e34:	05 c0       	rjmp	.+10     	; 0xe40 <vfprintf+0x544>
     e36:	20 e1       	ldi	r18, 0x10	; 16
     e38:	30 e0       	ldi	r19, 0x00	; 0
     e3a:	02 c0       	rjmp	.+4      	; 0xe40 <vfprintf+0x544>
     e3c:	20 e1       	ldi	r18, 0x10	; 16
     e3e:	32 e0       	ldi	r19, 0x02	; 2
     e40:	56 01       	movw	r10, r12
     e42:	07 ff       	sbrs	r16, 7
     e44:	09 c0       	rjmp	.+18     	; 0xe58 <vfprintf+0x55c>
     e46:	84 e0       	ldi	r24, 0x04	; 4
     e48:	a8 0e       	add	r10, r24
     e4a:	b1 1c       	adc	r11, r1
     e4c:	f6 01       	movw	r30, r12
     e4e:	60 81       	ld	r22, Z
     e50:	71 81       	ldd	r23, Z+1	; 0x01
     e52:	82 81       	ldd	r24, Z+2	; 0x02
     e54:	93 81       	ldd	r25, Z+3	; 0x03
     e56:	08 c0       	rjmp	.+16     	; 0xe68 <vfprintf+0x56c>
     e58:	f2 e0       	ldi	r31, 0x02	; 2
     e5a:	af 0e       	add	r10, r31
     e5c:	b1 1c       	adc	r11, r1
     e5e:	f6 01       	movw	r30, r12
     e60:	60 81       	ld	r22, Z
     e62:	71 81       	ldd	r23, Z+1	; 0x01
     e64:	80 e0       	ldi	r24, 0x00	; 0
     e66:	90 e0       	ldi	r25, 0x00	; 0
     e68:	a3 01       	movw	r20, r6
     e6a:	0e 94 a2 09 	call	0x1344	; 0x1344 <__ultoa_invert>
     e6e:	c8 2e       	mov	r12, r24
     e70:	c6 18       	sub	r12, r6
     e72:	0f 77       	andi	r16, 0x7F	; 127
     e74:	90 2e       	mov	r9, r16
     e76:	96 fe       	sbrs	r9, 6
     e78:	0b c0       	rjmp	.+22     	; 0xe90 <vfprintf+0x594>
     e7a:	09 2d       	mov	r16, r9
     e7c:	0e 7f       	andi	r16, 0xFE	; 254
     e7e:	c1 16       	cp	r12, r17
     e80:	50 f4       	brcc	.+20     	; 0xe96 <vfprintf+0x59a>
     e82:	94 fe       	sbrs	r9, 4
     e84:	0a c0       	rjmp	.+20     	; 0xe9a <vfprintf+0x59e>
     e86:	92 fc       	sbrc	r9, 2
     e88:	08 c0       	rjmp	.+16     	; 0xe9a <vfprintf+0x59e>
     e8a:	09 2d       	mov	r16, r9
     e8c:	0e 7e       	andi	r16, 0xEE	; 238
     e8e:	05 c0       	rjmp	.+10     	; 0xe9a <vfprintf+0x59e>
     e90:	dc 2c       	mov	r13, r12
     e92:	09 2d       	mov	r16, r9
     e94:	03 c0       	rjmp	.+6      	; 0xe9c <vfprintf+0x5a0>
     e96:	dc 2c       	mov	r13, r12
     e98:	01 c0       	rjmp	.+2      	; 0xe9c <vfprintf+0x5a0>
     e9a:	d1 2e       	mov	r13, r17
     e9c:	04 ff       	sbrs	r16, 4
     e9e:	0d c0       	rjmp	.+26     	; 0xeba <vfprintf+0x5be>
     ea0:	fe 01       	movw	r30, r28
     ea2:	ec 0d       	add	r30, r12
     ea4:	f1 1d       	adc	r31, r1
     ea6:	80 81       	ld	r24, Z
     ea8:	80 33       	cpi	r24, 0x30	; 48
     eaa:	11 f4       	brne	.+4      	; 0xeb0 <vfprintf+0x5b4>
     eac:	09 7e       	andi	r16, 0xE9	; 233
     eae:	09 c0       	rjmp	.+18     	; 0xec2 <vfprintf+0x5c6>
     eb0:	02 ff       	sbrs	r16, 2
     eb2:	06 c0       	rjmp	.+12     	; 0xec0 <vfprintf+0x5c4>
     eb4:	d3 94       	inc	r13
     eb6:	d3 94       	inc	r13
     eb8:	04 c0       	rjmp	.+8      	; 0xec2 <vfprintf+0x5c6>
     eba:	80 2f       	mov	r24, r16
     ebc:	86 78       	andi	r24, 0x86	; 134
     ebe:	09 f0       	breq	.+2      	; 0xec2 <vfprintf+0x5c6>
     ec0:	d3 94       	inc	r13
     ec2:	03 fd       	sbrc	r16, 3
     ec4:	11 c0       	rjmp	.+34     	; 0xee8 <vfprintf+0x5ec>
     ec6:	00 ff       	sbrs	r16, 0
     ec8:	06 c0       	rjmp	.+12     	; 0xed6 <vfprintf+0x5da>
     eca:	1c 2d       	mov	r17, r12
     ecc:	d5 14       	cp	r13, r5
     ece:	80 f4       	brcc	.+32     	; 0xef0 <vfprintf+0x5f4>
     ed0:	15 0d       	add	r17, r5
     ed2:	1d 19       	sub	r17, r13
     ed4:	0d c0       	rjmp	.+26     	; 0xef0 <vfprintf+0x5f4>
     ed6:	d5 14       	cp	r13, r5
     ed8:	58 f4       	brcc	.+22     	; 0xef0 <vfprintf+0x5f4>
     eda:	b7 01       	movw	r22, r14
     edc:	80 e2       	ldi	r24, 0x20	; 32
     ede:	90 e0       	ldi	r25, 0x00	; 0
     ee0:	0e 94 20 09 	call	0x1240	; 0x1240 <fputc>
     ee4:	d3 94       	inc	r13
     ee6:	f7 cf       	rjmp	.-18     	; 0xed6 <vfprintf+0x5da>
     ee8:	d5 14       	cp	r13, r5
     eea:	10 f4       	brcc	.+4      	; 0xef0 <vfprintf+0x5f4>
     eec:	5d 18       	sub	r5, r13
     eee:	01 c0       	rjmp	.+2      	; 0xef2 <vfprintf+0x5f6>
     ef0:	51 2c       	mov	r5, r1
     ef2:	04 ff       	sbrs	r16, 4
     ef4:	10 c0       	rjmp	.+32     	; 0xf16 <vfprintf+0x61a>
     ef6:	b7 01       	movw	r22, r14
     ef8:	80 e3       	ldi	r24, 0x30	; 48
     efa:	90 e0       	ldi	r25, 0x00	; 0
     efc:	0e 94 20 09 	call	0x1240	; 0x1240 <fputc>
     f00:	02 ff       	sbrs	r16, 2
     f02:	17 c0       	rjmp	.+46     	; 0xf32 <vfprintf+0x636>
     f04:	01 fd       	sbrc	r16, 1
     f06:	03 c0       	rjmp	.+6      	; 0xf0e <vfprintf+0x612>
     f08:	88 e7       	ldi	r24, 0x78	; 120
     f0a:	90 e0       	ldi	r25, 0x00	; 0
     f0c:	02 c0       	rjmp	.+4      	; 0xf12 <vfprintf+0x616>
     f0e:	88 e5       	ldi	r24, 0x58	; 88
     f10:	90 e0       	ldi	r25, 0x00	; 0
     f12:	b7 01       	movw	r22, r14
     f14:	0c c0       	rjmp	.+24     	; 0xf2e <vfprintf+0x632>
     f16:	80 2f       	mov	r24, r16
     f18:	86 78       	andi	r24, 0x86	; 134
     f1a:	59 f0       	breq	.+22     	; 0xf32 <vfprintf+0x636>
     f1c:	01 ff       	sbrs	r16, 1
     f1e:	02 c0       	rjmp	.+4      	; 0xf24 <vfprintf+0x628>
     f20:	8b e2       	ldi	r24, 0x2B	; 43
     f22:	01 c0       	rjmp	.+2      	; 0xf26 <vfprintf+0x62a>
     f24:	80 e2       	ldi	r24, 0x20	; 32
     f26:	07 fd       	sbrc	r16, 7
     f28:	8d e2       	ldi	r24, 0x2D	; 45
     f2a:	b7 01       	movw	r22, r14
     f2c:	90 e0       	ldi	r25, 0x00	; 0
     f2e:	0e 94 20 09 	call	0x1240	; 0x1240 <fputc>
     f32:	c1 16       	cp	r12, r17
     f34:	38 f4       	brcc	.+14     	; 0xf44 <vfprintf+0x648>
     f36:	b7 01       	movw	r22, r14
     f38:	80 e3       	ldi	r24, 0x30	; 48
     f3a:	90 e0       	ldi	r25, 0x00	; 0
     f3c:	0e 94 20 09 	call	0x1240	; 0x1240 <fputc>
     f40:	11 50       	subi	r17, 0x01	; 1
     f42:	f7 cf       	rjmp	.-18     	; 0xf32 <vfprintf+0x636>
     f44:	ca 94       	dec	r12
     f46:	f3 01       	movw	r30, r6
     f48:	ec 0d       	add	r30, r12
     f4a:	f1 1d       	adc	r31, r1
     f4c:	80 81       	ld	r24, Z
     f4e:	b7 01       	movw	r22, r14
     f50:	90 e0       	ldi	r25, 0x00	; 0
     f52:	0e 94 20 09 	call	0x1240	; 0x1240 <fputc>
     f56:	c1 10       	cpse	r12, r1
     f58:	f5 cf       	rjmp	.-22     	; 0xf44 <vfprintf+0x648>
     f5a:	15 c0       	rjmp	.+42     	; 0xf86 <vfprintf+0x68a>
     f5c:	f4 e0       	ldi	r31, 0x04	; 4
     f5e:	f5 15       	cp	r31, r5
     f60:	60 f5       	brcc	.+88     	; 0xfba <vfprintf+0x6be>
     f62:	84 e0       	ldi	r24, 0x04	; 4
     f64:	58 1a       	sub	r5, r24
     f66:	93 fe       	sbrs	r9, 3
     f68:	1f c0       	rjmp	.+62     	; 0xfa8 <vfprintf+0x6ac>
     f6a:	01 11       	cpse	r16, r1
     f6c:	27 c0       	rjmp	.+78     	; 0xfbc <vfprintf+0x6c0>
     f6e:	2c 85       	ldd	r18, Y+12	; 0x0c
     f70:	23 ff       	sbrs	r18, 3
     f72:	2a c0       	rjmp	.+84     	; 0xfc8 <vfprintf+0x6cc>
     f74:	0c e6       	ldi	r16, 0x6C	; 108
     f76:	10 e0       	ldi	r17, 0x00	; 0
     f78:	39 2d       	mov	r19, r9
     f7a:	30 71       	andi	r19, 0x10	; 16
     f7c:	93 2e       	mov	r9, r19
     f7e:	f8 01       	movw	r30, r16
     f80:	84 91       	lpm	r24, Z
     f82:	81 11       	cpse	r24, r1
     f84:	24 c0       	rjmp	.+72     	; 0xfce <vfprintf+0x6d2>
     f86:	55 20       	and	r5, r5
     f88:	09 f4       	brne	.+2      	; 0xf8c <vfprintf+0x690>
     f8a:	e4 cc       	rjmp	.-1592   	; 0x954 <vfprintf+0x58>
     f8c:	b7 01       	movw	r22, r14
     f8e:	80 e2       	ldi	r24, 0x20	; 32
     f90:	90 e0       	ldi	r25, 0x00	; 0
     f92:	0e 94 20 09 	call	0x1240	; 0x1240 <fputc>
     f96:	5a 94       	dec	r5
     f98:	f6 cf       	rjmp	.-20     	; 0xf86 <vfprintf+0x68a>
     f9a:	f7 01       	movw	r30, r14
     f9c:	86 81       	ldd	r24, Z+6	; 0x06
     f9e:	97 81       	ldd	r25, Z+7	; 0x07
     fa0:	26 c0       	rjmp	.+76     	; 0xfee <vfprintf+0x6f2>
     fa2:	8f ef       	ldi	r24, 0xFF	; 255
     fa4:	9f ef       	ldi	r25, 0xFF	; 255
     fa6:	23 c0       	rjmp	.+70     	; 0xfee <vfprintf+0x6f2>
     fa8:	b7 01       	movw	r22, r14
     faa:	80 e2       	ldi	r24, 0x20	; 32
     fac:	90 e0       	ldi	r25, 0x00	; 0
     fae:	0e 94 20 09 	call	0x1240	; 0x1240 <fputc>
     fb2:	5a 94       	dec	r5
     fb4:	51 10       	cpse	r5, r1
     fb6:	f8 cf       	rjmp	.-16     	; 0xfa8 <vfprintf+0x6ac>
     fb8:	d8 cf       	rjmp	.-80     	; 0xf6a <vfprintf+0x66e>
     fba:	51 2c       	mov	r5, r1
     fbc:	b7 01       	movw	r22, r14
     fbe:	80 2f       	mov	r24, r16
     fc0:	90 e0       	ldi	r25, 0x00	; 0
     fc2:	0e 94 20 09 	call	0x1240	; 0x1240 <fputc>
     fc6:	d3 cf       	rjmp	.-90     	; 0xf6e <vfprintf+0x672>
     fc8:	00 e7       	ldi	r16, 0x70	; 112
     fca:	10 e0       	ldi	r17, 0x00	; 0
     fcc:	d5 cf       	rjmp	.-86     	; 0xf78 <vfprintf+0x67c>
     fce:	91 10       	cpse	r9, r1
     fd0:	80 52       	subi	r24, 0x20	; 32
     fd2:	b7 01       	movw	r22, r14
     fd4:	90 e0       	ldi	r25, 0x00	; 0
     fd6:	0e 94 20 09 	call	0x1240	; 0x1240 <fputc>
     fda:	0f 5f       	subi	r16, 0xFF	; 255
     fdc:	1f 4f       	sbci	r17, 0xFF	; 255
     fde:	cf cf       	rjmp	.-98     	; 0xf7e <vfprintf+0x682>
     fe0:	23 e0       	ldi	r18, 0x03	; 3
     fe2:	25 15       	cp	r18, r5
     fe4:	10 f4       	brcc	.+4      	; 0xfea <vfprintf+0x6ee>
     fe6:	83 e0       	ldi	r24, 0x03	; 3
     fe8:	bd cf       	rjmp	.-134    	; 0xf64 <vfprintf+0x668>
     fea:	51 2c       	mov	r5, r1
     fec:	c0 cf       	rjmp	.-128    	; 0xf6e <vfprintf+0x672>
     fee:	60 96       	adiw	r28, 0x10	; 16
     ff0:	e2 e1       	ldi	r30, 0x12	; 18
     ff2:	0c 94 17 08 	jmp	0x102e	; 0x102e <__epilogue_restores__>

00000ff6 <__prologue_saves__>:
     ff6:	2f 92       	push	r2
     ff8:	3f 92       	push	r3
     ffa:	4f 92       	push	r4
     ffc:	5f 92       	push	r5
     ffe:	6f 92       	push	r6
    1000:	7f 92       	push	r7
    1002:	8f 92       	push	r8
    1004:	9f 92       	push	r9
    1006:	af 92       	push	r10
    1008:	bf 92       	push	r11
    100a:	cf 92       	push	r12
    100c:	df 92       	push	r13
    100e:	ef 92       	push	r14
    1010:	ff 92       	push	r15
    1012:	0f 93       	push	r16
    1014:	1f 93       	push	r17
    1016:	cf 93       	push	r28
    1018:	df 93       	push	r29
    101a:	cd b7       	in	r28, 0x3d	; 61
    101c:	de b7       	in	r29, 0x3e	; 62
    101e:	ca 1b       	sub	r28, r26
    1020:	db 0b       	sbc	r29, r27
    1022:	0f b6       	in	r0, 0x3f	; 63
    1024:	f8 94       	cli
    1026:	de bf       	out	0x3e, r29	; 62
    1028:	0f be       	out	0x3f, r0	; 63
    102a:	cd bf       	out	0x3d, r28	; 61
    102c:	09 94       	ijmp

0000102e <__epilogue_restores__>:
    102e:	2a 88       	ldd	r2, Y+18	; 0x12
    1030:	39 88       	ldd	r3, Y+17	; 0x11
    1032:	48 88       	ldd	r4, Y+16	; 0x10
    1034:	5f 84       	ldd	r5, Y+15	; 0x0f
    1036:	6e 84       	ldd	r6, Y+14	; 0x0e
    1038:	7d 84       	ldd	r7, Y+13	; 0x0d
    103a:	8c 84       	ldd	r8, Y+12	; 0x0c
    103c:	9b 84       	ldd	r9, Y+11	; 0x0b
    103e:	aa 84       	ldd	r10, Y+10	; 0x0a
    1040:	b9 84       	ldd	r11, Y+9	; 0x09
    1042:	c8 84       	ldd	r12, Y+8	; 0x08
    1044:	df 80       	ldd	r13, Y+7	; 0x07
    1046:	ee 80       	ldd	r14, Y+6	; 0x06
    1048:	fd 80       	ldd	r15, Y+5	; 0x05
    104a:	0c 81       	ldd	r16, Y+4	; 0x04
    104c:	1b 81       	ldd	r17, Y+3	; 0x03
    104e:	aa 81       	ldd	r26, Y+2	; 0x02
    1050:	b9 81       	ldd	r27, Y+1	; 0x01
    1052:	ce 0f       	add	r28, r30
    1054:	d1 1d       	adc	r29, r1
    1056:	0f b6       	in	r0, 0x3f	; 63
    1058:	f8 94       	cli
    105a:	de bf       	out	0x3e, r29	; 62
    105c:	0f be       	out	0x3f, r0	; 63
    105e:	cd bf       	out	0x3d, r28	; 61
    1060:	ed 01       	movw	r28, r26
    1062:	08 95       	ret

00001064 <__ftoa_engine>:
    1064:	28 30       	cpi	r18, 0x08	; 8
    1066:	08 f0       	brcs	.+2      	; 0x106a <__ftoa_engine+0x6>
    1068:	27 e0       	ldi	r18, 0x07	; 7
    106a:	33 27       	eor	r19, r19
    106c:	da 01       	movw	r26, r20
    106e:	99 0f       	add	r25, r25
    1070:	31 1d       	adc	r19, r1
    1072:	87 fd       	sbrc	r24, 7
    1074:	91 60       	ori	r25, 0x01	; 1
    1076:	00 96       	adiw	r24, 0x00	; 0
    1078:	61 05       	cpc	r22, r1
    107a:	71 05       	cpc	r23, r1
    107c:	39 f4       	brne	.+14     	; 0x108c <__ftoa_engine+0x28>
    107e:	32 60       	ori	r19, 0x02	; 2
    1080:	2e 5f       	subi	r18, 0xFE	; 254
    1082:	3d 93       	st	X+, r19
    1084:	30 e3       	ldi	r19, 0x30	; 48
    1086:	2a 95       	dec	r18
    1088:	e1 f7       	brne	.-8      	; 0x1082 <__ftoa_engine+0x1e>
    108a:	08 95       	ret
    108c:	9f 3f       	cpi	r25, 0xFF	; 255
    108e:	30 f0       	brcs	.+12     	; 0x109c <__ftoa_engine+0x38>
    1090:	80 38       	cpi	r24, 0x80	; 128
    1092:	71 05       	cpc	r23, r1
    1094:	61 05       	cpc	r22, r1
    1096:	09 f0       	breq	.+2      	; 0x109a <__ftoa_engine+0x36>
    1098:	3c 5f       	subi	r19, 0xFC	; 252
    109a:	3c 5f       	subi	r19, 0xFC	; 252
    109c:	3d 93       	st	X+, r19
    109e:	91 30       	cpi	r25, 0x01	; 1
    10a0:	08 f0       	brcs	.+2      	; 0x10a4 <__ftoa_engine+0x40>
    10a2:	80 68       	ori	r24, 0x80	; 128
    10a4:	91 1d       	adc	r25, r1
    10a6:	df 93       	push	r29
    10a8:	cf 93       	push	r28
    10aa:	1f 93       	push	r17
    10ac:	0f 93       	push	r16
    10ae:	ff 92       	push	r15
    10b0:	ef 92       	push	r14
    10b2:	19 2f       	mov	r17, r25
    10b4:	98 7f       	andi	r25, 0xF8	; 248
    10b6:	96 95       	lsr	r25
    10b8:	e9 2f       	mov	r30, r25
    10ba:	96 95       	lsr	r25
    10bc:	96 95       	lsr	r25
    10be:	e9 0f       	add	r30, r25
    10c0:	ff 27       	eor	r31, r31
    10c2:	e2 53       	subi	r30, 0x32	; 50
    10c4:	ff 4f       	sbci	r31, 0xFF	; 255
    10c6:	99 27       	eor	r25, r25
    10c8:	33 27       	eor	r19, r19
    10ca:	ee 24       	eor	r14, r14
    10cc:	ff 24       	eor	r15, r15
    10ce:	a7 01       	movw	r20, r14
    10d0:	e7 01       	movw	r28, r14
    10d2:	05 90       	lpm	r0, Z+
    10d4:	08 94       	sec
    10d6:	07 94       	ror	r0
    10d8:	28 f4       	brcc	.+10     	; 0x10e4 <__ftoa_engine+0x80>
    10da:	36 0f       	add	r19, r22
    10dc:	e7 1e       	adc	r14, r23
    10de:	f8 1e       	adc	r15, r24
    10e0:	49 1f       	adc	r20, r25
    10e2:	51 1d       	adc	r21, r1
    10e4:	66 0f       	add	r22, r22
    10e6:	77 1f       	adc	r23, r23
    10e8:	88 1f       	adc	r24, r24
    10ea:	99 1f       	adc	r25, r25
    10ec:	06 94       	lsr	r0
    10ee:	a1 f7       	brne	.-24     	; 0x10d8 <__ftoa_engine+0x74>
    10f0:	05 90       	lpm	r0, Z+
    10f2:	07 94       	ror	r0
    10f4:	28 f4       	brcc	.+10     	; 0x1100 <__ftoa_engine+0x9c>
    10f6:	e7 0e       	add	r14, r23
    10f8:	f8 1e       	adc	r15, r24
    10fa:	49 1f       	adc	r20, r25
    10fc:	56 1f       	adc	r21, r22
    10fe:	c1 1d       	adc	r28, r1
    1100:	77 0f       	add	r23, r23
    1102:	88 1f       	adc	r24, r24
    1104:	99 1f       	adc	r25, r25
    1106:	66 1f       	adc	r22, r22
    1108:	06 94       	lsr	r0
    110a:	a1 f7       	brne	.-24     	; 0x10f4 <__ftoa_engine+0x90>
    110c:	05 90       	lpm	r0, Z+
    110e:	07 94       	ror	r0
    1110:	28 f4       	brcc	.+10     	; 0x111c <__ftoa_engine+0xb8>
    1112:	f8 0e       	add	r15, r24
    1114:	49 1f       	adc	r20, r25
    1116:	56 1f       	adc	r21, r22
    1118:	c7 1f       	adc	r28, r23
    111a:	d1 1d       	adc	r29, r1
    111c:	88 0f       	add	r24, r24
    111e:	99 1f       	adc	r25, r25
    1120:	66 1f       	adc	r22, r22
    1122:	77 1f       	adc	r23, r23
    1124:	06 94       	lsr	r0
    1126:	a1 f7       	brne	.-24     	; 0x1110 <__ftoa_engine+0xac>
    1128:	05 90       	lpm	r0, Z+
    112a:	07 94       	ror	r0
    112c:	20 f4       	brcc	.+8      	; 0x1136 <__ftoa_engine+0xd2>
    112e:	49 0f       	add	r20, r25
    1130:	56 1f       	adc	r21, r22
    1132:	c7 1f       	adc	r28, r23
    1134:	d8 1f       	adc	r29, r24
    1136:	99 0f       	add	r25, r25
    1138:	66 1f       	adc	r22, r22
    113a:	77 1f       	adc	r23, r23
    113c:	88 1f       	adc	r24, r24
    113e:	06 94       	lsr	r0
    1140:	a9 f7       	brne	.-22     	; 0x112c <__ftoa_engine+0xc8>
    1142:	84 91       	lpm	r24, Z
    1144:	10 95       	com	r17
    1146:	17 70       	andi	r17, 0x07	; 7
    1148:	41 f0       	breq	.+16     	; 0x115a <__ftoa_engine+0xf6>
    114a:	d6 95       	lsr	r29
    114c:	c7 95       	ror	r28
    114e:	57 95       	ror	r21
    1150:	47 95       	ror	r20
    1152:	f7 94       	ror	r15
    1154:	e7 94       	ror	r14
    1156:	1a 95       	dec	r17
    1158:	c1 f7       	brne	.-16     	; 0x114a <__ftoa_engine+0xe6>
    115a:	e4 e7       	ldi	r30, 0x74	; 116
    115c:	f0 e0       	ldi	r31, 0x00	; 0
    115e:	68 94       	set
    1160:	15 90       	lpm	r1, Z+
    1162:	15 91       	lpm	r17, Z+
    1164:	35 91       	lpm	r19, Z+
    1166:	65 91       	lpm	r22, Z+
    1168:	95 91       	lpm	r25, Z+
    116a:	05 90       	lpm	r0, Z+
    116c:	7f e2       	ldi	r23, 0x2F	; 47
    116e:	73 95       	inc	r23
    1170:	e1 18       	sub	r14, r1
    1172:	f1 0a       	sbc	r15, r17
    1174:	43 0b       	sbc	r20, r19
    1176:	56 0b       	sbc	r21, r22
    1178:	c9 0b       	sbc	r28, r25
    117a:	d0 09       	sbc	r29, r0
    117c:	c0 f7       	brcc	.-16     	; 0x116e <__ftoa_engine+0x10a>
    117e:	e1 0c       	add	r14, r1
    1180:	f1 1e       	adc	r15, r17
    1182:	43 1f       	adc	r20, r19
    1184:	56 1f       	adc	r21, r22
    1186:	c9 1f       	adc	r28, r25
    1188:	d0 1d       	adc	r29, r0
    118a:	7e f4       	brtc	.+30     	; 0x11aa <__ftoa_engine+0x146>
    118c:	70 33       	cpi	r23, 0x30	; 48
    118e:	11 f4       	brne	.+4      	; 0x1194 <__ftoa_engine+0x130>
    1190:	8a 95       	dec	r24
    1192:	e6 cf       	rjmp	.-52     	; 0x1160 <__ftoa_engine+0xfc>
    1194:	e8 94       	clt
    1196:	01 50       	subi	r16, 0x01	; 1
    1198:	30 f0       	brcs	.+12     	; 0x11a6 <__ftoa_engine+0x142>
    119a:	08 0f       	add	r16, r24
    119c:	0a f4       	brpl	.+2      	; 0x11a0 <__ftoa_engine+0x13c>
    119e:	00 27       	eor	r16, r16
    11a0:	02 17       	cp	r16, r18
    11a2:	08 f4       	brcc	.+2      	; 0x11a6 <__ftoa_engine+0x142>
    11a4:	20 2f       	mov	r18, r16
    11a6:	23 95       	inc	r18
    11a8:	02 2f       	mov	r16, r18
    11aa:	7a 33       	cpi	r23, 0x3A	; 58
    11ac:	28 f0       	brcs	.+10     	; 0x11b8 <__ftoa_engine+0x154>
    11ae:	79 e3       	ldi	r23, 0x39	; 57
    11b0:	7d 93       	st	X+, r23
    11b2:	2a 95       	dec	r18
    11b4:	e9 f7       	brne	.-6      	; 0x11b0 <__ftoa_engine+0x14c>
    11b6:	10 c0       	rjmp	.+32     	; 0x11d8 <__ftoa_engine+0x174>
    11b8:	7d 93       	st	X+, r23
    11ba:	2a 95       	dec	r18
    11bc:	89 f6       	brne	.-94     	; 0x1160 <__ftoa_engine+0xfc>
    11be:	06 94       	lsr	r0
    11c0:	97 95       	ror	r25
    11c2:	67 95       	ror	r22
    11c4:	37 95       	ror	r19
    11c6:	17 95       	ror	r17
    11c8:	17 94       	ror	r1
    11ca:	e1 18       	sub	r14, r1
    11cc:	f1 0a       	sbc	r15, r17
    11ce:	43 0b       	sbc	r20, r19
    11d0:	56 0b       	sbc	r21, r22
    11d2:	c9 0b       	sbc	r28, r25
    11d4:	d0 09       	sbc	r29, r0
    11d6:	98 f0       	brcs	.+38     	; 0x11fe <__ftoa_engine+0x19a>
    11d8:	23 95       	inc	r18
    11da:	7e 91       	ld	r23, -X
    11dc:	73 95       	inc	r23
    11de:	7a 33       	cpi	r23, 0x3A	; 58
    11e0:	08 f0       	brcs	.+2      	; 0x11e4 <__ftoa_engine+0x180>
    11e2:	70 e3       	ldi	r23, 0x30	; 48
    11e4:	7c 93       	st	X, r23
    11e6:	20 13       	cpse	r18, r16
    11e8:	b8 f7       	brcc	.-18     	; 0x11d8 <__ftoa_engine+0x174>
    11ea:	7e 91       	ld	r23, -X
    11ec:	70 61       	ori	r23, 0x10	; 16
    11ee:	7d 93       	st	X+, r23
    11f0:	30 f0       	brcs	.+12     	; 0x11fe <__ftoa_engine+0x19a>
    11f2:	83 95       	inc	r24
    11f4:	71 e3       	ldi	r23, 0x31	; 49
    11f6:	7d 93       	st	X+, r23
    11f8:	70 e3       	ldi	r23, 0x30	; 48
    11fa:	2a 95       	dec	r18
    11fc:	e1 f7       	brne	.-8      	; 0x11f6 <__ftoa_engine+0x192>
    11fe:	11 24       	eor	r1, r1
    1200:	ef 90       	pop	r14
    1202:	ff 90       	pop	r15
    1204:	0f 91       	pop	r16
    1206:	1f 91       	pop	r17
    1208:	cf 91       	pop	r28
    120a:	df 91       	pop	r29
    120c:	99 27       	eor	r25, r25
    120e:	87 fd       	sbrc	r24, 7
    1210:	90 95       	com	r25
    1212:	08 95       	ret

00001214 <strnlen_P>:
    1214:	fc 01       	movw	r30, r24
    1216:	05 90       	lpm	r0, Z+
    1218:	61 50       	subi	r22, 0x01	; 1
    121a:	70 40       	sbci	r23, 0x00	; 0
    121c:	01 10       	cpse	r0, r1
    121e:	d8 f7       	brcc	.-10     	; 0x1216 <strnlen_P+0x2>
    1220:	80 95       	com	r24
    1222:	90 95       	com	r25
    1224:	8e 0f       	add	r24, r30
    1226:	9f 1f       	adc	r25, r31
    1228:	08 95       	ret

0000122a <strnlen>:
    122a:	fc 01       	movw	r30, r24
    122c:	61 50       	subi	r22, 0x01	; 1
    122e:	70 40       	sbci	r23, 0x00	; 0
    1230:	01 90       	ld	r0, Z+
    1232:	01 10       	cpse	r0, r1
    1234:	d8 f7       	brcc	.-10     	; 0x122c <strnlen+0x2>
    1236:	80 95       	com	r24
    1238:	90 95       	com	r25
    123a:	8e 0f       	add	r24, r30
    123c:	9f 1f       	adc	r25, r31
    123e:	08 95       	ret

00001240 <fputc>:
    1240:	0f 93       	push	r16
    1242:	1f 93       	push	r17
    1244:	cf 93       	push	r28
    1246:	df 93       	push	r29
    1248:	fb 01       	movw	r30, r22
    124a:	23 81       	ldd	r18, Z+3	; 0x03
    124c:	21 fd       	sbrc	r18, 1
    124e:	03 c0       	rjmp	.+6      	; 0x1256 <fputc+0x16>
    1250:	8f ef       	ldi	r24, 0xFF	; 255
    1252:	9f ef       	ldi	r25, 0xFF	; 255
    1254:	2c c0       	rjmp	.+88     	; 0x12ae <fputc+0x6e>
    1256:	22 ff       	sbrs	r18, 2
    1258:	16 c0       	rjmp	.+44     	; 0x1286 <fputc+0x46>
    125a:	46 81       	ldd	r20, Z+6	; 0x06
    125c:	57 81       	ldd	r21, Z+7	; 0x07
    125e:	24 81       	ldd	r18, Z+4	; 0x04
    1260:	35 81       	ldd	r19, Z+5	; 0x05
    1262:	42 17       	cp	r20, r18
    1264:	53 07       	cpc	r21, r19
    1266:	44 f4       	brge	.+16     	; 0x1278 <fputc+0x38>
    1268:	a0 81       	ld	r26, Z
    126a:	b1 81       	ldd	r27, Z+1	; 0x01
    126c:	9d 01       	movw	r18, r26
    126e:	2f 5f       	subi	r18, 0xFF	; 255
    1270:	3f 4f       	sbci	r19, 0xFF	; 255
    1272:	31 83       	std	Z+1, r19	; 0x01
    1274:	20 83       	st	Z, r18
    1276:	8c 93       	st	X, r24
    1278:	26 81       	ldd	r18, Z+6	; 0x06
    127a:	37 81       	ldd	r19, Z+7	; 0x07
    127c:	2f 5f       	subi	r18, 0xFF	; 255
    127e:	3f 4f       	sbci	r19, 0xFF	; 255
    1280:	37 83       	std	Z+7, r19	; 0x07
    1282:	26 83       	std	Z+6, r18	; 0x06
    1284:	14 c0       	rjmp	.+40     	; 0x12ae <fputc+0x6e>
    1286:	8b 01       	movw	r16, r22
    1288:	ec 01       	movw	r28, r24
    128a:	fb 01       	movw	r30, r22
    128c:	00 84       	ldd	r0, Z+8	; 0x08
    128e:	f1 85       	ldd	r31, Z+9	; 0x09
    1290:	e0 2d       	mov	r30, r0
    1292:	09 95       	icall
    1294:	89 2b       	or	r24, r25
    1296:	e1 f6       	brne	.-72     	; 0x1250 <fputc+0x10>
    1298:	d8 01       	movw	r26, r16
    129a:	16 96       	adiw	r26, 0x06	; 6
    129c:	8d 91       	ld	r24, X+
    129e:	9c 91       	ld	r25, X
    12a0:	17 97       	sbiw	r26, 0x07	; 7
    12a2:	01 96       	adiw	r24, 0x01	; 1
    12a4:	17 96       	adiw	r26, 0x07	; 7
    12a6:	9c 93       	st	X, r25
    12a8:	8e 93       	st	-X, r24
    12aa:	16 97       	sbiw	r26, 0x06	; 6
    12ac:	ce 01       	movw	r24, r28
    12ae:	df 91       	pop	r29
    12b0:	cf 91       	pop	r28
    12b2:	1f 91       	pop	r17
    12b4:	0f 91       	pop	r16
    12b6:	08 95       	ret

000012b8 <printf>:
    12b8:	a0 e0       	ldi	r26, 0x00	; 0
    12ba:	b0 e0       	ldi	r27, 0x00	; 0
    12bc:	e2 e6       	ldi	r30, 0x62	; 98
    12be:	f9 e0       	ldi	r31, 0x09	; 9
    12c0:	0c 94 0b 08 	jmp	0x1016	; 0x1016 <__prologue_saves__+0x20>
    12c4:	ae 01       	movw	r20, r28
    12c6:	4b 5f       	subi	r20, 0xFB	; 251
    12c8:	5f 4f       	sbci	r21, 0xFF	; 255
    12ca:	fa 01       	movw	r30, r20
    12cc:	61 91       	ld	r22, Z+
    12ce:	71 91       	ld	r23, Z+
    12d0:	af 01       	movw	r20, r30
    12d2:	80 91 4b 01 	lds	r24, 0x014B	; 0x80014b <__iob+0x2>
    12d6:	90 91 4c 01 	lds	r25, 0x014C	; 0x80014c <__iob+0x3>
    12da:	0e 94 7e 04 	call	0x8fc	; 0x8fc <vfprintf>
    12de:	e2 e0       	ldi	r30, 0x02	; 2
    12e0:	0c 94 27 08 	jmp	0x104e	; 0x104e <__epilogue_restores__+0x20>

000012e4 <puts>:
    12e4:	0f 93       	push	r16
    12e6:	1f 93       	push	r17
    12e8:	cf 93       	push	r28
    12ea:	df 93       	push	r29
    12ec:	e0 91 4b 01 	lds	r30, 0x014B	; 0x80014b <__iob+0x2>
    12f0:	f0 91 4c 01 	lds	r31, 0x014C	; 0x80014c <__iob+0x3>
    12f4:	23 81       	ldd	r18, Z+3	; 0x03
    12f6:	21 ff       	sbrs	r18, 1
    12f8:	1b c0       	rjmp	.+54     	; 0x1330 <puts+0x4c>
    12fa:	8c 01       	movw	r16, r24
    12fc:	d0 e0       	ldi	r29, 0x00	; 0
    12fe:	c0 e0       	ldi	r28, 0x00	; 0
    1300:	f8 01       	movw	r30, r16
    1302:	81 91       	ld	r24, Z+
    1304:	8f 01       	movw	r16, r30
    1306:	60 91 4b 01 	lds	r22, 0x014B	; 0x80014b <__iob+0x2>
    130a:	70 91 4c 01 	lds	r23, 0x014C	; 0x80014c <__iob+0x3>
    130e:	db 01       	movw	r26, r22
    1310:	18 96       	adiw	r26, 0x08	; 8
    1312:	ed 91       	ld	r30, X+
    1314:	fc 91       	ld	r31, X
    1316:	19 97       	sbiw	r26, 0x09	; 9
    1318:	88 23       	and	r24, r24
    131a:	31 f0       	breq	.+12     	; 0x1328 <puts+0x44>
    131c:	09 95       	icall
    131e:	89 2b       	or	r24, r25
    1320:	79 f3       	breq	.-34     	; 0x1300 <puts+0x1c>
    1322:	df ef       	ldi	r29, 0xFF	; 255
    1324:	cf ef       	ldi	r28, 0xFF	; 255
    1326:	ec cf       	rjmp	.-40     	; 0x1300 <puts+0x1c>
    1328:	8a e0       	ldi	r24, 0x0A	; 10
    132a:	09 95       	icall
    132c:	89 2b       	or	r24, r25
    132e:	19 f0       	breq	.+6      	; 0x1336 <puts+0x52>
    1330:	8f ef       	ldi	r24, 0xFF	; 255
    1332:	9f ef       	ldi	r25, 0xFF	; 255
    1334:	02 c0       	rjmp	.+4      	; 0x133a <puts+0x56>
    1336:	8d 2f       	mov	r24, r29
    1338:	9c 2f       	mov	r25, r28
    133a:	df 91       	pop	r29
    133c:	cf 91       	pop	r28
    133e:	1f 91       	pop	r17
    1340:	0f 91       	pop	r16
    1342:	08 95       	ret

00001344 <__ultoa_invert>:
    1344:	fa 01       	movw	r30, r20
    1346:	aa 27       	eor	r26, r26
    1348:	28 30       	cpi	r18, 0x08	; 8
    134a:	51 f1       	breq	.+84     	; 0x13a0 <__ultoa_invert+0x5c>
    134c:	20 31       	cpi	r18, 0x10	; 16
    134e:	81 f1       	breq	.+96     	; 0x13b0 <__ultoa_invert+0x6c>
    1350:	e8 94       	clt
    1352:	6f 93       	push	r22
    1354:	6e 7f       	andi	r22, 0xFE	; 254
    1356:	6e 5f       	subi	r22, 0xFE	; 254
    1358:	7f 4f       	sbci	r23, 0xFF	; 255
    135a:	8f 4f       	sbci	r24, 0xFF	; 255
    135c:	9f 4f       	sbci	r25, 0xFF	; 255
    135e:	af 4f       	sbci	r26, 0xFF	; 255
    1360:	b1 e0       	ldi	r27, 0x01	; 1
    1362:	3e d0       	rcall	.+124    	; 0x13e0 <__ultoa_invert+0x9c>
    1364:	b4 e0       	ldi	r27, 0x04	; 4
    1366:	3c d0       	rcall	.+120    	; 0x13e0 <__ultoa_invert+0x9c>
    1368:	67 0f       	add	r22, r23
    136a:	78 1f       	adc	r23, r24
    136c:	89 1f       	adc	r24, r25
    136e:	9a 1f       	adc	r25, r26
    1370:	a1 1d       	adc	r26, r1
    1372:	68 0f       	add	r22, r24
    1374:	79 1f       	adc	r23, r25
    1376:	8a 1f       	adc	r24, r26
    1378:	91 1d       	adc	r25, r1
    137a:	a1 1d       	adc	r26, r1
    137c:	6a 0f       	add	r22, r26
    137e:	71 1d       	adc	r23, r1
    1380:	81 1d       	adc	r24, r1
    1382:	91 1d       	adc	r25, r1
    1384:	a1 1d       	adc	r26, r1
    1386:	20 d0       	rcall	.+64     	; 0x13c8 <__ultoa_invert+0x84>
    1388:	09 f4       	brne	.+2      	; 0x138c <__ultoa_invert+0x48>
    138a:	68 94       	set
    138c:	3f 91       	pop	r19
    138e:	2a e0       	ldi	r18, 0x0A	; 10
    1390:	26 9f       	mul	r18, r22
    1392:	11 24       	eor	r1, r1
    1394:	30 19       	sub	r19, r0
    1396:	30 5d       	subi	r19, 0xD0	; 208
    1398:	31 93       	st	Z+, r19
    139a:	de f6       	brtc	.-74     	; 0x1352 <__ultoa_invert+0xe>
    139c:	cf 01       	movw	r24, r30
    139e:	08 95       	ret
    13a0:	46 2f       	mov	r20, r22
    13a2:	47 70       	andi	r20, 0x07	; 7
    13a4:	40 5d       	subi	r20, 0xD0	; 208
    13a6:	41 93       	st	Z+, r20
    13a8:	b3 e0       	ldi	r27, 0x03	; 3
    13aa:	0f d0       	rcall	.+30     	; 0x13ca <__ultoa_invert+0x86>
    13ac:	c9 f7       	brne	.-14     	; 0x13a0 <__ultoa_invert+0x5c>
    13ae:	f6 cf       	rjmp	.-20     	; 0x139c <__ultoa_invert+0x58>
    13b0:	46 2f       	mov	r20, r22
    13b2:	4f 70       	andi	r20, 0x0F	; 15
    13b4:	40 5d       	subi	r20, 0xD0	; 208
    13b6:	4a 33       	cpi	r20, 0x3A	; 58
    13b8:	18 f0       	brcs	.+6      	; 0x13c0 <__ultoa_invert+0x7c>
    13ba:	49 5d       	subi	r20, 0xD9	; 217
    13bc:	31 fd       	sbrc	r19, 1
    13be:	40 52       	subi	r20, 0x20	; 32
    13c0:	41 93       	st	Z+, r20
    13c2:	02 d0       	rcall	.+4      	; 0x13c8 <__ultoa_invert+0x84>
    13c4:	a9 f7       	brne	.-22     	; 0x13b0 <__ultoa_invert+0x6c>
    13c6:	ea cf       	rjmp	.-44     	; 0x139c <__ultoa_invert+0x58>
    13c8:	b4 e0       	ldi	r27, 0x04	; 4
    13ca:	a6 95       	lsr	r26
    13cc:	97 95       	ror	r25
    13ce:	87 95       	ror	r24
    13d0:	77 95       	ror	r23
    13d2:	67 95       	ror	r22
    13d4:	ba 95       	dec	r27
    13d6:	c9 f7       	brne	.-14     	; 0x13ca <__ultoa_invert+0x86>
    13d8:	00 97       	sbiw	r24, 0x00	; 0
    13da:	61 05       	cpc	r22, r1
    13dc:	71 05       	cpc	r23, r1
    13de:	08 95       	ret
    13e0:	9b 01       	movw	r18, r22
    13e2:	ac 01       	movw	r20, r24
    13e4:	0a 2e       	mov	r0, r26
    13e6:	06 94       	lsr	r0
    13e8:	57 95       	ror	r21
    13ea:	47 95       	ror	r20
    13ec:	37 95       	ror	r19
    13ee:	27 95       	ror	r18
    13f0:	ba 95       	dec	r27
    13f2:	c9 f7       	brne	.-14     	; 0x13e6 <__ultoa_invert+0xa2>
    13f4:	62 0f       	add	r22, r18
    13f6:	73 1f       	adc	r23, r19
    13f8:	84 1f       	adc	r24, r20
    13fa:	95 1f       	adc	r25, r21
    13fc:	a0 1d       	adc	r26, r0
    13fe:	08 95       	ret

00001400 <_exit>:
    1400:	f8 94       	cli

00001402 <__stop_program>:
    1402:	ff cf       	rjmp	.-2      	; 0x1402 <__stop_program>
