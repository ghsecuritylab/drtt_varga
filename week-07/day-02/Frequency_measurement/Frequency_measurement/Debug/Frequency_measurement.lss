
Frequency_measurement.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000014  00800100  00000ed6  00000f6a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000ed6  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000002a  00800114  00800114  00000f7e  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000f7e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000fdc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000098  00000000  00000000  0000101c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000d35  00000000  00000000  000010b4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000a51  00000000  00000000  00001de9  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000005a5  00000000  00000000  0000283a  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000134  00000000  00000000  00002de0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000587  00000000  00000000  00002f14  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000001b7  00000000  00000000  0000349b  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000068  00000000  00000000  00003652  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 b7 00 	jmp	0x16e	; 0x16e <__ctors_end>
   4:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
   8:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
   c:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
  10:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
  14:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
  18:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
  1c:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
  20:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
  24:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
  28:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
  2c:	0c 94 d6 00 	jmp	0x1ac	; 0x1ac <__vector_11>
  30:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
  34:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
  38:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
  3c:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
  40:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
  44:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
  48:	0c 94 67 01 	jmp	0x2ce	; 0x2ce <__vector_18>
  4c:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
  50:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
  54:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
  58:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
  5c:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
  60:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
  64:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
  68:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>

0000006c <__trampolines_end>:
  6c:	6e 61       	ori	r22, 0x1E	; 30
  6e:	6e 00       	.word	0x006e	; ????

00000070 <__c.2332>:
  70:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
  80:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
  90:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
  a0:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
  b0:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
  c0:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
  d0:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
  e0:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
  f0:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
 100:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
 110:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
 120:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
 130:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
 140:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
 150:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
 160:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

0000016e <__ctors_end>:
 16e:	11 24       	eor	r1, r1
 170:	1f be       	out	0x3f, r1	; 63
 172:	cf ef       	ldi	r28, 0xFF	; 255
 174:	d4 e0       	ldi	r29, 0x04	; 4
 176:	de bf       	out	0x3e, r29	; 62
 178:	cd bf       	out	0x3d, r28	; 61

0000017a <__do_copy_data>:
 17a:	11 e0       	ldi	r17, 0x01	; 1
 17c:	a0 e0       	ldi	r26, 0x00	; 0
 17e:	b1 e0       	ldi	r27, 0x01	; 1
 180:	e6 ed       	ldi	r30, 0xD6	; 214
 182:	fe e0       	ldi	r31, 0x0E	; 14
 184:	02 c0       	rjmp	.+4      	; 0x18a <__do_copy_data+0x10>
 186:	05 90       	lpm	r0, Z+
 188:	0d 92       	st	X+, r0
 18a:	a4 31       	cpi	r26, 0x14	; 20
 18c:	b1 07       	cpc	r27, r17
 18e:	d9 f7       	brne	.-10     	; 0x186 <__do_copy_data+0xc>

00000190 <__do_clear_bss>:
 190:	21 e0       	ldi	r18, 0x01	; 1
 192:	a4 e1       	ldi	r26, 0x14	; 20
 194:	b1 e0       	ldi	r27, 0x01	; 1
 196:	01 c0       	rjmp	.+2      	; 0x19a <.do_clear_bss_start>

00000198 <.do_clear_bss_loop>:
 198:	1d 92       	st	X+, r1

0000019a <.do_clear_bss_start>:
 19a:	ae 33       	cpi	r26, 0x3E	; 62
 19c:	b2 07       	cpc	r27, r18
 19e:	e1 f7       	brne	.-8      	; 0x198 <.do_clear_bss_loop>
 1a0:	0e 94 0f 01 	call	0x21e	; 0x21e <main>
 1a4:	0c 94 69 07 	jmp	0xed2	; 0xed2 <_exit>

000001a8 <__bad_interrupt>:
 1a8:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001ac <__vector_11>:
uint8_t prev = 0;
uint8_t last = 0;
uint8_t cntr_max = 255;

ISR(TIMER1_COMPA_vect)
{
 1ac:	1f 92       	push	r1
 1ae:	0f 92       	push	r0
 1b0:	0f b6       	in	r0, 0x3f	; 63
 1b2:	0f 92       	push	r0
 1b4:	11 24       	eor	r1, r1
 1b6:	8f 93       	push	r24
 1b8:	9f 93       	push	r25
	if (last < prev) {
 1ba:	90 91 14 01 	lds	r25, 0x0114	; 0x800114 <__data_end>
 1be:	80 91 15 01 	lds	r24, 0x0115	; 0x800115 <prev>
 1c2:	98 17       	cp	r25, r24
 1c4:	30 f4       	brcc	.+12     	; 0x1d2 <__vector_11+0x26>
		overflow++;
 1c6:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <overflow>
 1ca:	8f 5f       	subi	r24, 0xFF	; 255
 1cc:	80 93 16 01 	sts	0x0116, r24	; 0x800116 <overflow>
 1d0:	03 c0       	rjmp	.+6      	; 0x1d8 <__vector_11+0x2c>
	} else {
		overflow = 0;
 1d2:	10 92 16 01 	sts	0x0116, r1	; 0x800116 <overflow>
		PINB |= 1 << PINB5;
 1d6:	1d 9a       	sbi	0x03, 5	; 3
	}
}
 1d8:	9f 91       	pop	r25
 1da:	8f 91       	pop	r24
 1dc:	0f 90       	pop	r0
 1de:	0f be       	out	0x3f, r0	; 63
 1e0:	0f 90       	pop	r0
 1e2:	1f 90       	pop	r1
 1e4:	18 95       	reti

000001e6 <freq_meas_init>:
	 * TC1 CONFIG *
	 **************/
	// TODO:
	// Configure the TC1 timer properly :)
	
	TCCR1B |= 1 << CS12;
 1e6:	e1 e8       	ldi	r30, 0x81	; 129
 1e8:	f0 e0       	ldi	r31, 0x00	; 0
 1ea:	80 81       	ld	r24, Z
 1ec:	84 60       	ori	r24, 0x04	; 4
 1ee:	80 83       	st	Z, r24
	TCCR1B |= 1 << CS10;
 1f0:	80 81       	ld	r24, Z
 1f2:	81 60       	ori	r24, 0x01	; 1
 1f4:	80 83       	st	Z, r24

	// Set the PB5 LED pin to output
	DDRB = 1 << DDRB5;
 1f6:	80 e2       	ldi	r24, 0x20	; 32
 1f8:	84 b9       	out	0x04, r24	; 4

	// Enable the TC0 overflow interrupt
	TIMSK1 |= 1 << TOIE0;
 1fa:	ef e6       	ldi	r30, 0x6F	; 111
 1fc:	f0 e0       	ldi	r31, 0x00	; 0
 1fe:	80 81       	ld	r24, Z
 200:	81 60       	ori	r24, 0x01	; 1
 202:	80 83       	st	Z, r24
	TIMSK1 |= 1 << TOIE0;
 204:	80 81       	ld	r24, Z
 206:	81 60       	ori	r24, 0x01	; 1
 208:	80 83       	st	Z, r24

	// Enable the interrupts globally
	sei();
 20a:	78 94       	sei
 20c:	08 95       	ret

0000020e <get_freq>:
// Write this function. It returns the measured frequency in Hz

float get_freq()
{
	
 20e:	08 95       	ret

00000210 <system_init>:
#define LED_PORT		PORTB
#define LED_PORT_POS	PORTB5

void system_init()
{
	LED_DDR |= 1 << LED_DDR_POS;
 210:	25 9a       	sbi	0x04, 5	; 4
	freq_meas_init();
 212:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <freq_meas_init>
	UART_init();
 216:	0e 94 9b 01 	call	0x336	; 0x336 <UART_init>
	sei();
 21a:	78 94       	sei
 21c:	08 95       	ret

0000021e <main>:
}

int main(void)
{
 21e:	cf 93       	push	r28
 220:	df 93       	push	r29
 222:	cd b7       	in	r28, 0x3d	; 61
 224:	de b7       	in	r29, 0x3e	; 62
 226:	6c 97       	sbiw	r28, 0x1c	; 28
 228:	0f b6       	in	r0, 0x3f	; 63
 22a:	f8 94       	cli
 22c:	de bf       	out	0x3e, r29	; 62
 22e:	0f be       	out	0x3f, r0	; 63
 230:	cd bf       	out	0x3d, r28	; 61

	// Don't forget to call the init function :)
	system_init();
 232:	0e 94 08 01 	call	0x210	; 0x210 <system_init>

	// Setting up STDIO input and output buffer
	// You don't have to understand this!
	//----- START OF STDIO IO BUFFER SETUP
	FILE UART_output = FDEV_SETUP_STREAM((void *)UART_send_character, NULL, _FDEV_SETUP_WRITE);
 236:	8e e0       	ldi	r24, 0x0E	; 14
 238:	de 01       	movw	r26, r28
 23a:	11 96       	adiw	r26, 0x01	; 1
 23c:	fd 01       	movw	r30, r26
 23e:	28 2f       	mov	r18, r24
 240:	11 92       	st	Z+, r1
 242:	2a 95       	dec	r18
 244:	e9 f7       	brne	.-6      	; 0x240 <main+0x22>
 246:	92 e0       	ldi	r25, 0x02	; 2
 248:	9c 83       	std	Y+4, r25	; 0x04
 24a:	2c eb       	ldi	r18, 0xBC	; 188
 24c:	31 e0       	ldi	r19, 0x01	; 1
 24e:	3a 87       	std	Y+10, r19	; 0x0a
 250:	29 87       	std	Y+9, r18	; 0x09
	stdout = &UART_output;
 252:	28 e3       	ldi	r18, 0x38	; 56
 254:	31 e0       	ldi	r19, 0x01	; 1
 256:	f9 01       	movw	r30, r18
 258:	b3 83       	std	Z+3, r27	; 0x03
 25a:	a2 83       	std	Z+2, r26	; 0x02
	FILE UART_input = FDEV_SETUP_STREAM(NULL, (void *)UART_get_character, _FDEV_SETUP_READ);
 25c:	1e 96       	adiw	r26, 0x0e	; 14
 25e:	fd 01       	movw	r30, r26
 260:	11 92       	st	Z+, r1
 262:	8a 95       	dec	r24
 264:	e9 f7       	brne	.-6      	; 0x260 <main+0x42>
 266:	81 e0       	ldi	r24, 0x01	; 1
 268:	8a 8b       	std	Y+18, r24	; 0x12
 26a:	84 ec       	ldi	r24, 0xC4	; 196
 26c:	91 e0       	ldi	r25, 0x01	; 1
 26e:	9a 8f       	std	Y+26, r25	; 0x1a
 270:	89 8f       	std	Y+25, r24	; 0x19
	stdin = &UART_input;
 272:	f9 01       	movw	r30, r18
 274:	b1 83       	std	Z+1, r27	; 0x01
 276:	a0 83       	st	Z, r26
	//----- END OF STDIO IO BUFFER SETUP

	// Try printf
	printf("Startup...\r\n");
 278:	80 e0       	ldi	r24, 0x00	; 0
 27a:	91 e0       	ldi	r25, 0x01	; 1
 27c:	0e 94 db 06 	call	0xdb6	; 0xdb6 <puts>
		// The printf call will also take some time, so this won't be exactly 1Hz.
		LED_PORT |= 1 << LED_PORT_POS;
		_delay_ms(500);
		LED_PORT &= ~(1 << LED_PORT_POS);
		_delay_ms(500);
		printf("%f Hz\n", get_freq());
 280:	0c e0       	ldi	r16, 0x0C	; 12
 282:	11 e0       	ldi	r17, 0x01	; 1

	// Infinite loop
	while (1) {
		// Generating an about 1Hz signal on the LED pin.
		// The printf call will also take some time, so this won't be exactly 1Hz.
		LED_PORT |= 1 << LED_PORT_POS;
 284:	2d 9a       	sbi	0x05, 5	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 286:	ff ef       	ldi	r31, 0xFF	; 255
 288:	29 e6       	ldi	r18, 0x69	; 105
 28a:	88 e1       	ldi	r24, 0x18	; 24
 28c:	f1 50       	subi	r31, 0x01	; 1
 28e:	20 40       	sbci	r18, 0x00	; 0
 290:	80 40       	sbci	r24, 0x00	; 0
 292:	e1 f7       	brne	.-8      	; 0x28c <main+0x6e>
 294:	00 c0       	rjmp	.+0      	; 0x296 <main+0x78>
 296:	00 00       	nop
		_delay_ms(500);
		LED_PORT &= ~(1 << LED_PORT_POS);
 298:	2d 98       	cbi	0x05, 5	; 5
 29a:	9f ef       	ldi	r25, 0xFF	; 255
 29c:	e9 e6       	ldi	r30, 0x69	; 105
 29e:	f8 e1       	ldi	r31, 0x18	; 24
 2a0:	91 50       	subi	r25, 0x01	; 1
 2a2:	e0 40       	sbci	r30, 0x00	; 0
 2a4:	f0 40       	sbci	r31, 0x00	; 0
 2a6:	e1 f7       	brne	.-8      	; 0x2a0 <main+0x82>
 2a8:	00 c0       	rjmp	.+0      	; 0x2aa <main+0x8c>
 2aa:	00 00       	nop
		_delay_ms(500);
		printf("%f Hz\n", get_freq());
 2ac:	0e 94 07 01 	call	0x20e	; 0x20e <get_freq>
 2b0:	9f 93       	push	r25
 2b2:	8f 93       	push	r24
 2b4:	7f 93       	push	r23
 2b6:	6f 93       	push	r22
 2b8:	1f 93       	push	r17
 2ba:	0f 93       	push	r16
 2bc:	0e 94 c5 06 	call	0xd8a	; 0xd8a <printf>
 2c0:	0f 90       	pop	r0
 2c2:	0f 90       	pop	r0
 2c4:	0f 90       	pop	r0
 2c6:	0f 90       	pop	r0
 2c8:	0f 90       	pop	r0
 2ca:	0f 90       	pop	r0
 2cc:	db cf       	rjmp	.-74     	; 0x284 <main+0x66>

000002ce <__vector_18>:
#include <avr/io.h>
#include <stdint.h>
#include <avr/interrupt.h>

ISR(USART_RX_vect)
{
 2ce:	1f 92       	push	r1
 2d0:	0f 92       	push	r0
 2d2:	0f b6       	in	r0, 0x3f	; 63
 2d4:	0f 92       	push	r0
 2d6:	11 24       	eor	r1, r1
 2d8:	2f 93       	push	r18
 2da:	3f 93       	push	r19
 2dc:	8f 93       	push	r24
 2de:	9f 93       	push	r25
 2e0:	af 93       	push	r26
 2e2:	bf 93       	push	r27
 2e4:	ef 93       	push	r30
 2e6:	ff 93       	push	r31
	// Put received character into the circular buffer
	*(rx_buffer.write_ptr) = UDR0;
 2e8:	e7 e1       	ldi	r30, 0x17	; 23
 2ea:	f1 e0       	ldi	r31, 0x01	; 1
 2ec:	a5 8d       	ldd	r26, Z+29	; 0x1d
 2ee:	b6 8d       	ldd	r27, Z+30	; 0x1e
 2f0:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
 2f4:	8c 93       	st	X, r24

	// Increment the write ptr
	// Be aware that the write ptr might point to the end of the buffer.
	// In this case you have to set it back to the start of the buffer
	if (rx_buffer.write_ptr == rx_buffer.tail)
 2f6:	25 8d       	ldd	r18, Z+29	; 0x1d
 2f8:	36 8d       	ldd	r19, Z+30	; 0x1e
 2fa:	83 8d       	ldd	r24, Z+27	; 0x1b
 2fc:	94 8d       	ldd	r25, Z+28	; 0x1c
 2fe:	28 17       	cp	r18, r24
 300:	39 07       	cpc	r19, r25
 302:	29 f4       	brne	.+10     	; 0x30e <__vector_18+0x40>
	rx_buffer.write_ptr = rx_buffer.head;
 304:	81 8d       	ldd	r24, Z+25	; 0x19
 306:	92 8d       	ldd	r25, Z+26	; 0x1a
 308:	96 8f       	std	Z+30, r25	; 0x1e
 30a:	85 8f       	std	Z+29, r24	; 0x1d
 30c:	07 c0       	rjmp	.+14     	; 0x31c <__vector_18+0x4e>
	else
	rx_buffer.write_ptr++;
 30e:	e7 e1       	ldi	r30, 0x17	; 23
 310:	f1 e0       	ldi	r31, 0x01	; 1
 312:	85 8d       	ldd	r24, Z+29	; 0x1d
 314:	96 8d       	ldd	r25, Z+30	; 0x1e
 316:	01 96       	adiw	r24, 0x01	; 1
 318:	96 8f       	std	Z+30, r25	; 0x1e
 31a:	85 8f       	std	Z+29, r24	; 0x1d

}
 31c:	ff 91       	pop	r31
 31e:	ef 91       	pop	r30
 320:	bf 91       	pop	r27
 322:	af 91       	pop	r26
 324:	9f 91       	pop	r25
 326:	8f 91       	pop	r24
 328:	3f 91       	pop	r19
 32a:	2f 91       	pop	r18
 32c:	0f 90       	pop	r0
 32e:	0f be       	out	0x3f, r0	; 63
 330:	0f 90       	pop	r0
 332:	1f 90       	pop	r1
 334:	18 95       	reti

00000336 <UART_init>:
	// See the datasheet on page 246 for hints and table 25-9.

	// At first set the baud rate to 115200
	// The CPU clock frequency is 16MHz
	uint16_t ubbr = 8;
	UBRR0H = ubbr >> 8;
 336:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
	UBRR0L = ubbr;
 33a:	88 e0       	ldi	r24, 0x08	; 8
 33c:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>

	// Set the following frame format: 8N1
	// It's set by default to 8N1

	// Enable TX
	UCSR0B |= 1 << TXEN0;
 340:	e1 ec       	ldi	r30, 0xC1	; 193
 342:	f0 e0       	ldi	r31, 0x00	; 0
 344:	80 81       	ld	r24, Z
 346:	88 60       	ori	r24, 0x08	; 8
 348:	80 83       	st	Z, r24

	// Enable RX
	UCSR0B |= 1 << RXEN0;
 34a:	80 81       	ld	r24, Z
 34c:	80 61       	ori	r24, 0x10	; 16
 34e:	80 83       	st	Z, r24

	// Enable RX interrupt
	UCSR0B |= 1 << RXCIE0;
 350:	80 81       	ld	r24, Z
 352:	80 68       	ori	r24, 0x80	; 128
 354:	80 83       	st	Z, r24

	// Initialize circular buffer pointers, they should point to the head of the buffer
	rx_buffer.head = &(rx_buffer.buffer[0]);
 356:	e7 e1       	ldi	r30, 0x17	; 23
 358:	f1 e0       	ldi	r31, 0x01	; 1
 35a:	f2 8f       	std	Z+26, r31	; 0x1a
 35c:	e1 8f       	std	Z+25, r30	; 0x19
	rx_buffer.tail = &(rx_buffer.buffer[RX_CIRC_BUFF_LEN - 1]);
 35e:	8f e2       	ldi	r24, 0x2F	; 47
 360:	91 e0       	ldi	r25, 0x01	; 1
 362:	94 8f       	std	Z+28, r25	; 0x1c
 364:	83 8f       	std	Z+27, r24	; 0x1b
	rx_buffer.read_ptr = rx_buffer.head;
 366:	81 8d       	ldd	r24, Z+25	; 0x19
 368:	92 8d       	ldd	r25, Z+26	; 0x1a
 36a:	90 a3       	std	Z+32, r25	; 0x20
 36c:	87 8f       	std	Z+31, r24	; 0x1f
	rx_buffer.write_ptr = rx_buffer.head;
 36e:	81 8d       	ldd	r24, Z+25	; 0x19
 370:	92 8d       	ldd	r25, Z+26	; 0x1a
 372:	96 8f       	std	Z+30, r25	; 0x1e
 374:	85 8f       	std	Z+29, r24	; 0x1d
 376:	08 95       	ret

00000378 <UART_send_character>:
{
	// This function can send a character through UART with polling method
	// See page 247 of the datasheet for hints, be aware that the code in the datasheet has a problem :)

	// Wait for empty USART buffer register
	while ( !( UCSR0A & (1 << UDRE0)) );
 378:	e0 ec       	ldi	r30, 0xC0	; 192
 37a:	f0 e0       	ldi	r31, 0x00	; 0
 37c:	90 81       	ld	r25, Z
 37e:	95 ff       	sbrs	r25, 5
 380:	fd cf       	rjmp	.-6      	; 0x37c <UART_send_character+0x4>

	// Put data to USART buffer register
	UDR0 = character;
 382:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
 386:	08 95       	ret

00000388 <UART_get_character>:
}

char UART_get_character()
{
	// Wait for data in the circular buffer, this can be detected if the write and read pointers are pointing to the same memory block
	while ((rx_buffer.read_ptr) == (rx_buffer.write_ptr));
 388:	e7 e1       	ldi	r30, 0x17	; 23
 38a:	f1 e0       	ldi	r31, 0x01	; 1
 38c:	27 8d       	ldd	r18, Z+31	; 0x1f
 38e:	30 a1       	ldd	r19, Z+32	; 0x20
 390:	85 8d       	ldd	r24, Z+29	; 0x1d
 392:	96 8d       	ldd	r25, Z+30	; 0x1e
 394:	28 17       	cp	r18, r24
 396:	39 07       	cpc	r19, r25
 398:	c9 f3       	breq	.-14     	; 0x38c <UART_get_character+0x4>

	// Save the data to a temporary variable
	char to_return = *(rx_buffer.read_ptr);
 39a:	e7 e1       	ldi	r30, 0x17	; 23
 39c:	f1 e0       	ldi	r31, 0x01	; 1
 39e:	a7 8d       	ldd	r26, Z+31	; 0x1f
 3a0:	b0 a1       	ldd	r27, Z+32	; 0x20
 3a2:	8c 91       	ld	r24, X

	// Increment the read ptr
	// Be aware that the read ptr might point to the end of the buffer.
	// In this case you have to set it back to the start of the buffer
	if (rx_buffer.read_ptr == rx_buffer.tail)
 3a4:	47 8d       	ldd	r20, Z+31	; 0x1f
 3a6:	50 a1       	ldd	r21, Z+32	; 0x20
 3a8:	23 8d       	ldd	r18, Z+27	; 0x1b
 3aa:	34 8d       	ldd	r19, Z+28	; 0x1c
 3ac:	42 17       	cp	r20, r18
 3ae:	53 07       	cpc	r21, r19
 3b0:	29 f4       	brne	.+10     	; 0x3bc <UART_get_character+0x34>
	rx_buffer.read_ptr = rx_buffer.head;
 3b2:	21 8d       	ldd	r18, Z+25	; 0x19
 3b4:	32 8d       	ldd	r19, Z+26	; 0x1a
 3b6:	30 a3       	std	Z+32, r19	; 0x20
 3b8:	27 8f       	std	Z+31, r18	; 0x1f
 3ba:	08 95       	ret
	else
	rx_buffer.read_ptr++;
 3bc:	e7 e1       	ldi	r30, 0x17	; 23
 3be:	f1 e0       	ldi	r31, 0x01	; 1
 3c0:	27 8d       	ldd	r18, Z+31	; 0x1f
 3c2:	30 a1       	ldd	r19, Z+32	; 0x20
 3c4:	2f 5f       	subi	r18, 0xFF	; 255
 3c6:	3f 4f       	sbci	r19, 0xFF	; 255
 3c8:	30 a3       	std	Z+32, r19	; 0x20
 3ca:	27 8f       	std	Z+31, r18	; 0x1f


	// Return the read character
	return to_return;
}
 3cc:	08 95       	ret

000003ce <vfprintf>:
 3ce:	a0 e1       	ldi	r26, 0x10	; 16
 3d0:	b0 e0       	ldi	r27, 0x00	; 0
 3d2:	ed ee       	ldi	r30, 0xED	; 237
 3d4:	f1 e0       	ldi	r31, 0x01	; 1
 3d6:	0c 94 64 05 	jmp	0xac8	; 0xac8 <__prologue_saves__>
 3da:	7c 01       	movw	r14, r24
 3dc:	1b 01       	movw	r2, r22
 3de:	6a 01       	movw	r12, r20
 3e0:	fc 01       	movw	r30, r24
 3e2:	17 82       	std	Z+7, r1	; 0x07
 3e4:	16 82       	std	Z+6, r1	; 0x06
 3e6:	83 81       	ldd	r24, Z+3	; 0x03
 3e8:	81 ff       	sbrs	r24, 1
 3ea:	44 c3       	rjmp	.+1672   	; 0xa74 <__stack+0x575>
 3ec:	9e 01       	movw	r18, r28
 3ee:	2f 5f       	subi	r18, 0xFF	; 255
 3f0:	3f 4f       	sbci	r19, 0xFF	; 255
 3f2:	39 01       	movw	r6, r18
 3f4:	f7 01       	movw	r30, r14
 3f6:	93 81       	ldd	r25, Z+3	; 0x03
 3f8:	f1 01       	movw	r30, r2
 3fa:	93 fd       	sbrc	r25, 3
 3fc:	85 91       	lpm	r24, Z+
 3fe:	93 ff       	sbrs	r25, 3
 400:	81 91       	ld	r24, Z+
 402:	1f 01       	movw	r2, r30
 404:	88 23       	and	r24, r24
 406:	09 f4       	brne	.+2      	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
 408:	31 c3       	rjmp	.+1634   	; 0xa6c <__stack+0x56d>
 40a:	85 32       	cpi	r24, 0x25	; 37
 40c:	39 f4       	brne	.+14     	; 0x41c <__LOCK_REGION_LENGTH__+0x1c>
 40e:	93 fd       	sbrc	r25, 3
 410:	85 91       	lpm	r24, Z+
 412:	93 ff       	sbrs	r25, 3
 414:	81 91       	ld	r24, Z+
 416:	1f 01       	movw	r2, r30
 418:	85 32       	cpi	r24, 0x25	; 37
 41a:	39 f4       	brne	.+14     	; 0x42a <__LOCK_REGION_LENGTH__+0x2a>
 41c:	b7 01       	movw	r22, r14
 41e:	90 e0       	ldi	r25, 0x00	; 0
 420:	0e 94 89 06 	call	0xd12	; 0xd12 <fputc>
 424:	56 01       	movw	r10, r12
 426:	65 01       	movw	r12, r10
 428:	e5 cf       	rjmp	.-54     	; 0x3f4 <vfprintf+0x26>
 42a:	10 e0       	ldi	r17, 0x00	; 0
 42c:	51 2c       	mov	r5, r1
 42e:	91 2c       	mov	r9, r1
 430:	ff e1       	ldi	r31, 0x1F	; 31
 432:	f9 15       	cp	r31, r9
 434:	d8 f0       	brcs	.+54     	; 0x46c <__LOCK_REGION_LENGTH__+0x6c>
 436:	8b 32       	cpi	r24, 0x2B	; 43
 438:	79 f0       	breq	.+30     	; 0x458 <__LOCK_REGION_LENGTH__+0x58>
 43a:	38 f4       	brcc	.+14     	; 0x44a <__LOCK_REGION_LENGTH__+0x4a>
 43c:	80 32       	cpi	r24, 0x20	; 32
 43e:	79 f0       	breq	.+30     	; 0x45e <__LOCK_REGION_LENGTH__+0x5e>
 440:	83 32       	cpi	r24, 0x23	; 35
 442:	a1 f4       	brne	.+40     	; 0x46c <__LOCK_REGION_LENGTH__+0x6c>
 444:	f9 2d       	mov	r31, r9
 446:	f0 61       	ori	r31, 0x10	; 16
 448:	2e c0       	rjmp	.+92     	; 0x4a6 <__LOCK_REGION_LENGTH__+0xa6>
 44a:	8d 32       	cpi	r24, 0x2D	; 45
 44c:	61 f0       	breq	.+24     	; 0x466 <__LOCK_REGION_LENGTH__+0x66>
 44e:	80 33       	cpi	r24, 0x30	; 48
 450:	69 f4       	brne	.+26     	; 0x46c <__LOCK_REGION_LENGTH__+0x6c>
 452:	29 2d       	mov	r18, r9
 454:	21 60       	ori	r18, 0x01	; 1
 456:	2d c0       	rjmp	.+90     	; 0x4b2 <__LOCK_REGION_LENGTH__+0xb2>
 458:	39 2d       	mov	r19, r9
 45a:	32 60       	ori	r19, 0x02	; 2
 45c:	93 2e       	mov	r9, r19
 45e:	89 2d       	mov	r24, r9
 460:	84 60       	ori	r24, 0x04	; 4
 462:	98 2e       	mov	r9, r24
 464:	2a c0       	rjmp	.+84     	; 0x4ba <__LOCK_REGION_LENGTH__+0xba>
 466:	e9 2d       	mov	r30, r9
 468:	e8 60       	ori	r30, 0x08	; 8
 46a:	15 c0       	rjmp	.+42     	; 0x496 <__LOCK_REGION_LENGTH__+0x96>
 46c:	97 fc       	sbrc	r9, 7
 46e:	2d c0       	rjmp	.+90     	; 0x4ca <__LOCK_REGION_LENGTH__+0xca>
 470:	20 ed       	ldi	r18, 0xD0	; 208
 472:	28 0f       	add	r18, r24
 474:	2a 30       	cpi	r18, 0x0A	; 10
 476:	88 f4       	brcc	.+34     	; 0x49a <__LOCK_REGION_LENGTH__+0x9a>
 478:	96 fe       	sbrs	r9, 6
 47a:	06 c0       	rjmp	.+12     	; 0x488 <__LOCK_REGION_LENGTH__+0x88>
 47c:	3a e0       	ldi	r19, 0x0A	; 10
 47e:	13 9f       	mul	r17, r19
 480:	20 0d       	add	r18, r0
 482:	11 24       	eor	r1, r1
 484:	12 2f       	mov	r17, r18
 486:	19 c0       	rjmp	.+50     	; 0x4ba <__LOCK_REGION_LENGTH__+0xba>
 488:	8a e0       	ldi	r24, 0x0A	; 10
 48a:	58 9e       	mul	r5, r24
 48c:	20 0d       	add	r18, r0
 48e:	11 24       	eor	r1, r1
 490:	52 2e       	mov	r5, r18
 492:	e9 2d       	mov	r30, r9
 494:	e0 62       	ori	r30, 0x20	; 32
 496:	9e 2e       	mov	r9, r30
 498:	10 c0       	rjmp	.+32     	; 0x4ba <__LOCK_REGION_LENGTH__+0xba>
 49a:	8e 32       	cpi	r24, 0x2E	; 46
 49c:	31 f4       	brne	.+12     	; 0x4aa <__LOCK_REGION_LENGTH__+0xaa>
 49e:	96 fc       	sbrc	r9, 6
 4a0:	e5 c2       	rjmp	.+1482   	; 0xa6c <__stack+0x56d>
 4a2:	f9 2d       	mov	r31, r9
 4a4:	f0 64       	ori	r31, 0x40	; 64
 4a6:	9f 2e       	mov	r9, r31
 4a8:	08 c0       	rjmp	.+16     	; 0x4ba <__LOCK_REGION_LENGTH__+0xba>
 4aa:	8c 36       	cpi	r24, 0x6C	; 108
 4ac:	21 f4       	brne	.+8      	; 0x4b6 <__LOCK_REGION_LENGTH__+0xb6>
 4ae:	29 2d       	mov	r18, r9
 4b0:	20 68       	ori	r18, 0x80	; 128
 4b2:	92 2e       	mov	r9, r18
 4b4:	02 c0       	rjmp	.+4      	; 0x4ba <__LOCK_REGION_LENGTH__+0xba>
 4b6:	88 36       	cpi	r24, 0x68	; 104
 4b8:	41 f4       	brne	.+16     	; 0x4ca <__LOCK_REGION_LENGTH__+0xca>
 4ba:	f1 01       	movw	r30, r2
 4bc:	93 fd       	sbrc	r25, 3
 4be:	85 91       	lpm	r24, Z+
 4c0:	93 ff       	sbrs	r25, 3
 4c2:	81 91       	ld	r24, Z+
 4c4:	1f 01       	movw	r2, r30
 4c6:	81 11       	cpse	r24, r1
 4c8:	b3 cf       	rjmp	.-154    	; 0x430 <__LOCK_REGION_LENGTH__+0x30>
 4ca:	9b eb       	ldi	r25, 0xBB	; 187
 4cc:	98 0f       	add	r25, r24
 4ce:	93 30       	cpi	r25, 0x03	; 3
 4d0:	20 f4       	brcc	.+8      	; 0x4da <__LOCK_REGION_LENGTH__+0xda>
 4d2:	99 2d       	mov	r25, r9
 4d4:	90 61       	ori	r25, 0x10	; 16
 4d6:	80 5e       	subi	r24, 0xE0	; 224
 4d8:	07 c0       	rjmp	.+14     	; 0x4e8 <__LOCK_REGION_LENGTH__+0xe8>
 4da:	9b e9       	ldi	r25, 0x9B	; 155
 4dc:	98 0f       	add	r25, r24
 4de:	93 30       	cpi	r25, 0x03	; 3
 4e0:	08 f0       	brcs	.+2      	; 0x4e4 <__LOCK_REGION_LENGTH__+0xe4>
 4e2:	66 c1       	rjmp	.+716    	; 0x7b0 <__stack+0x2b1>
 4e4:	99 2d       	mov	r25, r9
 4e6:	9f 7e       	andi	r25, 0xEF	; 239
 4e8:	96 ff       	sbrs	r25, 6
 4ea:	16 e0       	ldi	r17, 0x06	; 6
 4ec:	9f 73       	andi	r25, 0x3F	; 63
 4ee:	99 2e       	mov	r9, r25
 4f0:	85 36       	cpi	r24, 0x65	; 101
 4f2:	19 f4       	brne	.+6      	; 0x4fa <__LOCK_REGION_LENGTH__+0xfa>
 4f4:	90 64       	ori	r25, 0x40	; 64
 4f6:	99 2e       	mov	r9, r25
 4f8:	08 c0       	rjmp	.+16     	; 0x50a <__stack+0xb>
 4fa:	86 36       	cpi	r24, 0x66	; 102
 4fc:	21 f4       	brne	.+8      	; 0x506 <__stack+0x7>
 4fe:	39 2f       	mov	r19, r25
 500:	30 68       	ori	r19, 0x80	; 128
 502:	93 2e       	mov	r9, r19
 504:	02 c0       	rjmp	.+4      	; 0x50a <__stack+0xb>
 506:	11 11       	cpse	r17, r1
 508:	11 50       	subi	r17, 0x01	; 1
 50a:	97 fe       	sbrs	r9, 7
 50c:	07 c0       	rjmp	.+14     	; 0x51c <__stack+0x1d>
 50e:	1c 33       	cpi	r17, 0x3C	; 60
 510:	50 f4       	brcc	.+20     	; 0x526 <__stack+0x27>
 512:	44 24       	eor	r4, r4
 514:	43 94       	inc	r4
 516:	41 0e       	add	r4, r17
 518:	27 e0       	ldi	r18, 0x07	; 7
 51a:	0b c0       	rjmp	.+22     	; 0x532 <__stack+0x33>
 51c:	18 30       	cpi	r17, 0x08	; 8
 51e:	38 f0       	brcs	.+14     	; 0x52e <__stack+0x2f>
 520:	27 e0       	ldi	r18, 0x07	; 7
 522:	17 e0       	ldi	r17, 0x07	; 7
 524:	05 c0       	rjmp	.+10     	; 0x530 <__stack+0x31>
 526:	27 e0       	ldi	r18, 0x07	; 7
 528:	9c e3       	ldi	r25, 0x3C	; 60
 52a:	49 2e       	mov	r4, r25
 52c:	02 c0       	rjmp	.+4      	; 0x532 <__stack+0x33>
 52e:	21 2f       	mov	r18, r17
 530:	41 2c       	mov	r4, r1
 532:	56 01       	movw	r10, r12
 534:	84 e0       	ldi	r24, 0x04	; 4
 536:	a8 0e       	add	r10, r24
 538:	b1 1c       	adc	r11, r1
 53a:	f6 01       	movw	r30, r12
 53c:	60 81       	ld	r22, Z
 53e:	71 81       	ldd	r23, Z+1	; 0x01
 540:	82 81       	ldd	r24, Z+2	; 0x02
 542:	93 81       	ldd	r25, Z+3	; 0x03
 544:	04 2d       	mov	r16, r4
 546:	a3 01       	movw	r20, r6
 548:	0e 94 9b 05 	call	0xb36	; 0xb36 <__ftoa_engine>
 54c:	6c 01       	movw	r12, r24
 54e:	f9 81       	ldd	r31, Y+1	; 0x01
 550:	fc 87       	std	Y+12, r31	; 0x0c
 552:	f0 ff       	sbrs	r31, 0
 554:	02 c0       	rjmp	.+4      	; 0x55a <__stack+0x5b>
 556:	f3 ff       	sbrs	r31, 3
 558:	06 c0       	rjmp	.+12     	; 0x566 <__stack+0x67>
 55a:	91 fc       	sbrc	r9, 1
 55c:	06 c0       	rjmp	.+12     	; 0x56a <__stack+0x6b>
 55e:	92 fe       	sbrs	r9, 2
 560:	06 c0       	rjmp	.+12     	; 0x56e <__stack+0x6f>
 562:	00 e2       	ldi	r16, 0x20	; 32
 564:	05 c0       	rjmp	.+10     	; 0x570 <__stack+0x71>
 566:	0d e2       	ldi	r16, 0x2D	; 45
 568:	03 c0       	rjmp	.+6      	; 0x570 <__stack+0x71>
 56a:	0b e2       	ldi	r16, 0x2B	; 43
 56c:	01 c0       	rjmp	.+2      	; 0x570 <__stack+0x71>
 56e:	00 e0       	ldi	r16, 0x00	; 0
 570:	8c 85       	ldd	r24, Y+12	; 0x0c
 572:	8c 70       	andi	r24, 0x0C	; 12
 574:	19 f0       	breq	.+6      	; 0x57c <__stack+0x7d>
 576:	01 11       	cpse	r16, r1
 578:	5a c2       	rjmp	.+1204   	; 0xa2e <__stack+0x52f>
 57a:	9b c2       	rjmp	.+1334   	; 0xab2 <__stack+0x5b3>
 57c:	97 fe       	sbrs	r9, 7
 57e:	10 c0       	rjmp	.+32     	; 0x5a0 <__stack+0xa1>
 580:	4c 0c       	add	r4, r12
 582:	fc 85       	ldd	r31, Y+12	; 0x0c
 584:	f4 ff       	sbrs	r31, 4
 586:	04 c0       	rjmp	.+8      	; 0x590 <__stack+0x91>
 588:	8a 81       	ldd	r24, Y+2	; 0x02
 58a:	81 33       	cpi	r24, 0x31	; 49
 58c:	09 f4       	brne	.+2      	; 0x590 <__stack+0x91>
 58e:	4a 94       	dec	r4
 590:	14 14       	cp	r1, r4
 592:	74 f5       	brge	.+92     	; 0x5f0 <__stack+0xf1>
 594:	28 e0       	ldi	r18, 0x08	; 8
 596:	24 15       	cp	r18, r4
 598:	78 f5       	brcc	.+94     	; 0x5f8 <__stack+0xf9>
 59a:	88 e0       	ldi	r24, 0x08	; 8
 59c:	48 2e       	mov	r4, r24
 59e:	2c c0       	rjmp	.+88     	; 0x5f8 <__stack+0xf9>
 5a0:	96 fc       	sbrc	r9, 6
 5a2:	2a c0       	rjmp	.+84     	; 0x5f8 <__stack+0xf9>
 5a4:	81 2f       	mov	r24, r17
 5a6:	90 e0       	ldi	r25, 0x00	; 0
 5a8:	8c 15       	cp	r24, r12
 5aa:	9d 05       	cpc	r25, r13
 5ac:	9c f0       	brlt	.+38     	; 0x5d4 <__stack+0xd5>
 5ae:	3c ef       	ldi	r19, 0xFC	; 252
 5b0:	c3 16       	cp	r12, r19
 5b2:	3f ef       	ldi	r19, 0xFF	; 255
 5b4:	d3 06       	cpc	r13, r19
 5b6:	74 f0       	brlt	.+28     	; 0x5d4 <__stack+0xd5>
 5b8:	89 2d       	mov	r24, r9
 5ba:	80 68       	ori	r24, 0x80	; 128
 5bc:	98 2e       	mov	r9, r24
 5be:	0a c0       	rjmp	.+20     	; 0x5d4 <__stack+0xd5>
 5c0:	e2 e0       	ldi	r30, 0x02	; 2
 5c2:	f0 e0       	ldi	r31, 0x00	; 0
 5c4:	ec 0f       	add	r30, r28
 5c6:	fd 1f       	adc	r31, r29
 5c8:	e1 0f       	add	r30, r17
 5ca:	f1 1d       	adc	r31, r1
 5cc:	80 81       	ld	r24, Z
 5ce:	80 33       	cpi	r24, 0x30	; 48
 5d0:	19 f4       	brne	.+6      	; 0x5d8 <__stack+0xd9>
 5d2:	11 50       	subi	r17, 0x01	; 1
 5d4:	11 11       	cpse	r17, r1
 5d6:	f4 cf       	rjmp	.-24     	; 0x5c0 <__stack+0xc1>
 5d8:	97 fe       	sbrs	r9, 7
 5da:	0e c0       	rjmp	.+28     	; 0x5f8 <__stack+0xf9>
 5dc:	44 24       	eor	r4, r4
 5de:	43 94       	inc	r4
 5e0:	41 0e       	add	r4, r17
 5e2:	81 2f       	mov	r24, r17
 5e4:	90 e0       	ldi	r25, 0x00	; 0
 5e6:	c8 16       	cp	r12, r24
 5e8:	d9 06       	cpc	r13, r25
 5ea:	2c f4       	brge	.+10     	; 0x5f6 <__stack+0xf7>
 5ec:	1c 19       	sub	r17, r12
 5ee:	04 c0       	rjmp	.+8      	; 0x5f8 <__stack+0xf9>
 5f0:	44 24       	eor	r4, r4
 5f2:	43 94       	inc	r4
 5f4:	01 c0       	rjmp	.+2      	; 0x5f8 <__stack+0xf9>
 5f6:	10 e0       	ldi	r17, 0x00	; 0
 5f8:	97 fe       	sbrs	r9, 7
 5fa:	06 c0       	rjmp	.+12     	; 0x608 <__stack+0x109>
 5fc:	1c 14       	cp	r1, r12
 5fe:	1d 04       	cpc	r1, r13
 600:	34 f4       	brge	.+12     	; 0x60e <__stack+0x10f>
 602:	c6 01       	movw	r24, r12
 604:	01 96       	adiw	r24, 0x01	; 1
 606:	05 c0       	rjmp	.+10     	; 0x612 <__stack+0x113>
 608:	85 e0       	ldi	r24, 0x05	; 5
 60a:	90 e0       	ldi	r25, 0x00	; 0
 60c:	02 c0       	rjmp	.+4      	; 0x612 <__stack+0x113>
 60e:	81 e0       	ldi	r24, 0x01	; 1
 610:	90 e0       	ldi	r25, 0x00	; 0
 612:	01 11       	cpse	r16, r1
 614:	01 96       	adiw	r24, 0x01	; 1
 616:	11 23       	and	r17, r17
 618:	31 f0       	breq	.+12     	; 0x626 <__stack+0x127>
 61a:	21 2f       	mov	r18, r17
 61c:	30 e0       	ldi	r19, 0x00	; 0
 61e:	2f 5f       	subi	r18, 0xFF	; 255
 620:	3f 4f       	sbci	r19, 0xFF	; 255
 622:	82 0f       	add	r24, r18
 624:	93 1f       	adc	r25, r19
 626:	25 2d       	mov	r18, r5
 628:	30 e0       	ldi	r19, 0x00	; 0
 62a:	82 17       	cp	r24, r18
 62c:	93 07       	cpc	r25, r19
 62e:	14 f4       	brge	.+4      	; 0x634 <__stack+0x135>
 630:	58 1a       	sub	r5, r24
 632:	01 c0       	rjmp	.+2      	; 0x636 <__stack+0x137>
 634:	51 2c       	mov	r5, r1
 636:	89 2d       	mov	r24, r9
 638:	89 70       	andi	r24, 0x09	; 9
 63a:	49 f4       	brne	.+18     	; 0x64e <__stack+0x14f>
 63c:	55 20       	and	r5, r5
 63e:	39 f0       	breq	.+14     	; 0x64e <__stack+0x14f>
 640:	b7 01       	movw	r22, r14
 642:	80 e2       	ldi	r24, 0x20	; 32
 644:	90 e0       	ldi	r25, 0x00	; 0
 646:	0e 94 89 06 	call	0xd12	; 0xd12 <fputc>
 64a:	5a 94       	dec	r5
 64c:	f7 cf       	rjmp	.-18     	; 0x63c <__stack+0x13d>
 64e:	00 23       	and	r16, r16
 650:	29 f0       	breq	.+10     	; 0x65c <__stack+0x15d>
 652:	b7 01       	movw	r22, r14
 654:	80 2f       	mov	r24, r16
 656:	90 e0       	ldi	r25, 0x00	; 0
 658:	0e 94 89 06 	call	0xd12	; 0xd12 <fputc>
 65c:	93 fc       	sbrc	r9, 3
 65e:	09 c0       	rjmp	.+18     	; 0x672 <__stack+0x173>
 660:	55 20       	and	r5, r5
 662:	39 f0       	breq	.+14     	; 0x672 <__stack+0x173>
 664:	b7 01       	movw	r22, r14
 666:	80 e3       	ldi	r24, 0x30	; 48
 668:	90 e0       	ldi	r25, 0x00	; 0
 66a:	0e 94 89 06 	call	0xd12	; 0xd12 <fputc>
 66e:	5a 94       	dec	r5
 670:	f7 cf       	rjmp	.-18     	; 0x660 <__stack+0x161>
 672:	97 fe       	sbrs	r9, 7
 674:	4c c0       	rjmp	.+152    	; 0x70e <__stack+0x20f>
 676:	46 01       	movw	r8, r12
 678:	d7 fe       	sbrs	r13, 7
 67a:	02 c0       	rjmp	.+4      	; 0x680 <__stack+0x181>
 67c:	81 2c       	mov	r8, r1
 67e:	91 2c       	mov	r9, r1
 680:	c6 01       	movw	r24, r12
 682:	88 19       	sub	r24, r8
 684:	99 09       	sbc	r25, r9
 686:	f3 01       	movw	r30, r6
 688:	e8 0f       	add	r30, r24
 68a:	f9 1f       	adc	r31, r25
 68c:	fe 87       	std	Y+14, r31	; 0x0e
 68e:	ed 87       	std	Y+13, r30	; 0x0d
 690:	96 01       	movw	r18, r12
 692:	24 19       	sub	r18, r4
 694:	31 09       	sbc	r19, r1
 696:	38 8b       	std	Y+16, r19	; 0x10
 698:	2f 87       	std	Y+15, r18	; 0x0f
 69a:	01 2f       	mov	r16, r17
 69c:	10 e0       	ldi	r17, 0x00	; 0
 69e:	11 95       	neg	r17
 6a0:	01 95       	neg	r16
 6a2:	11 09       	sbc	r17, r1
 6a4:	3f ef       	ldi	r19, 0xFF	; 255
 6a6:	83 16       	cp	r8, r19
 6a8:	93 06       	cpc	r9, r19
 6aa:	29 f4       	brne	.+10     	; 0x6b6 <__stack+0x1b7>
 6ac:	b7 01       	movw	r22, r14
 6ae:	8e e2       	ldi	r24, 0x2E	; 46
 6b0:	90 e0       	ldi	r25, 0x00	; 0
 6b2:	0e 94 89 06 	call	0xd12	; 0xd12 <fputc>
 6b6:	c8 14       	cp	r12, r8
 6b8:	d9 04       	cpc	r13, r9
 6ba:	4c f0       	brlt	.+18     	; 0x6ce <__stack+0x1cf>
 6bc:	8f 85       	ldd	r24, Y+15	; 0x0f
 6be:	98 89       	ldd	r25, Y+16	; 0x10
 6c0:	88 15       	cp	r24, r8
 6c2:	99 05       	cpc	r25, r9
 6c4:	24 f4       	brge	.+8      	; 0x6ce <__stack+0x1cf>
 6c6:	ed 85       	ldd	r30, Y+13	; 0x0d
 6c8:	fe 85       	ldd	r31, Y+14	; 0x0e
 6ca:	81 81       	ldd	r24, Z+1	; 0x01
 6cc:	01 c0       	rjmp	.+2      	; 0x6d0 <__stack+0x1d1>
 6ce:	80 e3       	ldi	r24, 0x30	; 48
 6d0:	f1 e0       	ldi	r31, 0x01	; 1
 6d2:	8f 1a       	sub	r8, r31
 6d4:	91 08       	sbc	r9, r1
 6d6:	2d 85       	ldd	r18, Y+13	; 0x0d
 6d8:	3e 85       	ldd	r19, Y+14	; 0x0e
 6da:	2f 5f       	subi	r18, 0xFF	; 255
 6dc:	3f 4f       	sbci	r19, 0xFF	; 255
 6de:	3e 87       	std	Y+14, r19	; 0x0e
 6e0:	2d 87       	std	Y+13, r18	; 0x0d
 6e2:	80 16       	cp	r8, r16
 6e4:	91 06       	cpc	r9, r17
 6e6:	2c f0       	brlt	.+10     	; 0x6f2 <__stack+0x1f3>
 6e8:	b7 01       	movw	r22, r14
 6ea:	90 e0       	ldi	r25, 0x00	; 0
 6ec:	0e 94 89 06 	call	0xd12	; 0xd12 <fputc>
 6f0:	d9 cf       	rjmp	.-78     	; 0x6a4 <__stack+0x1a5>
 6f2:	c8 14       	cp	r12, r8
 6f4:	d9 04       	cpc	r13, r9
 6f6:	41 f4       	brne	.+16     	; 0x708 <__stack+0x209>
 6f8:	9a 81       	ldd	r25, Y+2	; 0x02
 6fa:	96 33       	cpi	r25, 0x36	; 54
 6fc:	20 f4       	brcc	.+8      	; 0x706 <__stack+0x207>
 6fe:	95 33       	cpi	r25, 0x35	; 53
 700:	19 f4       	brne	.+6      	; 0x708 <__stack+0x209>
 702:	3c 85       	ldd	r19, Y+12	; 0x0c
 704:	34 ff       	sbrs	r19, 4
 706:	81 e3       	ldi	r24, 0x31	; 49
 708:	b7 01       	movw	r22, r14
 70a:	90 e0       	ldi	r25, 0x00	; 0
 70c:	4e c0       	rjmp	.+156    	; 0x7aa <__stack+0x2ab>
 70e:	8a 81       	ldd	r24, Y+2	; 0x02
 710:	81 33       	cpi	r24, 0x31	; 49
 712:	19 f0       	breq	.+6      	; 0x71a <__stack+0x21b>
 714:	9c 85       	ldd	r25, Y+12	; 0x0c
 716:	9f 7e       	andi	r25, 0xEF	; 239
 718:	9c 87       	std	Y+12, r25	; 0x0c
 71a:	b7 01       	movw	r22, r14
 71c:	90 e0       	ldi	r25, 0x00	; 0
 71e:	0e 94 89 06 	call	0xd12	; 0xd12 <fputc>
 722:	11 11       	cpse	r17, r1
 724:	05 c0       	rjmp	.+10     	; 0x730 <__stack+0x231>
 726:	94 fc       	sbrc	r9, 4
 728:	18 c0       	rjmp	.+48     	; 0x75a <__stack+0x25b>
 72a:	85 e6       	ldi	r24, 0x65	; 101
 72c:	90 e0       	ldi	r25, 0x00	; 0
 72e:	17 c0       	rjmp	.+46     	; 0x75e <__stack+0x25f>
 730:	b7 01       	movw	r22, r14
 732:	8e e2       	ldi	r24, 0x2E	; 46
 734:	90 e0       	ldi	r25, 0x00	; 0
 736:	0e 94 89 06 	call	0xd12	; 0xd12 <fputc>
 73a:	1e 5f       	subi	r17, 0xFE	; 254
 73c:	82 e0       	ldi	r24, 0x02	; 2
 73e:	01 e0       	ldi	r16, 0x01	; 1
 740:	08 0f       	add	r16, r24
 742:	f3 01       	movw	r30, r6
 744:	e8 0f       	add	r30, r24
 746:	f1 1d       	adc	r31, r1
 748:	80 81       	ld	r24, Z
 74a:	b7 01       	movw	r22, r14
 74c:	90 e0       	ldi	r25, 0x00	; 0
 74e:	0e 94 89 06 	call	0xd12	; 0xd12 <fputc>
 752:	80 2f       	mov	r24, r16
 754:	01 13       	cpse	r16, r17
 756:	f3 cf       	rjmp	.-26     	; 0x73e <__stack+0x23f>
 758:	e6 cf       	rjmp	.-52     	; 0x726 <__stack+0x227>
 75a:	85 e4       	ldi	r24, 0x45	; 69
 75c:	90 e0       	ldi	r25, 0x00	; 0
 75e:	b7 01       	movw	r22, r14
 760:	0e 94 89 06 	call	0xd12	; 0xd12 <fputc>
 764:	d7 fc       	sbrc	r13, 7
 766:	06 c0       	rjmp	.+12     	; 0x774 <__stack+0x275>
 768:	c1 14       	cp	r12, r1
 76a:	d1 04       	cpc	r13, r1
 76c:	41 f4       	brne	.+16     	; 0x77e <__stack+0x27f>
 76e:	ec 85       	ldd	r30, Y+12	; 0x0c
 770:	e4 ff       	sbrs	r30, 4
 772:	05 c0       	rjmp	.+10     	; 0x77e <__stack+0x27f>
 774:	d1 94       	neg	r13
 776:	c1 94       	neg	r12
 778:	d1 08       	sbc	r13, r1
 77a:	8d e2       	ldi	r24, 0x2D	; 45
 77c:	01 c0       	rjmp	.+2      	; 0x780 <__stack+0x281>
 77e:	8b e2       	ldi	r24, 0x2B	; 43
 780:	b7 01       	movw	r22, r14
 782:	90 e0       	ldi	r25, 0x00	; 0
 784:	0e 94 89 06 	call	0xd12	; 0xd12 <fputc>
 788:	80 e3       	ldi	r24, 0x30	; 48
 78a:	2a e0       	ldi	r18, 0x0A	; 10
 78c:	c2 16       	cp	r12, r18
 78e:	d1 04       	cpc	r13, r1
 790:	2c f0       	brlt	.+10     	; 0x79c <__stack+0x29d>
 792:	8f 5f       	subi	r24, 0xFF	; 255
 794:	fa e0       	ldi	r31, 0x0A	; 10
 796:	cf 1a       	sub	r12, r31
 798:	d1 08       	sbc	r13, r1
 79a:	f7 cf       	rjmp	.-18     	; 0x78a <__stack+0x28b>
 79c:	b7 01       	movw	r22, r14
 79e:	90 e0       	ldi	r25, 0x00	; 0
 7a0:	0e 94 89 06 	call	0xd12	; 0xd12 <fputc>
 7a4:	b7 01       	movw	r22, r14
 7a6:	c6 01       	movw	r24, r12
 7a8:	c0 96       	adiw	r24, 0x30	; 48
 7aa:	0e 94 89 06 	call	0xd12	; 0xd12 <fputc>
 7ae:	54 c1       	rjmp	.+680    	; 0xa58 <__stack+0x559>
 7b0:	83 36       	cpi	r24, 0x63	; 99
 7b2:	31 f0       	breq	.+12     	; 0x7c0 <__stack+0x2c1>
 7b4:	83 37       	cpi	r24, 0x73	; 115
 7b6:	79 f0       	breq	.+30     	; 0x7d6 <__stack+0x2d7>
 7b8:	83 35       	cpi	r24, 0x53	; 83
 7ba:	09 f0       	breq	.+2      	; 0x7be <__stack+0x2bf>
 7bc:	56 c0       	rjmp	.+172    	; 0x86a <__stack+0x36b>
 7be:	20 c0       	rjmp	.+64     	; 0x800 <__stack+0x301>
 7c0:	56 01       	movw	r10, r12
 7c2:	32 e0       	ldi	r19, 0x02	; 2
 7c4:	a3 0e       	add	r10, r19
 7c6:	b1 1c       	adc	r11, r1
 7c8:	f6 01       	movw	r30, r12
 7ca:	80 81       	ld	r24, Z
 7cc:	89 83       	std	Y+1, r24	; 0x01
 7ce:	01 e0       	ldi	r16, 0x01	; 1
 7d0:	10 e0       	ldi	r17, 0x00	; 0
 7d2:	63 01       	movw	r12, r6
 7d4:	12 c0       	rjmp	.+36     	; 0x7fa <__stack+0x2fb>
 7d6:	56 01       	movw	r10, r12
 7d8:	f2 e0       	ldi	r31, 0x02	; 2
 7da:	af 0e       	add	r10, r31
 7dc:	b1 1c       	adc	r11, r1
 7de:	f6 01       	movw	r30, r12
 7e0:	c0 80       	ld	r12, Z
 7e2:	d1 80       	ldd	r13, Z+1	; 0x01
 7e4:	96 fe       	sbrs	r9, 6
 7e6:	03 c0       	rjmp	.+6      	; 0x7ee <__stack+0x2ef>
 7e8:	61 2f       	mov	r22, r17
 7ea:	70 e0       	ldi	r23, 0x00	; 0
 7ec:	02 c0       	rjmp	.+4      	; 0x7f2 <__stack+0x2f3>
 7ee:	6f ef       	ldi	r22, 0xFF	; 255
 7f0:	7f ef       	ldi	r23, 0xFF	; 255
 7f2:	c6 01       	movw	r24, r12
 7f4:	0e 94 7e 06 	call	0xcfc	; 0xcfc <strnlen>
 7f8:	8c 01       	movw	r16, r24
 7fa:	f9 2d       	mov	r31, r9
 7fc:	ff 77       	andi	r31, 0x7F	; 127
 7fe:	14 c0       	rjmp	.+40     	; 0x828 <__stack+0x329>
 800:	56 01       	movw	r10, r12
 802:	22 e0       	ldi	r18, 0x02	; 2
 804:	a2 0e       	add	r10, r18
 806:	b1 1c       	adc	r11, r1
 808:	f6 01       	movw	r30, r12
 80a:	c0 80       	ld	r12, Z
 80c:	d1 80       	ldd	r13, Z+1	; 0x01
 80e:	96 fe       	sbrs	r9, 6
 810:	03 c0       	rjmp	.+6      	; 0x818 <__stack+0x319>
 812:	61 2f       	mov	r22, r17
 814:	70 e0       	ldi	r23, 0x00	; 0
 816:	02 c0       	rjmp	.+4      	; 0x81c <__stack+0x31d>
 818:	6f ef       	ldi	r22, 0xFF	; 255
 81a:	7f ef       	ldi	r23, 0xFF	; 255
 81c:	c6 01       	movw	r24, r12
 81e:	0e 94 73 06 	call	0xce6	; 0xce6 <strnlen_P>
 822:	8c 01       	movw	r16, r24
 824:	f9 2d       	mov	r31, r9
 826:	f0 68       	ori	r31, 0x80	; 128
 828:	9f 2e       	mov	r9, r31
 82a:	f3 fd       	sbrc	r31, 3
 82c:	1a c0       	rjmp	.+52     	; 0x862 <__stack+0x363>
 82e:	85 2d       	mov	r24, r5
 830:	90 e0       	ldi	r25, 0x00	; 0
 832:	08 17       	cp	r16, r24
 834:	19 07       	cpc	r17, r25
 836:	a8 f4       	brcc	.+42     	; 0x862 <__stack+0x363>
 838:	b7 01       	movw	r22, r14
 83a:	80 e2       	ldi	r24, 0x20	; 32
 83c:	90 e0       	ldi	r25, 0x00	; 0
 83e:	0e 94 89 06 	call	0xd12	; 0xd12 <fputc>
 842:	5a 94       	dec	r5
 844:	f4 cf       	rjmp	.-24     	; 0x82e <__stack+0x32f>
 846:	f6 01       	movw	r30, r12
 848:	97 fc       	sbrc	r9, 7
 84a:	85 91       	lpm	r24, Z+
 84c:	97 fe       	sbrs	r9, 7
 84e:	81 91       	ld	r24, Z+
 850:	6f 01       	movw	r12, r30
 852:	b7 01       	movw	r22, r14
 854:	90 e0       	ldi	r25, 0x00	; 0
 856:	0e 94 89 06 	call	0xd12	; 0xd12 <fputc>
 85a:	51 10       	cpse	r5, r1
 85c:	5a 94       	dec	r5
 85e:	01 50       	subi	r16, 0x01	; 1
 860:	11 09       	sbc	r17, r1
 862:	01 15       	cp	r16, r1
 864:	11 05       	cpc	r17, r1
 866:	79 f7       	brne	.-34     	; 0x846 <__stack+0x347>
 868:	f7 c0       	rjmp	.+494    	; 0xa58 <__stack+0x559>
 86a:	84 36       	cpi	r24, 0x64	; 100
 86c:	11 f0       	breq	.+4      	; 0x872 <__stack+0x373>
 86e:	89 36       	cpi	r24, 0x69	; 105
 870:	61 f5       	brne	.+88     	; 0x8ca <__stack+0x3cb>
 872:	56 01       	movw	r10, r12
 874:	97 fe       	sbrs	r9, 7
 876:	09 c0       	rjmp	.+18     	; 0x88a <__stack+0x38b>
 878:	24 e0       	ldi	r18, 0x04	; 4
 87a:	a2 0e       	add	r10, r18
 87c:	b1 1c       	adc	r11, r1
 87e:	f6 01       	movw	r30, r12
 880:	60 81       	ld	r22, Z
 882:	71 81       	ldd	r23, Z+1	; 0x01
 884:	82 81       	ldd	r24, Z+2	; 0x02
 886:	93 81       	ldd	r25, Z+3	; 0x03
 888:	0a c0       	rjmp	.+20     	; 0x89e <__stack+0x39f>
 88a:	f2 e0       	ldi	r31, 0x02	; 2
 88c:	af 0e       	add	r10, r31
 88e:	b1 1c       	adc	r11, r1
 890:	f6 01       	movw	r30, r12
 892:	60 81       	ld	r22, Z
 894:	71 81       	ldd	r23, Z+1	; 0x01
 896:	07 2e       	mov	r0, r23
 898:	00 0c       	add	r0, r0
 89a:	88 0b       	sbc	r24, r24
 89c:	99 0b       	sbc	r25, r25
 89e:	f9 2d       	mov	r31, r9
 8a0:	ff 76       	andi	r31, 0x6F	; 111
 8a2:	9f 2e       	mov	r9, r31
 8a4:	97 ff       	sbrs	r25, 7
 8a6:	09 c0       	rjmp	.+18     	; 0x8ba <__stack+0x3bb>
 8a8:	90 95       	com	r25
 8aa:	80 95       	com	r24
 8ac:	70 95       	com	r23
 8ae:	61 95       	neg	r22
 8b0:	7f 4f       	sbci	r23, 0xFF	; 255
 8b2:	8f 4f       	sbci	r24, 0xFF	; 255
 8b4:	9f 4f       	sbci	r25, 0xFF	; 255
 8b6:	f0 68       	ori	r31, 0x80	; 128
 8b8:	9f 2e       	mov	r9, r31
 8ba:	2a e0       	ldi	r18, 0x0A	; 10
 8bc:	30 e0       	ldi	r19, 0x00	; 0
 8be:	a3 01       	movw	r20, r6
 8c0:	0e 94 0b 07 	call	0xe16	; 0xe16 <__ultoa_invert>
 8c4:	c8 2e       	mov	r12, r24
 8c6:	c6 18       	sub	r12, r6
 8c8:	3f c0       	rjmp	.+126    	; 0x948 <__stack+0x449>
 8ca:	09 2d       	mov	r16, r9
 8cc:	85 37       	cpi	r24, 0x75	; 117
 8ce:	21 f4       	brne	.+8      	; 0x8d8 <__stack+0x3d9>
 8d0:	0f 7e       	andi	r16, 0xEF	; 239
 8d2:	2a e0       	ldi	r18, 0x0A	; 10
 8d4:	30 e0       	ldi	r19, 0x00	; 0
 8d6:	1d c0       	rjmp	.+58     	; 0x912 <__stack+0x413>
 8d8:	09 7f       	andi	r16, 0xF9	; 249
 8da:	8f 36       	cpi	r24, 0x6F	; 111
 8dc:	91 f0       	breq	.+36     	; 0x902 <__stack+0x403>
 8de:	18 f4       	brcc	.+6      	; 0x8e6 <__stack+0x3e7>
 8e0:	88 35       	cpi	r24, 0x58	; 88
 8e2:	59 f0       	breq	.+22     	; 0x8fa <__stack+0x3fb>
 8e4:	c3 c0       	rjmp	.+390    	; 0xa6c <__stack+0x56d>
 8e6:	80 37       	cpi	r24, 0x70	; 112
 8e8:	19 f0       	breq	.+6      	; 0x8f0 <__stack+0x3f1>
 8ea:	88 37       	cpi	r24, 0x78	; 120
 8ec:	11 f0       	breq	.+4      	; 0x8f2 <__stack+0x3f3>
 8ee:	be c0       	rjmp	.+380    	; 0xa6c <__stack+0x56d>
 8f0:	00 61       	ori	r16, 0x10	; 16
 8f2:	04 ff       	sbrs	r16, 4
 8f4:	09 c0       	rjmp	.+18     	; 0x908 <__stack+0x409>
 8f6:	04 60       	ori	r16, 0x04	; 4
 8f8:	07 c0       	rjmp	.+14     	; 0x908 <__stack+0x409>
 8fa:	94 fe       	sbrs	r9, 4
 8fc:	08 c0       	rjmp	.+16     	; 0x90e <__stack+0x40f>
 8fe:	06 60       	ori	r16, 0x06	; 6
 900:	06 c0       	rjmp	.+12     	; 0x90e <__stack+0x40f>
 902:	28 e0       	ldi	r18, 0x08	; 8
 904:	30 e0       	ldi	r19, 0x00	; 0
 906:	05 c0       	rjmp	.+10     	; 0x912 <__stack+0x413>
 908:	20 e1       	ldi	r18, 0x10	; 16
 90a:	30 e0       	ldi	r19, 0x00	; 0
 90c:	02 c0       	rjmp	.+4      	; 0x912 <__stack+0x413>
 90e:	20 e1       	ldi	r18, 0x10	; 16
 910:	32 e0       	ldi	r19, 0x02	; 2
 912:	56 01       	movw	r10, r12
 914:	07 ff       	sbrs	r16, 7
 916:	09 c0       	rjmp	.+18     	; 0x92a <__stack+0x42b>
 918:	84 e0       	ldi	r24, 0x04	; 4
 91a:	a8 0e       	add	r10, r24
 91c:	b1 1c       	adc	r11, r1
 91e:	f6 01       	movw	r30, r12
 920:	60 81       	ld	r22, Z
 922:	71 81       	ldd	r23, Z+1	; 0x01
 924:	82 81       	ldd	r24, Z+2	; 0x02
 926:	93 81       	ldd	r25, Z+3	; 0x03
 928:	08 c0       	rjmp	.+16     	; 0x93a <__stack+0x43b>
 92a:	f2 e0       	ldi	r31, 0x02	; 2
 92c:	af 0e       	add	r10, r31
 92e:	b1 1c       	adc	r11, r1
 930:	f6 01       	movw	r30, r12
 932:	60 81       	ld	r22, Z
 934:	71 81       	ldd	r23, Z+1	; 0x01
 936:	80 e0       	ldi	r24, 0x00	; 0
 938:	90 e0       	ldi	r25, 0x00	; 0
 93a:	a3 01       	movw	r20, r6
 93c:	0e 94 0b 07 	call	0xe16	; 0xe16 <__ultoa_invert>
 940:	c8 2e       	mov	r12, r24
 942:	c6 18       	sub	r12, r6
 944:	0f 77       	andi	r16, 0x7F	; 127
 946:	90 2e       	mov	r9, r16
 948:	96 fe       	sbrs	r9, 6
 94a:	0b c0       	rjmp	.+22     	; 0x962 <__stack+0x463>
 94c:	09 2d       	mov	r16, r9
 94e:	0e 7f       	andi	r16, 0xFE	; 254
 950:	c1 16       	cp	r12, r17
 952:	50 f4       	brcc	.+20     	; 0x968 <__stack+0x469>
 954:	94 fe       	sbrs	r9, 4
 956:	0a c0       	rjmp	.+20     	; 0x96c <__stack+0x46d>
 958:	92 fc       	sbrc	r9, 2
 95a:	08 c0       	rjmp	.+16     	; 0x96c <__stack+0x46d>
 95c:	09 2d       	mov	r16, r9
 95e:	0e 7e       	andi	r16, 0xEE	; 238
 960:	05 c0       	rjmp	.+10     	; 0x96c <__stack+0x46d>
 962:	dc 2c       	mov	r13, r12
 964:	09 2d       	mov	r16, r9
 966:	03 c0       	rjmp	.+6      	; 0x96e <__stack+0x46f>
 968:	dc 2c       	mov	r13, r12
 96a:	01 c0       	rjmp	.+2      	; 0x96e <__stack+0x46f>
 96c:	d1 2e       	mov	r13, r17
 96e:	04 ff       	sbrs	r16, 4
 970:	0d c0       	rjmp	.+26     	; 0x98c <__stack+0x48d>
 972:	fe 01       	movw	r30, r28
 974:	ec 0d       	add	r30, r12
 976:	f1 1d       	adc	r31, r1
 978:	80 81       	ld	r24, Z
 97a:	80 33       	cpi	r24, 0x30	; 48
 97c:	11 f4       	brne	.+4      	; 0x982 <__stack+0x483>
 97e:	09 7e       	andi	r16, 0xE9	; 233
 980:	09 c0       	rjmp	.+18     	; 0x994 <__stack+0x495>
 982:	02 ff       	sbrs	r16, 2
 984:	06 c0       	rjmp	.+12     	; 0x992 <__stack+0x493>
 986:	d3 94       	inc	r13
 988:	d3 94       	inc	r13
 98a:	04 c0       	rjmp	.+8      	; 0x994 <__stack+0x495>
 98c:	80 2f       	mov	r24, r16
 98e:	86 78       	andi	r24, 0x86	; 134
 990:	09 f0       	breq	.+2      	; 0x994 <__stack+0x495>
 992:	d3 94       	inc	r13
 994:	03 fd       	sbrc	r16, 3
 996:	11 c0       	rjmp	.+34     	; 0x9ba <__stack+0x4bb>
 998:	00 ff       	sbrs	r16, 0
 99a:	06 c0       	rjmp	.+12     	; 0x9a8 <__stack+0x4a9>
 99c:	1c 2d       	mov	r17, r12
 99e:	d5 14       	cp	r13, r5
 9a0:	80 f4       	brcc	.+32     	; 0x9c2 <__stack+0x4c3>
 9a2:	15 0d       	add	r17, r5
 9a4:	1d 19       	sub	r17, r13
 9a6:	0d c0       	rjmp	.+26     	; 0x9c2 <__stack+0x4c3>
 9a8:	d5 14       	cp	r13, r5
 9aa:	58 f4       	brcc	.+22     	; 0x9c2 <__stack+0x4c3>
 9ac:	b7 01       	movw	r22, r14
 9ae:	80 e2       	ldi	r24, 0x20	; 32
 9b0:	90 e0       	ldi	r25, 0x00	; 0
 9b2:	0e 94 89 06 	call	0xd12	; 0xd12 <fputc>
 9b6:	d3 94       	inc	r13
 9b8:	f7 cf       	rjmp	.-18     	; 0x9a8 <__stack+0x4a9>
 9ba:	d5 14       	cp	r13, r5
 9bc:	10 f4       	brcc	.+4      	; 0x9c2 <__stack+0x4c3>
 9be:	5d 18       	sub	r5, r13
 9c0:	01 c0       	rjmp	.+2      	; 0x9c4 <__stack+0x4c5>
 9c2:	51 2c       	mov	r5, r1
 9c4:	04 ff       	sbrs	r16, 4
 9c6:	10 c0       	rjmp	.+32     	; 0x9e8 <__stack+0x4e9>
 9c8:	b7 01       	movw	r22, r14
 9ca:	80 e3       	ldi	r24, 0x30	; 48
 9cc:	90 e0       	ldi	r25, 0x00	; 0
 9ce:	0e 94 89 06 	call	0xd12	; 0xd12 <fputc>
 9d2:	02 ff       	sbrs	r16, 2
 9d4:	17 c0       	rjmp	.+46     	; 0xa04 <__stack+0x505>
 9d6:	01 fd       	sbrc	r16, 1
 9d8:	03 c0       	rjmp	.+6      	; 0x9e0 <__stack+0x4e1>
 9da:	88 e7       	ldi	r24, 0x78	; 120
 9dc:	90 e0       	ldi	r25, 0x00	; 0
 9de:	02 c0       	rjmp	.+4      	; 0x9e4 <__stack+0x4e5>
 9e0:	88 e5       	ldi	r24, 0x58	; 88
 9e2:	90 e0       	ldi	r25, 0x00	; 0
 9e4:	b7 01       	movw	r22, r14
 9e6:	0c c0       	rjmp	.+24     	; 0xa00 <__stack+0x501>
 9e8:	80 2f       	mov	r24, r16
 9ea:	86 78       	andi	r24, 0x86	; 134
 9ec:	59 f0       	breq	.+22     	; 0xa04 <__stack+0x505>
 9ee:	01 ff       	sbrs	r16, 1
 9f0:	02 c0       	rjmp	.+4      	; 0x9f6 <__stack+0x4f7>
 9f2:	8b e2       	ldi	r24, 0x2B	; 43
 9f4:	01 c0       	rjmp	.+2      	; 0x9f8 <__stack+0x4f9>
 9f6:	80 e2       	ldi	r24, 0x20	; 32
 9f8:	07 fd       	sbrc	r16, 7
 9fa:	8d e2       	ldi	r24, 0x2D	; 45
 9fc:	b7 01       	movw	r22, r14
 9fe:	90 e0       	ldi	r25, 0x00	; 0
 a00:	0e 94 89 06 	call	0xd12	; 0xd12 <fputc>
 a04:	c1 16       	cp	r12, r17
 a06:	38 f4       	brcc	.+14     	; 0xa16 <__stack+0x517>
 a08:	b7 01       	movw	r22, r14
 a0a:	80 e3       	ldi	r24, 0x30	; 48
 a0c:	90 e0       	ldi	r25, 0x00	; 0
 a0e:	0e 94 89 06 	call	0xd12	; 0xd12 <fputc>
 a12:	11 50       	subi	r17, 0x01	; 1
 a14:	f7 cf       	rjmp	.-18     	; 0xa04 <__stack+0x505>
 a16:	ca 94       	dec	r12
 a18:	f3 01       	movw	r30, r6
 a1a:	ec 0d       	add	r30, r12
 a1c:	f1 1d       	adc	r31, r1
 a1e:	80 81       	ld	r24, Z
 a20:	b7 01       	movw	r22, r14
 a22:	90 e0       	ldi	r25, 0x00	; 0
 a24:	0e 94 89 06 	call	0xd12	; 0xd12 <fputc>
 a28:	c1 10       	cpse	r12, r1
 a2a:	f5 cf       	rjmp	.-22     	; 0xa16 <__stack+0x517>
 a2c:	15 c0       	rjmp	.+42     	; 0xa58 <__stack+0x559>
 a2e:	f4 e0       	ldi	r31, 0x04	; 4
 a30:	f5 15       	cp	r31, r5
 a32:	60 f5       	brcc	.+88     	; 0xa8c <__stack+0x58d>
 a34:	84 e0       	ldi	r24, 0x04	; 4
 a36:	58 1a       	sub	r5, r24
 a38:	93 fe       	sbrs	r9, 3
 a3a:	1f c0       	rjmp	.+62     	; 0xa7a <__stack+0x57b>
 a3c:	01 11       	cpse	r16, r1
 a3e:	27 c0       	rjmp	.+78     	; 0xa8e <__stack+0x58f>
 a40:	2c 85       	ldd	r18, Y+12	; 0x0c
 a42:	23 ff       	sbrs	r18, 3
 a44:	2a c0       	rjmp	.+84     	; 0xa9a <__stack+0x59b>
 a46:	0c e6       	ldi	r16, 0x6C	; 108
 a48:	10 e0       	ldi	r17, 0x00	; 0
 a4a:	39 2d       	mov	r19, r9
 a4c:	30 71       	andi	r19, 0x10	; 16
 a4e:	93 2e       	mov	r9, r19
 a50:	f8 01       	movw	r30, r16
 a52:	84 91       	lpm	r24, Z
 a54:	81 11       	cpse	r24, r1
 a56:	24 c0       	rjmp	.+72     	; 0xaa0 <__stack+0x5a1>
 a58:	55 20       	and	r5, r5
 a5a:	09 f4       	brne	.+2      	; 0xa5e <__stack+0x55f>
 a5c:	e4 cc       	rjmp	.-1592   	; 0x426 <__LOCK_REGION_LENGTH__+0x26>
 a5e:	b7 01       	movw	r22, r14
 a60:	80 e2       	ldi	r24, 0x20	; 32
 a62:	90 e0       	ldi	r25, 0x00	; 0
 a64:	0e 94 89 06 	call	0xd12	; 0xd12 <fputc>
 a68:	5a 94       	dec	r5
 a6a:	f6 cf       	rjmp	.-20     	; 0xa58 <__stack+0x559>
 a6c:	f7 01       	movw	r30, r14
 a6e:	86 81       	ldd	r24, Z+6	; 0x06
 a70:	97 81       	ldd	r25, Z+7	; 0x07
 a72:	26 c0       	rjmp	.+76     	; 0xac0 <__stack+0x5c1>
 a74:	8f ef       	ldi	r24, 0xFF	; 255
 a76:	9f ef       	ldi	r25, 0xFF	; 255
 a78:	23 c0       	rjmp	.+70     	; 0xac0 <__stack+0x5c1>
 a7a:	b7 01       	movw	r22, r14
 a7c:	80 e2       	ldi	r24, 0x20	; 32
 a7e:	90 e0       	ldi	r25, 0x00	; 0
 a80:	0e 94 89 06 	call	0xd12	; 0xd12 <fputc>
 a84:	5a 94       	dec	r5
 a86:	51 10       	cpse	r5, r1
 a88:	f8 cf       	rjmp	.-16     	; 0xa7a <__stack+0x57b>
 a8a:	d8 cf       	rjmp	.-80     	; 0xa3c <__stack+0x53d>
 a8c:	51 2c       	mov	r5, r1
 a8e:	b7 01       	movw	r22, r14
 a90:	80 2f       	mov	r24, r16
 a92:	90 e0       	ldi	r25, 0x00	; 0
 a94:	0e 94 89 06 	call	0xd12	; 0xd12 <fputc>
 a98:	d3 cf       	rjmp	.-90     	; 0xa40 <__stack+0x541>
 a9a:	00 e7       	ldi	r16, 0x70	; 112
 a9c:	10 e0       	ldi	r17, 0x00	; 0
 a9e:	d5 cf       	rjmp	.-86     	; 0xa4a <__stack+0x54b>
 aa0:	91 10       	cpse	r9, r1
 aa2:	80 52       	subi	r24, 0x20	; 32
 aa4:	b7 01       	movw	r22, r14
 aa6:	90 e0       	ldi	r25, 0x00	; 0
 aa8:	0e 94 89 06 	call	0xd12	; 0xd12 <fputc>
 aac:	0f 5f       	subi	r16, 0xFF	; 255
 aae:	1f 4f       	sbci	r17, 0xFF	; 255
 ab0:	cf cf       	rjmp	.-98     	; 0xa50 <__stack+0x551>
 ab2:	23 e0       	ldi	r18, 0x03	; 3
 ab4:	25 15       	cp	r18, r5
 ab6:	10 f4       	brcc	.+4      	; 0xabc <__stack+0x5bd>
 ab8:	83 e0       	ldi	r24, 0x03	; 3
 aba:	bd cf       	rjmp	.-134    	; 0xa36 <__stack+0x537>
 abc:	51 2c       	mov	r5, r1
 abe:	c0 cf       	rjmp	.-128    	; 0xa40 <__stack+0x541>
 ac0:	60 96       	adiw	r28, 0x10	; 16
 ac2:	e2 e1       	ldi	r30, 0x12	; 18
 ac4:	0c 94 80 05 	jmp	0xb00	; 0xb00 <__epilogue_restores__>

00000ac8 <__prologue_saves__>:
 ac8:	2f 92       	push	r2
 aca:	3f 92       	push	r3
 acc:	4f 92       	push	r4
 ace:	5f 92       	push	r5
 ad0:	6f 92       	push	r6
 ad2:	7f 92       	push	r7
 ad4:	8f 92       	push	r8
 ad6:	9f 92       	push	r9
 ad8:	af 92       	push	r10
 ada:	bf 92       	push	r11
 adc:	cf 92       	push	r12
 ade:	df 92       	push	r13
 ae0:	ef 92       	push	r14
 ae2:	ff 92       	push	r15
 ae4:	0f 93       	push	r16
 ae6:	1f 93       	push	r17
 ae8:	cf 93       	push	r28
 aea:	df 93       	push	r29
 aec:	cd b7       	in	r28, 0x3d	; 61
 aee:	de b7       	in	r29, 0x3e	; 62
 af0:	ca 1b       	sub	r28, r26
 af2:	db 0b       	sbc	r29, r27
 af4:	0f b6       	in	r0, 0x3f	; 63
 af6:	f8 94       	cli
 af8:	de bf       	out	0x3e, r29	; 62
 afa:	0f be       	out	0x3f, r0	; 63
 afc:	cd bf       	out	0x3d, r28	; 61
 afe:	09 94       	ijmp

00000b00 <__epilogue_restores__>:
 b00:	2a 88       	ldd	r2, Y+18	; 0x12
 b02:	39 88       	ldd	r3, Y+17	; 0x11
 b04:	48 88       	ldd	r4, Y+16	; 0x10
 b06:	5f 84       	ldd	r5, Y+15	; 0x0f
 b08:	6e 84       	ldd	r6, Y+14	; 0x0e
 b0a:	7d 84       	ldd	r7, Y+13	; 0x0d
 b0c:	8c 84       	ldd	r8, Y+12	; 0x0c
 b0e:	9b 84       	ldd	r9, Y+11	; 0x0b
 b10:	aa 84       	ldd	r10, Y+10	; 0x0a
 b12:	b9 84       	ldd	r11, Y+9	; 0x09
 b14:	c8 84       	ldd	r12, Y+8	; 0x08
 b16:	df 80       	ldd	r13, Y+7	; 0x07
 b18:	ee 80       	ldd	r14, Y+6	; 0x06
 b1a:	fd 80       	ldd	r15, Y+5	; 0x05
 b1c:	0c 81       	ldd	r16, Y+4	; 0x04
 b1e:	1b 81       	ldd	r17, Y+3	; 0x03
 b20:	aa 81       	ldd	r26, Y+2	; 0x02
 b22:	b9 81       	ldd	r27, Y+1	; 0x01
 b24:	ce 0f       	add	r28, r30
 b26:	d1 1d       	adc	r29, r1
 b28:	0f b6       	in	r0, 0x3f	; 63
 b2a:	f8 94       	cli
 b2c:	de bf       	out	0x3e, r29	; 62
 b2e:	0f be       	out	0x3f, r0	; 63
 b30:	cd bf       	out	0x3d, r28	; 61
 b32:	ed 01       	movw	r28, r26
 b34:	08 95       	ret

00000b36 <__ftoa_engine>:
 b36:	28 30       	cpi	r18, 0x08	; 8
 b38:	08 f0       	brcs	.+2      	; 0xb3c <__ftoa_engine+0x6>
 b3a:	27 e0       	ldi	r18, 0x07	; 7
 b3c:	33 27       	eor	r19, r19
 b3e:	da 01       	movw	r26, r20
 b40:	99 0f       	add	r25, r25
 b42:	31 1d       	adc	r19, r1
 b44:	87 fd       	sbrc	r24, 7
 b46:	91 60       	ori	r25, 0x01	; 1
 b48:	00 96       	adiw	r24, 0x00	; 0
 b4a:	61 05       	cpc	r22, r1
 b4c:	71 05       	cpc	r23, r1
 b4e:	39 f4       	brne	.+14     	; 0xb5e <__ftoa_engine+0x28>
 b50:	32 60       	ori	r19, 0x02	; 2
 b52:	2e 5f       	subi	r18, 0xFE	; 254
 b54:	3d 93       	st	X+, r19
 b56:	30 e3       	ldi	r19, 0x30	; 48
 b58:	2a 95       	dec	r18
 b5a:	e1 f7       	brne	.-8      	; 0xb54 <__ftoa_engine+0x1e>
 b5c:	08 95       	ret
 b5e:	9f 3f       	cpi	r25, 0xFF	; 255
 b60:	30 f0       	brcs	.+12     	; 0xb6e <__ftoa_engine+0x38>
 b62:	80 38       	cpi	r24, 0x80	; 128
 b64:	71 05       	cpc	r23, r1
 b66:	61 05       	cpc	r22, r1
 b68:	09 f0       	breq	.+2      	; 0xb6c <__ftoa_engine+0x36>
 b6a:	3c 5f       	subi	r19, 0xFC	; 252
 b6c:	3c 5f       	subi	r19, 0xFC	; 252
 b6e:	3d 93       	st	X+, r19
 b70:	91 30       	cpi	r25, 0x01	; 1
 b72:	08 f0       	brcs	.+2      	; 0xb76 <__ftoa_engine+0x40>
 b74:	80 68       	ori	r24, 0x80	; 128
 b76:	91 1d       	adc	r25, r1
 b78:	df 93       	push	r29
 b7a:	cf 93       	push	r28
 b7c:	1f 93       	push	r17
 b7e:	0f 93       	push	r16
 b80:	ff 92       	push	r15
 b82:	ef 92       	push	r14
 b84:	19 2f       	mov	r17, r25
 b86:	98 7f       	andi	r25, 0xF8	; 248
 b88:	96 95       	lsr	r25
 b8a:	e9 2f       	mov	r30, r25
 b8c:	96 95       	lsr	r25
 b8e:	96 95       	lsr	r25
 b90:	e9 0f       	add	r30, r25
 b92:	ff 27       	eor	r31, r31
 b94:	e2 53       	subi	r30, 0x32	; 50
 b96:	ff 4f       	sbci	r31, 0xFF	; 255
 b98:	99 27       	eor	r25, r25
 b9a:	33 27       	eor	r19, r19
 b9c:	ee 24       	eor	r14, r14
 b9e:	ff 24       	eor	r15, r15
 ba0:	a7 01       	movw	r20, r14
 ba2:	e7 01       	movw	r28, r14
 ba4:	05 90       	lpm	r0, Z+
 ba6:	08 94       	sec
 ba8:	07 94       	ror	r0
 baa:	28 f4       	brcc	.+10     	; 0xbb6 <__ftoa_engine+0x80>
 bac:	36 0f       	add	r19, r22
 bae:	e7 1e       	adc	r14, r23
 bb0:	f8 1e       	adc	r15, r24
 bb2:	49 1f       	adc	r20, r25
 bb4:	51 1d       	adc	r21, r1
 bb6:	66 0f       	add	r22, r22
 bb8:	77 1f       	adc	r23, r23
 bba:	88 1f       	adc	r24, r24
 bbc:	99 1f       	adc	r25, r25
 bbe:	06 94       	lsr	r0
 bc0:	a1 f7       	brne	.-24     	; 0xbaa <__ftoa_engine+0x74>
 bc2:	05 90       	lpm	r0, Z+
 bc4:	07 94       	ror	r0
 bc6:	28 f4       	brcc	.+10     	; 0xbd2 <__ftoa_engine+0x9c>
 bc8:	e7 0e       	add	r14, r23
 bca:	f8 1e       	adc	r15, r24
 bcc:	49 1f       	adc	r20, r25
 bce:	56 1f       	adc	r21, r22
 bd0:	c1 1d       	adc	r28, r1
 bd2:	77 0f       	add	r23, r23
 bd4:	88 1f       	adc	r24, r24
 bd6:	99 1f       	adc	r25, r25
 bd8:	66 1f       	adc	r22, r22
 bda:	06 94       	lsr	r0
 bdc:	a1 f7       	brne	.-24     	; 0xbc6 <__ftoa_engine+0x90>
 bde:	05 90       	lpm	r0, Z+
 be0:	07 94       	ror	r0
 be2:	28 f4       	brcc	.+10     	; 0xbee <__ftoa_engine+0xb8>
 be4:	f8 0e       	add	r15, r24
 be6:	49 1f       	adc	r20, r25
 be8:	56 1f       	adc	r21, r22
 bea:	c7 1f       	adc	r28, r23
 bec:	d1 1d       	adc	r29, r1
 bee:	88 0f       	add	r24, r24
 bf0:	99 1f       	adc	r25, r25
 bf2:	66 1f       	adc	r22, r22
 bf4:	77 1f       	adc	r23, r23
 bf6:	06 94       	lsr	r0
 bf8:	a1 f7       	brne	.-24     	; 0xbe2 <__ftoa_engine+0xac>
 bfa:	05 90       	lpm	r0, Z+
 bfc:	07 94       	ror	r0
 bfe:	20 f4       	brcc	.+8      	; 0xc08 <__ftoa_engine+0xd2>
 c00:	49 0f       	add	r20, r25
 c02:	56 1f       	adc	r21, r22
 c04:	c7 1f       	adc	r28, r23
 c06:	d8 1f       	adc	r29, r24
 c08:	99 0f       	add	r25, r25
 c0a:	66 1f       	adc	r22, r22
 c0c:	77 1f       	adc	r23, r23
 c0e:	88 1f       	adc	r24, r24
 c10:	06 94       	lsr	r0
 c12:	a9 f7       	brne	.-22     	; 0xbfe <__ftoa_engine+0xc8>
 c14:	84 91       	lpm	r24, Z
 c16:	10 95       	com	r17
 c18:	17 70       	andi	r17, 0x07	; 7
 c1a:	41 f0       	breq	.+16     	; 0xc2c <__ftoa_engine+0xf6>
 c1c:	d6 95       	lsr	r29
 c1e:	c7 95       	ror	r28
 c20:	57 95       	ror	r21
 c22:	47 95       	ror	r20
 c24:	f7 94       	ror	r15
 c26:	e7 94       	ror	r14
 c28:	1a 95       	dec	r17
 c2a:	c1 f7       	brne	.-16     	; 0xc1c <__ftoa_engine+0xe6>
 c2c:	e4 e7       	ldi	r30, 0x74	; 116
 c2e:	f0 e0       	ldi	r31, 0x00	; 0
 c30:	68 94       	set
 c32:	15 90       	lpm	r1, Z+
 c34:	15 91       	lpm	r17, Z+
 c36:	35 91       	lpm	r19, Z+
 c38:	65 91       	lpm	r22, Z+
 c3a:	95 91       	lpm	r25, Z+
 c3c:	05 90       	lpm	r0, Z+
 c3e:	7f e2       	ldi	r23, 0x2F	; 47
 c40:	73 95       	inc	r23
 c42:	e1 18       	sub	r14, r1
 c44:	f1 0a       	sbc	r15, r17
 c46:	43 0b       	sbc	r20, r19
 c48:	56 0b       	sbc	r21, r22
 c4a:	c9 0b       	sbc	r28, r25
 c4c:	d0 09       	sbc	r29, r0
 c4e:	c0 f7       	brcc	.-16     	; 0xc40 <__ftoa_engine+0x10a>
 c50:	e1 0c       	add	r14, r1
 c52:	f1 1e       	adc	r15, r17
 c54:	43 1f       	adc	r20, r19
 c56:	56 1f       	adc	r21, r22
 c58:	c9 1f       	adc	r28, r25
 c5a:	d0 1d       	adc	r29, r0
 c5c:	7e f4       	brtc	.+30     	; 0xc7c <__ftoa_engine+0x146>
 c5e:	70 33       	cpi	r23, 0x30	; 48
 c60:	11 f4       	brne	.+4      	; 0xc66 <__ftoa_engine+0x130>
 c62:	8a 95       	dec	r24
 c64:	e6 cf       	rjmp	.-52     	; 0xc32 <__ftoa_engine+0xfc>
 c66:	e8 94       	clt
 c68:	01 50       	subi	r16, 0x01	; 1
 c6a:	30 f0       	brcs	.+12     	; 0xc78 <__ftoa_engine+0x142>
 c6c:	08 0f       	add	r16, r24
 c6e:	0a f4       	brpl	.+2      	; 0xc72 <__ftoa_engine+0x13c>
 c70:	00 27       	eor	r16, r16
 c72:	02 17       	cp	r16, r18
 c74:	08 f4       	brcc	.+2      	; 0xc78 <__ftoa_engine+0x142>
 c76:	20 2f       	mov	r18, r16
 c78:	23 95       	inc	r18
 c7a:	02 2f       	mov	r16, r18
 c7c:	7a 33       	cpi	r23, 0x3A	; 58
 c7e:	28 f0       	brcs	.+10     	; 0xc8a <__ftoa_engine+0x154>
 c80:	79 e3       	ldi	r23, 0x39	; 57
 c82:	7d 93       	st	X+, r23
 c84:	2a 95       	dec	r18
 c86:	e9 f7       	brne	.-6      	; 0xc82 <__ftoa_engine+0x14c>
 c88:	10 c0       	rjmp	.+32     	; 0xcaa <__ftoa_engine+0x174>
 c8a:	7d 93       	st	X+, r23
 c8c:	2a 95       	dec	r18
 c8e:	89 f6       	brne	.-94     	; 0xc32 <__ftoa_engine+0xfc>
 c90:	06 94       	lsr	r0
 c92:	97 95       	ror	r25
 c94:	67 95       	ror	r22
 c96:	37 95       	ror	r19
 c98:	17 95       	ror	r17
 c9a:	17 94       	ror	r1
 c9c:	e1 18       	sub	r14, r1
 c9e:	f1 0a       	sbc	r15, r17
 ca0:	43 0b       	sbc	r20, r19
 ca2:	56 0b       	sbc	r21, r22
 ca4:	c9 0b       	sbc	r28, r25
 ca6:	d0 09       	sbc	r29, r0
 ca8:	98 f0       	brcs	.+38     	; 0xcd0 <__ftoa_engine+0x19a>
 caa:	23 95       	inc	r18
 cac:	7e 91       	ld	r23, -X
 cae:	73 95       	inc	r23
 cb0:	7a 33       	cpi	r23, 0x3A	; 58
 cb2:	08 f0       	brcs	.+2      	; 0xcb6 <__ftoa_engine+0x180>
 cb4:	70 e3       	ldi	r23, 0x30	; 48
 cb6:	7c 93       	st	X, r23
 cb8:	20 13       	cpse	r18, r16
 cba:	b8 f7       	brcc	.-18     	; 0xcaa <__ftoa_engine+0x174>
 cbc:	7e 91       	ld	r23, -X
 cbe:	70 61       	ori	r23, 0x10	; 16
 cc0:	7d 93       	st	X+, r23
 cc2:	30 f0       	brcs	.+12     	; 0xcd0 <__ftoa_engine+0x19a>
 cc4:	83 95       	inc	r24
 cc6:	71 e3       	ldi	r23, 0x31	; 49
 cc8:	7d 93       	st	X+, r23
 cca:	70 e3       	ldi	r23, 0x30	; 48
 ccc:	2a 95       	dec	r18
 cce:	e1 f7       	brne	.-8      	; 0xcc8 <__ftoa_engine+0x192>
 cd0:	11 24       	eor	r1, r1
 cd2:	ef 90       	pop	r14
 cd4:	ff 90       	pop	r15
 cd6:	0f 91       	pop	r16
 cd8:	1f 91       	pop	r17
 cda:	cf 91       	pop	r28
 cdc:	df 91       	pop	r29
 cde:	99 27       	eor	r25, r25
 ce0:	87 fd       	sbrc	r24, 7
 ce2:	90 95       	com	r25
 ce4:	08 95       	ret

00000ce6 <strnlen_P>:
 ce6:	fc 01       	movw	r30, r24
 ce8:	05 90       	lpm	r0, Z+
 cea:	61 50       	subi	r22, 0x01	; 1
 cec:	70 40       	sbci	r23, 0x00	; 0
 cee:	01 10       	cpse	r0, r1
 cf0:	d8 f7       	brcc	.-10     	; 0xce8 <strnlen_P+0x2>
 cf2:	80 95       	com	r24
 cf4:	90 95       	com	r25
 cf6:	8e 0f       	add	r24, r30
 cf8:	9f 1f       	adc	r25, r31
 cfa:	08 95       	ret

00000cfc <strnlen>:
 cfc:	fc 01       	movw	r30, r24
 cfe:	61 50       	subi	r22, 0x01	; 1
 d00:	70 40       	sbci	r23, 0x00	; 0
 d02:	01 90       	ld	r0, Z+
 d04:	01 10       	cpse	r0, r1
 d06:	d8 f7       	brcc	.-10     	; 0xcfe <strnlen+0x2>
 d08:	80 95       	com	r24
 d0a:	90 95       	com	r25
 d0c:	8e 0f       	add	r24, r30
 d0e:	9f 1f       	adc	r25, r31
 d10:	08 95       	ret

00000d12 <fputc>:
 d12:	0f 93       	push	r16
 d14:	1f 93       	push	r17
 d16:	cf 93       	push	r28
 d18:	df 93       	push	r29
 d1a:	fb 01       	movw	r30, r22
 d1c:	23 81       	ldd	r18, Z+3	; 0x03
 d1e:	21 fd       	sbrc	r18, 1
 d20:	03 c0       	rjmp	.+6      	; 0xd28 <fputc+0x16>
 d22:	8f ef       	ldi	r24, 0xFF	; 255
 d24:	9f ef       	ldi	r25, 0xFF	; 255
 d26:	2c c0       	rjmp	.+88     	; 0xd80 <fputc+0x6e>
 d28:	22 ff       	sbrs	r18, 2
 d2a:	16 c0       	rjmp	.+44     	; 0xd58 <fputc+0x46>
 d2c:	46 81       	ldd	r20, Z+6	; 0x06
 d2e:	57 81       	ldd	r21, Z+7	; 0x07
 d30:	24 81       	ldd	r18, Z+4	; 0x04
 d32:	35 81       	ldd	r19, Z+5	; 0x05
 d34:	42 17       	cp	r20, r18
 d36:	53 07       	cpc	r21, r19
 d38:	44 f4       	brge	.+16     	; 0xd4a <fputc+0x38>
 d3a:	a0 81       	ld	r26, Z
 d3c:	b1 81       	ldd	r27, Z+1	; 0x01
 d3e:	9d 01       	movw	r18, r26
 d40:	2f 5f       	subi	r18, 0xFF	; 255
 d42:	3f 4f       	sbci	r19, 0xFF	; 255
 d44:	31 83       	std	Z+1, r19	; 0x01
 d46:	20 83       	st	Z, r18
 d48:	8c 93       	st	X, r24
 d4a:	26 81       	ldd	r18, Z+6	; 0x06
 d4c:	37 81       	ldd	r19, Z+7	; 0x07
 d4e:	2f 5f       	subi	r18, 0xFF	; 255
 d50:	3f 4f       	sbci	r19, 0xFF	; 255
 d52:	37 83       	std	Z+7, r19	; 0x07
 d54:	26 83       	std	Z+6, r18	; 0x06
 d56:	14 c0       	rjmp	.+40     	; 0xd80 <fputc+0x6e>
 d58:	8b 01       	movw	r16, r22
 d5a:	ec 01       	movw	r28, r24
 d5c:	fb 01       	movw	r30, r22
 d5e:	00 84       	ldd	r0, Z+8	; 0x08
 d60:	f1 85       	ldd	r31, Z+9	; 0x09
 d62:	e0 2d       	mov	r30, r0
 d64:	09 95       	icall
 d66:	89 2b       	or	r24, r25
 d68:	e1 f6       	brne	.-72     	; 0xd22 <fputc+0x10>
 d6a:	d8 01       	movw	r26, r16
 d6c:	16 96       	adiw	r26, 0x06	; 6
 d6e:	8d 91       	ld	r24, X+
 d70:	9c 91       	ld	r25, X
 d72:	17 97       	sbiw	r26, 0x07	; 7
 d74:	01 96       	adiw	r24, 0x01	; 1
 d76:	17 96       	adiw	r26, 0x07	; 7
 d78:	9c 93       	st	X, r25
 d7a:	8e 93       	st	-X, r24
 d7c:	16 97       	sbiw	r26, 0x06	; 6
 d7e:	ce 01       	movw	r24, r28
 d80:	df 91       	pop	r29
 d82:	cf 91       	pop	r28
 d84:	1f 91       	pop	r17
 d86:	0f 91       	pop	r16
 d88:	08 95       	ret

00000d8a <printf>:
 d8a:	a0 e0       	ldi	r26, 0x00	; 0
 d8c:	b0 e0       	ldi	r27, 0x00	; 0
 d8e:	eb ec       	ldi	r30, 0xCB	; 203
 d90:	f6 e0       	ldi	r31, 0x06	; 6
 d92:	0c 94 74 05 	jmp	0xae8	; 0xae8 <__prologue_saves__+0x20>
 d96:	ae 01       	movw	r20, r28
 d98:	4b 5f       	subi	r20, 0xFB	; 251
 d9a:	5f 4f       	sbci	r21, 0xFF	; 255
 d9c:	fa 01       	movw	r30, r20
 d9e:	61 91       	ld	r22, Z+
 da0:	71 91       	ld	r23, Z+
 da2:	af 01       	movw	r20, r30
 da4:	80 91 3a 01 	lds	r24, 0x013A	; 0x80013a <__iob+0x2>
 da8:	90 91 3b 01 	lds	r25, 0x013B	; 0x80013b <__iob+0x3>
 dac:	0e 94 e7 01 	call	0x3ce	; 0x3ce <vfprintf>
 db0:	e2 e0       	ldi	r30, 0x02	; 2
 db2:	0c 94 90 05 	jmp	0xb20	; 0xb20 <__epilogue_restores__+0x20>

00000db6 <puts>:
 db6:	0f 93       	push	r16
 db8:	1f 93       	push	r17
 dba:	cf 93       	push	r28
 dbc:	df 93       	push	r29
 dbe:	e0 91 3a 01 	lds	r30, 0x013A	; 0x80013a <__iob+0x2>
 dc2:	f0 91 3b 01 	lds	r31, 0x013B	; 0x80013b <__iob+0x3>
 dc6:	23 81       	ldd	r18, Z+3	; 0x03
 dc8:	21 ff       	sbrs	r18, 1
 dca:	1b c0       	rjmp	.+54     	; 0xe02 <puts+0x4c>
 dcc:	8c 01       	movw	r16, r24
 dce:	d0 e0       	ldi	r29, 0x00	; 0
 dd0:	c0 e0       	ldi	r28, 0x00	; 0
 dd2:	f8 01       	movw	r30, r16
 dd4:	81 91       	ld	r24, Z+
 dd6:	8f 01       	movw	r16, r30
 dd8:	60 91 3a 01 	lds	r22, 0x013A	; 0x80013a <__iob+0x2>
 ddc:	70 91 3b 01 	lds	r23, 0x013B	; 0x80013b <__iob+0x3>
 de0:	db 01       	movw	r26, r22
 de2:	18 96       	adiw	r26, 0x08	; 8
 de4:	ed 91       	ld	r30, X+
 de6:	fc 91       	ld	r31, X
 de8:	19 97       	sbiw	r26, 0x09	; 9
 dea:	88 23       	and	r24, r24
 dec:	31 f0       	breq	.+12     	; 0xdfa <puts+0x44>
 dee:	09 95       	icall
 df0:	89 2b       	or	r24, r25
 df2:	79 f3       	breq	.-34     	; 0xdd2 <puts+0x1c>
 df4:	df ef       	ldi	r29, 0xFF	; 255
 df6:	cf ef       	ldi	r28, 0xFF	; 255
 df8:	ec cf       	rjmp	.-40     	; 0xdd2 <puts+0x1c>
 dfa:	8a e0       	ldi	r24, 0x0A	; 10
 dfc:	09 95       	icall
 dfe:	89 2b       	or	r24, r25
 e00:	19 f0       	breq	.+6      	; 0xe08 <puts+0x52>
 e02:	8f ef       	ldi	r24, 0xFF	; 255
 e04:	9f ef       	ldi	r25, 0xFF	; 255
 e06:	02 c0       	rjmp	.+4      	; 0xe0c <puts+0x56>
 e08:	8d 2f       	mov	r24, r29
 e0a:	9c 2f       	mov	r25, r28
 e0c:	df 91       	pop	r29
 e0e:	cf 91       	pop	r28
 e10:	1f 91       	pop	r17
 e12:	0f 91       	pop	r16
 e14:	08 95       	ret

00000e16 <__ultoa_invert>:
 e16:	fa 01       	movw	r30, r20
 e18:	aa 27       	eor	r26, r26
 e1a:	28 30       	cpi	r18, 0x08	; 8
 e1c:	51 f1       	breq	.+84     	; 0xe72 <__ultoa_invert+0x5c>
 e1e:	20 31       	cpi	r18, 0x10	; 16
 e20:	81 f1       	breq	.+96     	; 0xe82 <__ultoa_invert+0x6c>
 e22:	e8 94       	clt
 e24:	6f 93       	push	r22
 e26:	6e 7f       	andi	r22, 0xFE	; 254
 e28:	6e 5f       	subi	r22, 0xFE	; 254
 e2a:	7f 4f       	sbci	r23, 0xFF	; 255
 e2c:	8f 4f       	sbci	r24, 0xFF	; 255
 e2e:	9f 4f       	sbci	r25, 0xFF	; 255
 e30:	af 4f       	sbci	r26, 0xFF	; 255
 e32:	b1 e0       	ldi	r27, 0x01	; 1
 e34:	3e d0       	rcall	.+124    	; 0xeb2 <__ultoa_invert+0x9c>
 e36:	b4 e0       	ldi	r27, 0x04	; 4
 e38:	3c d0       	rcall	.+120    	; 0xeb2 <__ultoa_invert+0x9c>
 e3a:	67 0f       	add	r22, r23
 e3c:	78 1f       	adc	r23, r24
 e3e:	89 1f       	adc	r24, r25
 e40:	9a 1f       	adc	r25, r26
 e42:	a1 1d       	adc	r26, r1
 e44:	68 0f       	add	r22, r24
 e46:	79 1f       	adc	r23, r25
 e48:	8a 1f       	adc	r24, r26
 e4a:	91 1d       	adc	r25, r1
 e4c:	a1 1d       	adc	r26, r1
 e4e:	6a 0f       	add	r22, r26
 e50:	71 1d       	adc	r23, r1
 e52:	81 1d       	adc	r24, r1
 e54:	91 1d       	adc	r25, r1
 e56:	a1 1d       	adc	r26, r1
 e58:	20 d0       	rcall	.+64     	; 0xe9a <__ultoa_invert+0x84>
 e5a:	09 f4       	brne	.+2      	; 0xe5e <__ultoa_invert+0x48>
 e5c:	68 94       	set
 e5e:	3f 91       	pop	r19
 e60:	2a e0       	ldi	r18, 0x0A	; 10
 e62:	26 9f       	mul	r18, r22
 e64:	11 24       	eor	r1, r1
 e66:	30 19       	sub	r19, r0
 e68:	30 5d       	subi	r19, 0xD0	; 208
 e6a:	31 93       	st	Z+, r19
 e6c:	de f6       	brtc	.-74     	; 0xe24 <__ultoa_invert+0xe>
 e6e:	cf 01       	movw	r24, r30
 e70:	08 95       	ret
 e72:	46 2f       	mov	r20, r22
 e74:	47 70       	andi	r20, 0x07	; 7
 e76:	40 5d       	subi	r20, 0xD0	; 208
 e78:	41 93       	st	Z+, r20
 e7a:	b3 e0       	ldi	r27, 0x03	; 3
 e7c:	0f d0       	rcall	.+30     	; 0xe9c <__ultoa_invert+0x86>
 e7e:	c9 f7       	brne	.-14     	; 0xe72 <__ultoa_invert+0x5c>
 e80:	f6 cf       	rjmp	.-20     	; 0xe6e <__ultoa_invert+0x58>
 e82:	46 2f       	mov	r20, r22
 e84:	4f 70       	andi	r20, 0x0F	; 15
 e86:	40 5d       	subi	r20, 0xD0	; 208
 e88:	4a 33       	cpi	r20, 0x3A	; 58
 e8a:	18 f0       	brcs	.+6      	; 0xe92 <__ultoa_invert+0x7c>
 e8c:	49 5d       	subi	r20, 0xD9	; 217
 e8e:	31 fd       	sbrc	r19, 1
 e90:	40 52       	subi	r20, 0x20	; 32
 e92:	41 93       	st	Z+, r20
 e94:	02 d0       	rcall	.+4      	; 0xe9a <__ultoa_invert+0x84>
 e96:	a9 f7       	brne	.-22     	; 0xe82 <__ultoa_invert+0x6c>
 e98:	ea cf       	rjmp	.-44     	; 0xe6e <__ultoa_invert+0x58>
 e9a:	b4 e0       	ldi	r27, 0x04	; 4
 e9c:	a6 95       	lsr	r26
 e9e:	97 95       	ror	r25
 ea0:	87 95       	ror	r24
 ea2:	77 95       	ror	r23
 ea4:	67 95       	ror	r22
 ea6:	ba 95       	dec	r27
 ea8:	c9 f7       	brne	.-14     	; 0xe9c <__ultoa_invert+0x86>
 eaa:	00 97       	sbiw	r24, 0x00	; 0
 eac:	61 05       	cpc	r22, r1
 eae:	71 05       	cpc	r23, r1
 eb0:	08 95       	ret
 eb2:	9b 01       	movw	r18, r22
 eb4:	ac 01       	movw	r20, r24
 eb6:	0a 2e       	mov	r0, r26
 eb8:	06 94       	lsr	r0
 eba:	57 95       	ror	r21
 ebc:	47 95       	ror	r20
 ebe:	37 95       	ror	r19
 ec0:	27 95       	ror	r18
 ec2:	ba 95       	dec	r27
 ec4:	c9 f7       	brne	.-14     	; 0xeb8 <__ultoa_invert+0xa2>
 ec6:	62 0f       	add	r22, r18
 ec8:	73 1f       	adc	r23, r19
 eca:	84 1f       	adc	r24, r20
 ecc:	95 1f       	adc	r25, r21
 ece:	a0 1d       	adc	r26, r0
 ed0:	08 95       	ret

00000ed2 <_exit>:
 ed2:	f8 94       	cli

00000ed4 <__stop_program>:
 ed4:	ff cf       	rjmp	.-2      	; 0xed4 <__stop_program>
